{"version":3,"names":["_componentTree","require","_textInput","_pointerEvents","_hostComponentNames","_eventBuilder","_utils","_constants","press","_x","_press","apply","arguments","_asyncToGenerator2","default","element","basePress","config","type","duration","longPress","_x2","_x3","_longPress","options","_options$duration","_ref","isPressableText","emitTextPressEvents","isHostTextInput","isTextInputEditable","isPointerEventEnabled","emitTextInputPressEvents","isEnabledTouchResponder","emitPressablePressEvents","hostParentElement","getHostParent","_x4","_x5","_x6","_ref2","warnAboutRealTimersIfNeeded","wait","dispatchEvent","EventBuilder","Common","responderGrant","responderRelease","DEFAULT_MIN_PRESS_DURATION","_x7","_x8","_x9","props","onStartShouldSetResponder","hasPressEventHandler","Boolean","onPress","onLongPress","onPressIn","onPressOut","isHostText","disabled","_x10","_x11","_x12","_emitTextPressEvents","touch","_x13","_x14","_x15","_emitTextInputPressEvents"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import { ReactTestInstance } from 'react-test-renderer';\nimport { getHostParent } from '../../helpers/component-tree';\nimport { isTextInputEditable } from '../../helpers/text-input';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { isHostText, isHostTextInput } from '../../helpers/host-component-names';\nimport { EventBuilder } from '../event-builder';\nimport { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait, warnAboutRealTimersIfNeeded } from '../utils';\nimport { DEFAULT_MIN_PRESS_DURATION } from './constants';\n\nexport interface PressOptions {\n  duration?: number;\n}\n\nexport async function press(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  await basePress(this.config, element, {\n    type: 'press',\n    duration: 0,\n  });\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options?: PressOptions,\n): Promise<void> {\n  await basePress(this.config, element, {\n    type: 'longPress',\n    duration: options?.duration ?? 500,\n  });\n}\n\ninterface BasePressOptions {\n  type: 'press' | 'longPress';\n  duration: number;\n}\n\nconst basePress = async (\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n): Promise<void> => {\n  if (isPressableText(element)) {\n    await emitTextPressEvents(config, element, options);\n    return;\n  }\n\n  if (isHostTextInput(element) && isTextInputEditable(element) && isPointerEventEnabled(element)) {\n    await emitTextInputPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await emitPressablePressEvents(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nconst emitPressablePressEvents = async (\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) => {\n  warnAboutRealTimersIfNeeded();\n\n  await wait(config);\n\n  dispatchEvent(element, 'responderGrant', EventBuilder.Common.responderGrant());\n\n  await wait(config, options.duration);\n\n  dispatchEvent(element, 'responderRelease', EventBuilder.Common.responderRelease());\n\n  // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION\n  // before emitting the `pressOut` event. We need to wait here, so that\n  // `press()` function does not return before that.\n  if (DEFAULT_MIN_PRESS_DURATION - options.duration > 0) {\n    await wait(config, DEFAULT_MIN_PRESS_DURATION - options.duration);\n  }\n};\n\nconst isEnabledTouchResponder = (element: ReactTestInstance) => {\n  return isPointerEventEnabled(element) && element.props.onStartShouldSetResponder?.();\n};\n\nconst isPressableText = (element: ReactTestInstance) => {\n  const hasPressEventHandler = Boolean(\n    element.props.onPress ||\n      element.props.onLongPress ||\n      element.props.onPressIn ||\n      element.props.onPressOut,\n  );\n\n  return (\n    isHostText(element) &&\n    isPointerEventEnabled(element) &&\n    !element.props.disabled &&\n    hasPressEventHandler\n  );\n};\n\n/**\n * Dispatches a press event sequence for Text.\n */\nasync function emitTextPressEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  // Emit either `press` or `longPress`.\n  dispatchEvent(element, options.type, EventBuilder.Common.touch());\n\n  await wait(config, options.duration);\n  dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n}\n\n/**\n * Dispatches a press event sequence for TextInput.\n */\nasync function emitTextInputPressEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  // Note: TextInput does not have `onPress`/`onLongPress` props.\n\n  await wait(config, options.duration);\n  dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n}\n"],"mappings":"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","ignoreList":[]}