61ceabfaf5de4ed643d5842897274f22
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useOnAction;
var React = _interopRequireWildcard(require("react"));
var _NavigationBuilderContext = _interopRequireDefault(require("./NavigationBuilderContext"));
var _useOnPreventRemove = _interopRequireWildcard(require("./useOnPreventRemove"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function useOnAction(_ref) {
  var router = _ref.router,
    getState = _ref.getState,
    setState = _ref.setState,
    key = _ref.key,
    actionListeners = _ref.actionListeners,
    beforeRemoveListeners = _ref.beforeRemoveListeners,
    routerConfigOptions = _ref.routerConfigOptions,
    emitter = _ref.emitter;
  var _React$useContext = React.useContext(_NavigationBuilderContext.default),
    onActionParent = _React$useContext.onAction,
    onRouteFocusParent = _React$useContext.onRouteFocus,
    addListenerParent = _React$useContext.addListener,
    onDispatchAction = _React$useContext.onDispatchAction;
  var routerConfigOptionsRef = React.useRef(routerConfigOptions);
  React.useEffect(function () {
    routerConfigOptionsRef.current = routerConfigOptions;
  });
  var onAction = React.useCallback(function (action) {
    var visitedNavigators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();
    var state = getState();
    if (visitedNavigators.has(state.key)) {
      return false;
    }
    visitedNavigators.add(state.key);
    if (typeof action.target !== 'string' || action.target === state.key) {
      var result = router.getStateForAction(state, action, routerConfigOptionsRef.current);
      result = result === null && action.target === state.key ? state : result;
      if (result !== null) {
        onDispatchAction(action, state === result);
        if (state !== result) {
          var isPrevented = (0, _useOnPreventRemove.shouldPreventRemove)(emitter, beforeRemoveListeners, state.routes, result.routes, action);
          if (isPrevented) {
            return true;
          }
          setState(result);
        }
        if (onRouteFocusParent !== undefined) {
          var shouldFocus = router.shouldActionChangeFocus(action);
          if (shouldFocus && key !== undefined) {
            onRouteFocusParent(key);
          }
        }
        return true;
      }
    }
    if (onActionParent !== undefined) {
      if (onActionParent(action, visitedNavigators)) {
        return true;
      }
    }
    for (var i = actionListeners.length - 1; i >= 0; i--) {
      var listener = actionListeners[i];
      if (listener(action, visitedNavigators)) {
        return true;
      }
    }
    return false;
  }, [actionListeners, beforeRemoveListeners, emitter, getState, key, onActionParent, onDispatchAction, onRouteFocusParent, router, setState]);
  (0, _useOnPreventRemove.default)({
    getState: getState,
    emitter: emitter,
    beforeRemoveListeners: beforeRemoveListeners
  });
  React.useEffect(function () {
    return addListenerParent === null || addListenerParent === void 0 ? void 0 : addListenerParent('action', onAction);
  }, [addListenerParent, onAction]);
  return onAction;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9OYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3VzZU9uUHJldmVudFJlbW92ZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJ1c2VPbkFjdGlvbiIsIl9yZWYiLCJyb3V0ZXIiLCJnZXRTdGF0ZSIsInNldFN0YXRlIiwiYWN0aW9uTGlzdGVuZXJzIiwiYmVmb3JlUmVtb3ZlTGlzdGVuZXJzIiwicm91dGVyQ29uZmlnT3B0aW9ucyIsImVtaXR0ZXIiLCJfUmVhY3QkdXNlQ29udGV4dCIsInVzZUNvbnRleHQiLCJvbkFjdGlvblBhcmVudCIsIm9uQWN0aW9uIiwib25Sb3V0ZUZvY3VzUGFyZW50Iiwib25Sb3V0ZUZvY3VzIiwiYWRkTGlzdGVuZXJQYXJlbnQiLCJhZGRMaXN0ZW5lciIsIm9uRGlzcGF0Y2hBY3Rpb24iLCJyb3V0ZXJDb25maWdPcHRpb25zUmVmIiwidXNlUmVmIiwidXNlRWZmZWN0IiwiY3VycmVudCIsInVzZUNhbGxiYWNrIiwiYWN0aW9uIiwidmlzaXRlZE5hdmlnYXRvcnMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJTZXQiLCJzdGF0ZSIsImFkZCIsInRhcmdldCIsInJlc3VsdCIsImdldFN0YXRlRm9yQWN0aW9uIiwiaXNQcmV2ZW50ZWQiLCJzaG91bGRQcmV2ZW50UmVtb3ZlIiwicm91dGVzIiwic2hvdWxkRm9jdXMiLCJzaG91bGRBY3Rpb25DaGFuZ2VGb2N1cyIsImkiLCJsaXN0ZW5lciJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VPbkFjdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQU9BLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLHlCQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFNQSxJQUFBRyxtQkFBQSxHQUFBSix1QkFBQSxDQUFBQyxPQUFBO0FBQStFLFNBQUFFLHVCQUFBRSxHQUFBO0VBQUEsT0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQTtJQUFBRSxPQUFBLEVBQUFGO0VBQUE7QUFBQTtBQUFBLFNBQUFHLHlCQUFBQyxXQUFBO0VBQUEsV0FBQUMsT0FBQTtFQUFBLElBQUFDLGlCQUFBLE9BQUFELE9BQUE7RUFBQSxJQUFBRSxnQkFBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUE7SUFBQSxPQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBO0VBQUEsR0FBQUYsV0FBQTtBQUFBO0FBQUEsU0FBQVQsd0JBQUFLLEdBQUEsRUFBQUksV0FBQTtFQUFBLEtBQUFBLFdBQUEsSUFBQUosR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUE7SUFBQSxPQUFBRCxHQUFBO0VBQUE7RUFBQSxJQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBO0lBQUE7TUFBQUUsT0FBQSxFQUFBRjtJQUFBO0VBQUE7RUFBQSxJQUFBUSxLQUFBLEdBQUFMLHdCQUFBLENBQUFDLFdBQUE7RUFBQSxJQUFBSSxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBVCxHQUFBO0lBQUEsT0FBQVEsS0FBQSxDQUFBRSxHQUFBLENBQUFWLEdBQUE7RUFBQTtFQUFBLElBQUFXLE1B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