{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_native","_reactRedux","_hooks","_ordersSlice","_OrderListItem","_interopRequireDefault","_CheckBox","_OrderScreenWrapper","_Total","_PayButton","_theme","_builders","_constants","_routes","_styles","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","testID","SCREEN_NAMES","MY_ORDER","MyOrder","dispatch","useDispatch","restaurantId","useAppSelector","selectRestaurantId","qrCodeName","selectRestaurantQrCodeName","navigation","useNavigation","myOrder","selectMyOrder","isSelectedAll","orderItems","every","item","checked","useLayoutEffect","setOptions","tabBarLabel","useEffect","getOrdersThunk","checkUncheckAll","useCallback","isCheck","checkUncheckMyOrderItems","makeData","useMemo","newItems","filter","status","ORDER_STATUS","New","inProgressItems","InProgress","readyItems","Ready","data","length","push","title","totalPrice","reduce","acc","curr","isPaid","amount","price","onChangeCheckOrderItem","_ref","check","itemId","onChangeAmountItem","_ref2","updatedAmount","changeAmountMyOrderItem","renderItem","_ref3","jsx","orderItem","onChangeCheckbox","onChangeAmount","renderSectionHeader","_ref4","section","Text","style","styles","sectionHeader","children","amountItems","_myOrder$orderItems","renderSectionFooter","payOrders","body","makeMyOrderBodyToPost","postOrdersThunk","jsxs","testId","SectionList","contentContainerStyle","sectionContainer","ListHeaderComponent","onChange","checkbox","checkedColor","COLORS","GRADIENT_TOP","sections","keyExtractor","index","id","ListFooterComponent","View","payButtonContainer","onPress","_default","exports"],"sources":["index.tsx"],"sourcesContent":["/* REACT */\nimport React, {useCallback, useEffect, useLayoutEffect, useMemo} from 'react';\nimport {View, Text, SectionList} from 'react-native';\n/* MODULES */\nimport {useNavigation} from '@react-navigation/native';\n/* STORE */\nimport {useDispatch} from 'react-redux';\nimport {useAppSelector} from '../../store/hooks';\nimport {selectMyOrder} from '../../store/slices/ordersSlice';\nimport {\n  checkUncheckMyOrderItems,\n  getOrdersThunk,\n  changeAmountMyOrderItem,\n  selectRestaurantId,\n  selectRestaurantQrCodeName,\n  postOrdersThunk,\n} from '../../store/slices/ordersSlice';\n/* COMPONENTS */\nimport OrderListItem from '../../components/OrderListItem';\nimport CheckBox from '../../components/CheckBox';\nimport OrderScreenWrapper from '../../components/OrderScreenWrapper';\nimport Total from '../../components/Total';\nimport PayButton from '../../components/PayButton';\n/* UTILS */\nimport {COLORS} from '../../utils/theme';\nimport {makeMyOrderBodyToPost} from '../../utils/builders';\nimport {ORDER_STATUS} from '../../utils/constants';\nimport {Order, OrderItem} from '../../utils/types';\nimport {SCREEN_NAMES} from '../../navigation/routes';\n/* STYLES */\nimport styles from './styles';\n\nconst testID = SCREEN_NAMES.MY_ORDER;\n\nconst MyOrder = () => {\n  const dispatch = useDispatch();\n  const restaurantId = useAppSelector(selectRestaurantId);\n  const qrCodeName = useAppSelector(selectRestaurantQrCodeName);\n\n  const navigation = useNavigation();\n  const myOrder = useAppSelector(selectMyOrder);\n  const isSelectedAll = myOrder?.orderItems.every(\n    item => item.checked,\n  ) as boolean;\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      tabBarLabel: SCREEN_NAMES.MY_ORDER,\n    });\n  }, [navigation]);\n\n  useEffect(() => {\n    // @ts-ignore\n    dispatch(getOrdersThunk());\n  }, [dispatch]);\n\n  const checkUncheckAll = useCallback(\n    (isCheck: boolean) =>\n      dispatch(checkUncheckMyOrderItems({checked: isCheck})),\n    [dispatch],\n  );\n\n  const makeData = useMemo(() => {\n    const newItems = myOrder?.orderItems.filter(\n      item => item.status === ORDER_STATUS.New,\n    );\n\n    const inProgressItems = myOrder?.orderItems.filter(\n      item => item.status === ORDER_STATUS.InProgress,\n    );\n\n    const readyItems = myOrder?.orderItems.filter(\n      item => item.status === ORDER_STATUS.Ready,\n    );\n\n    const data = [];\n\n    if (newItems?.length) {\n      data.push({\n        title: 'New',\n        data: newItems,\n      });\n    }\n\n    if (inProgressItems?.length) {\n      data.push({\n        title: 'In Progress',\n        data: inProgressItems,\n      });\n    }\n\n    if (readyItems?.length) {\n      data.push({\n        title: 'Ready',\n        data: readyItems,\n      });\n    }\n\n    return data;\n  }, [myOrder]);\n\n  const totalPrice = useCallback(() => {\n    return (\n      myOrder?.orderItems.reduce((acc, curr) => {\n        return curr.checked && !curr.isPaid\n          ? acc + curr.amount * curr.price\n          : acc;\n      }, 0) || 0\n    );\n  }, [myOrder]);\n\n  const onChangeCheckOrderItem = useCallback(\n    ({check, itemId}: {check: boolean; itemId: string}) => {\n      dispatch(checkUncheckMyOrderItems({checked: check, itemId}));\n    },\n    [dispatch],\n  );\n\n  const onChangeAmountItem = useCallback(\n    ({updatedAmount, itemId}: {updatedAmount: number; itemId: string}) => {\n      dispatch(changeAmountMyOrderItem({updatedAmount, itemId}));\n    },\n    [dispatch],\n  );\n\n  const renderItem = useCallback(\n    ({item}: {item: OrderItem; index: number}) => (\n      <OrderListItem\n        orderItem={item}\n        onChangeCheckbox={onChangeCheckOrderItem}\n        onChangeAmount={onChangeAmountItem}\n      />\n    ),\n    [onChangeCheckOrderItem, onChangeAmountItem],\n  );\n\n  const renderSectionHeader = useCallback(\n    ({section: {title}}: {section: {title: string}}) => (\n      <Text style={styles.sectionHeader}>{title}</Text>\n    ),\n    [],\n  );\n\n  const amountItems = useMemo(() => {\n    return myOrder?.orderItems?.reduce((acc, curr) => {\n      return curr.checked && !curr?.isPaid ? acc + curr.amount : acc;\n    }, 0);\n  }, [myOrder]);\n\n  const renderSectionFooter = useCallback(\n    () => <Total amountItems={amountItems as number} price={totalPrice()} />,\n    [amountItems, totalPrice],\n  );\n\n  const payOrders = () => {\n    const body = makeMyOrderBodyToPost(myOrder as Order);\n    // @ts-ignore\n    dispatch(postOrdersThunk({restaurantId, qrCodeName, body}));\n  };\n\n  return (\n    <OrderScreenWrapper testId={`${testID}-container`}>\n      <SectionList\n        testID={`${testID}-list`}\n        contentContainerStyle={styles.sectionContainer}\n        ListHeaderComponent={\n          <CheckBox\n            checked={isSelectedAll}\n            title={isSelectedAll ? 'Unselect all' : 'Select all'}\n            onChange={checkUncheckAll}\n            style={styles.checkbox}\n            checkedColor={COLORS.GRADIENT_TOP}\n            testID={`${testID}-list-header-checkbox`}\n          />\n        }\n        sections={makeData}\n        keyExtractor={(item, index) => item.id + index}\n        renderItem={renderItem}\n        renderSectionHeader={renderSectionHeader}\n        ListFooterComponent={renderSectionFooter}\n      />\n      <View style={styles.payButtonContainer}>\n        <PayButton\n          amountItems={amountItems as number}\n          price={totalPrice() as number}\n          onPress={payOrders}\n        />\n      </View>\n    </OrderScreenWrapper>\n  );\n};\n\nexport default MyOrder;\n"],"mappings":"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","ignoreList":[]}