{"version":3,"names":["DEFAULT_STEPS_COUNT","createScrollSteps","target","initialOffset","interpolator","y","map","x","linearInterpolator","end","start","steps","result","i","push","lerp","inertialInterpolator","factor","v0","v1","t"],"sources":["../../../src/user-event/scroll/utils.ts"],"sourcesContent":["import { ContentOffset } from '../event-builder/scroll-view';\n\nconst DEFAULT_STEPS_COUNT = 5;\n\ntype InterpolatorFn = (end: number, start: number, steps: number) => number[];\n\nexport function createScrollSteps(\n  target: Partial<ContentOffset>,\n  initialOffset: ContentOffset,\n  interpolator: InterpolatorFn,\n): ContentOffset[] {\n  if (target.y != null) {\n    return interpolator(target.y, initialOffset.y, DEFAULT_STEPS_COUNT).map((y) => ({\n      y,\n      x: initialOffset.x,\n    }));\n  }\n\n  if (target.x != null) {\n    return interpolator(target.x, initialOffset.x, DEFAULT_STEPS_COUNT).map((x) => ({\n      x,\n      y: initialOffset.y,\n    }));\n  }\n\n  return [];\n}\n\n/**\n * Generate linear scroll values (with equal steps).\n */\nexport function linearInterpolator(end: number, start: number, steps: number): number[] {\n  if (end === start) {\n    return [end, start];\n  }\n\n  const result = [];\n  for (let i = 0; i < steps; i += 1) {\n    result.push(lerp(start, end, i / (steps - 1)));\n  }\n\n  return result;\n}\n\n/**\n * Generate inertial scroll values (exponentially slowing down).\n */\nexport function inertialInterpolator(end: number, start: number, steps: number): number[] {\n  if (end === start) {\n    return [end, start];\n  }\n\n  const result = [];\n  let factor = 1;\n  for (let i = 0; i < steps - 1; i += 1) {\n    result.push(lerp(end, start, factor));\n    factor /= 2;\n  }\n\n  result.push(end);\n  return result;\n}\n\n/**\n * Linear interpolation function\n * @param v0 initial value (when t = 0)\n * @param v1 final value (when t = 1)\n * @param t interpolation factor form 0 to 1\n * @returns interpolated value between v0 and v1\n */\nexport function lerp(v0: number, v1: number, t: number) {\n  return v0 + t * (v1 - v0);\n}\n"],"mappings":";;;;;;;;;AAEA,IAAMA,mBAAmB,GAAG,CAAC;AAItB,SAASC,iBAAiBA,CAC/BC,MAA8B,EAC9BC,aAA4B,EAC5BC,YAA4B,EACX;EACjB,IAAIF,MAAM,CAACG,CAAC,IAAI,IAAI,EAAE;IACpB,OAAOD,YAAY,CAACF,MAAM,CAACG,CAAC,EAAEF,aAAa,CAACE,CAAC,EAAEL,mBAAmB,CAAC,CAACM,GAAG,CAAE,UAAAD,CAAC;MAAA,OAAM;QAC9EA,CAAC,EAADA,CAAC;QACDE,CAAC,EAAEJ,aAAa,CAACI;MACnB,CAAC;IAAA,CAAC,CAAC;EACL;EAEA,IAAIL,MAAM,CAACK,CAAC,IAAI,IAAI,EAAE;IACpB,OAAOH,YAAY,CAACF,MAAM,CAACK,CAAC,EAAEJ,aAAa,CAACI,CAAC,EAAEP,mBAAmB,CAAC,CAACM,GAAG,CAAE,UAAAC,CAAC;MAAA,OAAM;QAC9EA,CAAC,EAADA,CAAC;QACDF,CAAC,EAAEF,aAAa,CAACE;MACnB,CAAC;IAAA,CAAC,CAAC;EACL;EAEA,OAAO,EAAE;AACX;AAKO,SAASG,kBAAkBA,CAACC,GAAW,EAAEC,KAAa,EAAEC,KAAa,EAAY;EACtF,IAAIF,GAAG,KAAKC,KAAK,EAAE;IACjB,OAAO,CAACD,GAAG,EAAEC,KAAK,CAAC;EACrB;EAEA,IAAME,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,IAAI,CAAC,EAAE;IACjCD,MAAM,CAACE,IAAI,CAACC,IAAI,CAACL,KAAK,EAAED,GAAG,EAAEI,CAAC,IAAIF,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EAChD;EAEA,OAAOC,MAAM;AACf;AAKO,SAASI,oBAAoBA,CAACP,GAAW,EAAEC,KAAa,EAAEC,KAAa,EAAY;EACxF,IAAIF,GAAG,KAAKC,KAAK,EAAE;IACjB,OAAO,CAACD,GAAG,EAAEC,KAAK,CAAC;EACrB;EAEA,IAAME,MAAM,GAAG,EAAE;EACjB,IAAIK,MAAM,GAAG,CAAC;EACd,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,GAAG,CAAC,EAAEE,CAAC,IAAI,CAAC,EAAE;IACrCD,MAAM,CAACE,IAAI,CAACC,IAAI,CAACN,GAAG,EAAEC,KAAK,EAAEO,MAAM,CAAC,CAAC;IACrCA,MAAM,IAAI,CAAC;EACb;EAEAL,MAAM,CAACE,IAAI,CAACL,GAAG,CAAC;EAChB,OAAOG,MAAM;AACf;AASO,SAASG,IAAIA,CAACG,EAAU,EAAEC,EAAU,EAAEC,CAAS,EAAE;EACtD,OAAOF,EAAE,GAAGE,CAAC,IAAID,EAAE,GAAGD,EAAE,CAAC;AAC3B","ignoreList":[]}