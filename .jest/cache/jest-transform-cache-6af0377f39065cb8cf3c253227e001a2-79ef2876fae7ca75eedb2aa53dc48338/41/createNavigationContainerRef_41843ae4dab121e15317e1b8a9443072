78306031f0f5ea1a903ef06eb9b2117a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NOT_INITIALIZED_ERROR = void 0;
exports.default = createNavigationContainerRef;
var _routers = require("@react-navigation/routers");
var NOT_INITIALIZED_ERROR = "The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.";
exports.NOT_INITIALIZED_ERROR = NOT_INITIALIZED_ERROR;
function createNavigationContainerRef() {
  var methods = [].concat((0, _toConsumableArray2.default)(Object.keys(_routers.CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);
  var listeners = {};
  var removeListener = function removeListener(event, callback) {
    if (listeners[event]) {
      listeners[event] = listeners[event].filter(function (cb) {
        return cb !== callback;
      });
    }
  };
  var current = null;
  var ref = Object.assign({
    get current() {
      return current;
    },
    set current(value) {
      current = value;
      if (value != null) {
        Object.entries(listeners).forEach(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            event = _ref2[0],
            callbacks = _ref2[1];
          callbacks.forEach(function (callback) {
            value.addListener(event, callback);
          });
        });
      }
    },
    isReady: function isReady() {
      if (current == null) {
        return false;
      }
      return current.isReady();
    }
  }, methods.reduce(function (acc, name) {
    acc[name] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (current == null) {
        switch (name) {
          case 'addListener':
            {
              var event = args[0],
                callback = args[1];
              listeners[event] = listeners[event] || [];
              listeners[event].push(callback);
              return function () {
                return removeListener(event, callback);
              };
            }
          case 'removeListener':
            {
              var _event = args[0],
                _callback = args[1];
              removeListener(_event, _callback);
              break;
            }
          default:
            console.error(NOT_INITIALIZED_ERROR);
        }
      } else {
        var _current;
        return (_current = current)[name].apply(_current, args);
      }
    };
    return acc;
  }, {}));
  return ref;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcm91dGVycyIsInJlcXVpcmUiLCJOT1RfSU5JVElBTElaRURfRVJST1IiLCJleHBvcnRzIiwiY3JlYXRlTmF2aWdhdGlvbkNvbnRhaW5lclJlZiIsIm1ldGhvZHMiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiZGVmYXVsdCIsIk9iamVjdCIsImtleXMiLCJDb21tb25BY3Rpb25zIiwibGlzdGVuZXJzIiwicmVtb3ZlTGlzdGVuZXIiLCJldmVudCIsImNhbGxiYWNrIiwiZmlsdGVyIiwiY2IiLCJjdXJyZW50IiwicmVmIiwiYXNzaWduIiwidmFsdWUiLCJlbnRyaWVzIiwiZm9yRWFjaCIsIl9yZWYiLCJfcmVmMiIsIl9zbGljZWRUb0FycmF5MiIsImNhbGxiYWNrcyIsImFkZExpc3RlbmVyIiwiaXNSZWFkeSIsInJlZHVjZSIsImFjYyIsIm5hbWUiLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsInB1c2giLCJjb25zb2xlIiwiZXJyb3IiLCJfY3VycmVudCIsImFwcGx5Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NyZWF0ZU5hdmlnYXRpb25Db250YWluZXJSZWYudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBUU8sSUFBTUMscUJBQXFCLEdBQ2hDLCtRQUErUTtBQUFDQyxPQUFBLENBQUFELHFCQUFBLEdBQUFBLHFCQUFBO0FBRW5RLFNBQVNFLDRCQUE0QkEsQ0FBQSxFQUVGO0VBQ2hELElBQU1DLE9BQU8sTUFBQUMsTUFBQSxLQUFBQyxtQkFBQSxDQUFBQyxPQUFBLEVBQ1JDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDVixRQUFBLENBQUFXLGFBQWEsQ0FBQyxJQUM3QixhQUFhLEVBQ2IsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFdBQVcsRUFDWCxjQUFjLEVBQ2QsVUFB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