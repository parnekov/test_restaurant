802bf225c6ebf72150c18ff9e830e299
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapAsync = wrapAsync;
var _reactTestRenderer = require("react-test-renderer");
var _act = require("../act");
var _flushMicroTasks = require("../flush-micro-tasks");
var _reactVersions = require("../react-versions");
function wrapAsync(_x) {
  return _wrapAsync.apply(this, arguments);
}
function _wrapAsync() {
  _wrapAsync = (0, _asyncToGenerator2.default)(function* (callback) {
    if ((0, _reactVersions.checkReactVersionAtLeast)(18, 0)) {
      var previousActEnvironment = (0, _act.getIsReactActEnvironment)();
      (0, _act.setReactActEnvironment)(false);
      try {
        var _result = yield callback();
        yield (0, _flushMicroTasks.flushMicroTasksLegacy)();
        return _result;
      } finally {
        (0, _act.setReactActEnvironment)(previousActEnvironment);
      }
    }
    if (!(0, _reactVersions.checkReactVersionAtLeast)(16, 9)) {
      return callback();
    }
    var result;
    yield (0, _reactTestRenderer.act)((0, _asyncToGenerator2.default)(function* () {
      result = yield callback();
    }));
    return result;
  });
  return _wrapAsync.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3RUZXN0UmVuZGVyZXIiLCJyZXF1aXJlIiwiX2FjdCIsIl9mbHVzaE1pY3JvVGFza3MiLCJfcmVhY3RWZXJzaW9ucyIsIndyYXBBc3luYyIsIl94IiwiX3dyYXBBc3luYyIsImFwcGx5IiwiYXJndW1lbnRzIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiZGVmYXVsdCIsImNhbGxiYWNrIiwiY2hlY2tSZWFjdFZlcnNpb25BdExlYXN0IiwicHJldmlvdXNBY3RFbnZpcm9ubWVudCIsImdldElzUmVhY3RBY3RFbnZpcm9ubWVudCIsInNldFJlYWN0QWN0RW52aXJvbm1lbnQiLCJyZXN1bHQiLCJmbHVzaE1pY3JvVGFza3NMZWdhY3kiLCJhY3QiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvaGVscGVycy93cmFwLWFzeW5jLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGlzdGFuYnVsIGlnbm9yZSBmaWxlICovXG5cbmltcG9ydCB7IGFjdCB9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHsgZ2V0SXNSZWFjdEFjdEVudmlyb25tZW50LCBzZXRSZWFjdEFjdEVudmlyb25tZW50IH0gZnJvbSAnLi4vYWN0JztcbmltcG9ydCB7IGZsdXNoTWljcm9UYXNrc0xlZ2FjeSB9IGZyb20gJy4uL2ZsdXNoLW1pY3JvLXRhc2tzJztcbmltcG9ydCB7IGNoZWNrUmVhY3RWZXJzaW9uQXRMZWFzdCB9IGZyb20gJy4uL3JlYWN0LXZlcnNpb25zJztcblxuLyoqXG4gKiBSdW4gZ2l2ZW4gYXN5bmMgY2FsbGJhY2sgd2l0aCB0ZW1wb3JhcmlseSBkaXNhYmxlZCBgYWN0YCBlbnZpcm9ubWVudCBhbmQgZmx1c2hlcyBtaWNyb3Rhc2tzIHF1ZXVlLlxuICpcbiAqIEBwYXJhbSBjYWxsYmFjayBBc3luYyBjYWxsYmFjayB0byBydW5cbiAqIEByZXR1cm5zIFJlc3VsdCBvZiB0aGUgY2FsbGJhY2tcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyYXBBc3luYzxSZXN1bHQ+KGNhbGxiYWNrOiAoKSA9PiBQcm9taXNlPFJlc3VsdD4pOiBQcm9taXNlPFJlc3VsdD4ge1xuICBpZiAoY2hlY2tSZWFjdFZlcnNpb25BdExlYXN0KDE4LCAwKSkge1xuICAgIGNvbnN0IHByZXZpb3VzQWN0RW52aXJvbm1lbnQgPSBnZXRJc1JlYWN0QWN0RW52aXJvbm1lbnQoKTtcbiAgICBzZXRSZWFjdEFjdEVudmlyb25tZW50KGZhbHNlKTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjYWxsYmFjaygpO1xuICAgICAgLy8gRmx1c2ggdGhlIG1pY3JvdGFzayBxdWV1ZSBiZWZvcmUgcmVzdG9yaW5nIHRoZSBgYWN0YCBlbnZpcm9ubWVudFxuICAgICAgYXdhaXQgZmx1c2hNaWNyb1Rhc2tzTGVnYWN5KCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRSZWFjdEFjdEVudmlyb25tZW50KHByZXZpb3VzQWN0RW52aXJvbm1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY2hlY2tSZWFjdFZlcnNpb25BdExlYXN0KDE2LCA5KSkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9XG5cbiAgLy8gV3JhcHBpbmcgd2l0aCBhY3QgZm9yIHJlYWN0IHZlcnNpb24gMTYuOSB0byAxNy54XG4gIGxldCByZXN1bHQ6IFJlc3VsdDtcbiAgYXdhaXQgYWN0KGFzeW5jICgpID0+IHtcbiAgICByZXN1bHQgPSBhd2FpdCBjYWxsYmFjaygpO1xuICB9KTtcblxuICAvLyBFaXRoZXIgd2UgaGF2ZSByZXN1bHQgb3IgYGNhbGxiYWNrYCB0aHJldyBlcnJvclxuICByZXR1cm4gcmVzdWx0ITtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFQSxJQUFBQSxrQkFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsSUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsZ0JBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGNBQUEsR0FBQUgsT0FBQTtBQUFBLFNBUXNCSSxTQUFTQSxDQUFBQyxFQUFBO0VBQUEsT0FBQUMsVUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLFdBQUE7RUFBQUEsVUFBQSxPQUFBRyxrQkFBQSxDQUFBQyxPQUFBLEVBQXhCLFdBQWlDQyxRQUErQixFQUFtQjtJQUN4RixJQUFJLElBQUFSLGNBQUEsQ0FBQVMsd0JBQXdCLEVBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFO01BQ25DLElBQU1DLHNCQUFzQixHQUFHLElBQUFaLElBQUEsQ0FBQWEsd0JBQXdCLEVBQUMsQ0FBQztNQUN6RCxJQUFBYixJQUFBLENBQUFjLHNCQUFzQixFQUFDLEtBQUssQ0FBQztNQUU3QixJQUFJO1FBQ0YsSUFBTUMsT0FBTSxTQUFTTCxRQUFRLENBQUMsQ0FBQztRQUUvQixNQUFNLElBQUFULGdCQUFBLENBQUFlLHFCQUFxQixFQUFDLENBQUM7UUFDN0IsT0FBT0QsT0FBTTtNQUNmLENBQUMsU0FBUztRQUNSLElBQUFmLElBQUEsQ0FBQWMsc0JBQXNCLEVBQUNGLHNCQUFzQixDQUFDO01BQ2hEO0lBQ0Y7SUFFQSxJQUFJLENBQUMsSUFBQVYsY0FBQSxDQUFBUyx3QkFBd0IsRUFBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUU7TUFDcEMsT0FBT0QsUUFBUSxDQUFDLENBQUM7SUFDbkI7SUFHQSxJQUFJSyxNQUFjO0lBQ2xCLE1BQU0sSUFBQWpCLGtCQUFBLENBQUFtQixHQUFHLE1BQUFULGtCQUFBLENBQUFDLE9BQUEsRUFBQyxhQUFZO01BQ3BCTSxNQUFNLFNBQVNMLFFBQVEsQ0FBQyxDQUFDO0lBQzNCLENBQUMsRUFBQztJQUdGLE9BQU9LLE1BQU07RUFDZjtFQUFBLE9BQUFWLFVBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUEiLCJpZ25vcmVMaXN0IjpbXX0=