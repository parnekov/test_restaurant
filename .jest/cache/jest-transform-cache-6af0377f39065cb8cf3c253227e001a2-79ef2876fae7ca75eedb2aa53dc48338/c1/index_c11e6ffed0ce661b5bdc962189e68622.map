{"version":3,"names":["_interopRequireDefault","require","_asyncToGenerator2","_slicedToArray2","_classCallCheck2","_createClass2","Object","defineProperty","exports","value","default","TestEnvironment","_vm","data","_fakeTimers","_jestMock","_jestUtil","denyList","Set","nodeGlobals","Map","getOwnPropertyNames","globalThis","filter","global","has","map","nodeGlobalsKey","descriptor","getOwnPropertyDescriptor","Error","isString","NodeEnvironment","config","_context","customExportConditions","projectConfig","context","createContext","runInContext","assign","testEnvironmentOptions","contextGlobals","_loop","configurable","enumerable","get","writable","set","_ref","_ref2","Buffer","ArrayBuffer","Uint8Array","installCommonGlobals","globals","stackTraceLimit","Array","isArray","every","_configuredExportConditions","moduleMocker","ModuleMocker","timerIdToRef","id","ref","unref","timerRefToId","timer","fakeTimers","LegacyFakeTimers","timerConfig","idToRef","refToId","fakeTimersModern","ModernFakeTimers","key","_setup","setup","apply","arguments","_teardown","dispose","teardown","exportConditions","_this$_configuredExpo","getVmContext"],"sources":["index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.TestEnvironment = void 0;\nfunction _vm() {\n  const data = require('vm');\n  _vm = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n  _fakeTimers = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMock() {\n  const data = require('jest-mock');\n  _jestMock = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// some globals we do not want, either because deprecated or we set it ourselves\nconst denyList = new Set([\n  'GLOBAL',\n  'root',\n  'global',\n  'globalThis',\n  'Buffer',\n  'ArrayBuffer',\n  'Uint8Array',\n  // if env is loaded within a jest test\n  'jest-symbol-do-not-touch'\n]);\nconst nodeGlobals = new Map(\n  Object.getOwnPropertyNames(globalThis)\n    .filter(global => !denyList.has(global))\n    .map(nodeGlobalsKey => {\n      const descriptor = Object.getOwnPropertyDescriptor(\n        globalThis,\n        nodeGlobalsKey\n      );\n      if (!descriptor) {\n        throw new Error(\n          `No property descriptor for ${nodeGlobalsKey}, this is a bug in Jest.`\n        );\n      }\n      return [nodeGlobalsKey, descriptor];\n    })\n);\nfunction isString(value) {\n  return typeof value === 'string';\n}\nclass NodeEnvironment {\n  context;\n  fakeTimers;\n  fakeTimersModern;\n  global;\n  moduleMocker;\n  customExportConditions = ['node', 'node-addons'];\n  _configuredExportConditions;\n\n  // while `context` is unused, it should always be passed\n  constructor(config, _context) {\n    const {projectConfig} = config;\n    this.context = (0, _vm().createContext)();\n    const global = (0, _vm().runInContext)(\n      'this',\n      Object.assign(this.context, projectConfig.testEnvironmentOptions)\n    );\n    this.global = global;\n    const contextGlobals = new Set(Object.getOwnPropertyNames(global));\n    for (const [nodeGlobalsKey, descriptor] of nodeGlobals) {\n      if (!contextGlobals.has(nodeGlobalsKey)) {\n        if (descriptor.configurable) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get() {\n              const value = globalThis[nodeGlobalsKey];\n\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value,\n                writable: true\n              });\n              return value;\n            },\n            set(value) {\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value,\n                writable: true\n              });\n            }\n          });\n        } else if ('value' in descriptor) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            value: descriptor.value,\n            writable: descriptor.writable\n          });\n        } else {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            get: descriptor.get,\n            set: descriptor.set\n          });\n        }\n      }\n    }\n\n    // @ts-expect-error - Buffer and gc is \"missing\"\n    global.global = global;\n    global.Buffer = Buffer;\n    global.ArrayBuffer = ArrayBuffer;\n    // TextEncoder (global or via 'util') references a Uint8Array constructor\n    // different than the global one used by users in tests. This makes sure the\n    // same constructor is referenced by both.\n    global.Uint8Array = Uint8Array;\n    (0, _jestUtil().installCommonGlobals)(global, projectConfig.globals);\n\n    // Node's error-message stack size is limited at 10, but it's pretty useful\n    // to see more than that when a test fails.\n    global.Error.stackTraceLimit = 100;\n    if ('customExportConditions' in projectConfig.testEnvironmentOptions) {\n      const {customExportConditions} = projectConfig.testEnvironmentOptions;\n      if (\n        Array.isArray(customExportConditions) &&\n        customExportConditions.every(isString)\n      ) {\n        this._configuredExportConditions = customExportConditions;\n      } else {\n        throw new Error(\n          'Custom export conditions specified but they are not an array of strings'\n        );\n      }\n    }\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n    const timerIdToRef = id => ({\n      id,\n      ref() {\n        return this;\n      },\n      unref() {\n        return this;\n      }\n    });\n    const timerRefToId = timer => timer?.id;\n    this.fakeTimers = new (_fakeTimers().LegacyFakeTimers)({\n      config: projectConfig,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig: {\n        idToRef: timerIdToRef,\n        refToId: timerRefToId\n      }\n    });\n    this.fakeTimersModern = new (_fakeTimers().ModernFakeTimers)({\n      config: projectConfig,\n      global\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async setup() {}\n  async teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n    if (this.fakeTimersModern) {\n      this.fakeTimersModern.dispose();\n    }\n    this.context = null;\n    this.fakeTimers = null;\n    this.fakeTimersModern = null;\n  }\n  exportConditions() {\n    return this._configuredExportConditions ?? this.customExportConditions;\n  }\n  getVmContext() {\n    return this.context;\n  }\n}\nexports.default = NodeEnvironment;\nconst TestEnvironment = NodeEnvironment;\nexports.TestEnvironment = TestEnvironment;\n"],"mappings":"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","ignoreList":[]}