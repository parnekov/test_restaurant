{"version":3,"names":["Object","defineProperty","exports","value","printIteratorEntries","printIteratorValues","printListItems","printObjectProperties","getKeysOfEnumerableProperties","object","compareKeys","rawKeys","keys","sort","getOwnPropertySymbols","forEach","symbol","getOwnPropertyDescriptor","enumerable","push","iterator","config","indentation","depth","refs","printer","separator","arguments","length","undefined","result","width","current","next","done","spacingOuter","indentationNext","indent","maxWidth","name","spacingInner","min","list","i","val","key"],"sources":["collections.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printIteratorEntries = printIteratorEntries;\nexports.printIteratorValues = printIteratorValues;\nexports.printListItems = printListItems;\nexports.printObjectProperties = printObjectProperties;\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst getKeysOfEnumerableProperties = (object, compareKeys) => {\n  const rawKeys = Object.keys(object);\n  const keys = compareKeys !== null ? rawKeys.sort(compareKeys) : rawKeys;\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(object).forEach(symbol => {\n      if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n        keys.push(symbol);\n      }\n    });\n  }\n  return keys;\n};\n\n/**\n * Return entries (for example, of a map)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\nfunction printIteratorEntries(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  // Too bad, so sad that separator for ECMAScript Map has been ' => '\n  // What a distracting diff if you change a data structure to/from\n  // ECMAScript Object or Immutable.Map/OrderedMap which use the default.\n  separator = ': '\n) {\n  let result = '';\n  let width = 0;\n  let current = iterator.next();\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    while (!current.done) {\n      result += indentationNext;\n      if (width++ === config.maxWidth) {\n        result += '…';\n        break;\n      }\n      const name = printer(\n        current.value[0],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      const value = printer(\n        current.value[1],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      result += name + separator + value;\n      current = iterator.next();\n      if (!current.done) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\n\n/**\n * Return values (for example, of a set)\n * with spacing, indentation, and comma\n * without surrounding punctuation (braces or brackets)\n */\nfunction printIteratorValues(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) {\n  let result = '';\n  let width = 0;\n  let current = iterator.next();\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    while (!current.done) {\n      result += indentationNext;\n      if (width++ === config.maxWidth) {\n        result += '…';\n        break;\n      }\n      result += printer(current.value, config, indentationNext, depth, refs);\n      current = iterator.next();\n      if (!current.done) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\n\n/**\n * Return items (for example, of an array)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, brackets)\n **/\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n  let result = '';\n  if (list.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    for (let i = 0; i < list.length; i++) {\n      result += indentationNext;\n      if (i === config.maxWidth) {\n        result += '…';\n        break;\n      }\n      if (i in list) {\n        result += printer(list[i], config, indentationNext, depth, refs);\n      }\n      if (i < list.length - 1) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\n\n/**\n * Return properties of an object\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n  let result = '';\n  const keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n  if (keys.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = printer(key, config, indentationNext, depth, refs);\n      const value = printer(val[key], config, indentationNext, depth, refs);\n      result += `${indentationNext + name}: ${value}`;\n      if (i < keys.length - 1) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}