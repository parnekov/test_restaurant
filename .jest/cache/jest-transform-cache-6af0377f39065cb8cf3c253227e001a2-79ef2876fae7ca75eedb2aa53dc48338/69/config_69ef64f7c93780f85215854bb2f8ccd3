0b86faed68a16a010ee531d32137fdfa
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["defaultHidden"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configure = configure;
exports.configureInternal = configureInternal;
exports.getConfig = getConfig;
exports.resetToDefaults = resetToDefaults;
var defaultConfig = {
  asyncUtilTimeout: 1000,
  defaultIncludeHiddenElements: false
};
var config = Object.assign({}, defaultConfig);
function configure(options) {
  var _ref, _restOptions$defaultI;
  var defaultHidden = options.defaultHidden,
    restOptions = (0, _objectWithoutProperties2.default)(options, _excluded);
  var defaultIncludeHiddenElements = (_ref = (_restOptions$defaultI = restOptions.defaultIncludeHiddenElements) != null ? _restOptions$defaultI : defaultHidden) != null ? _ref : config.defaultIncludeHiddenElements;
  config = Object.assign({}, config, restOptions, {
    defaultIncludeHiddenElements: defaultIncludeHiddenElements
  });
}
function configureInternal(option) {
  config = Object.assign({}, config, option);
}
function resetToDefaults() {
  config = Object.assign({}, defaultConfig);
}
function getConfig() {
  return config;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0Q29uZmlnIiwiYXN5bmNVdGlsVGltZW91dCIsImRlZmF1bHRJbmNsdWRlSGlkZGVuRWxlbWVudHMiLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJjb25maWd1cmUiLCJvcHRpb25zIiwiX3JlZiIsIl9yZXN0T3B0aW9ucyRkZWZhdWx0SSIsImRlZmF1bHRIaWRkZW4iLCJyZXN0T3B0aW9ucyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJkZWZhdWx0IiwiX2V4Y2x1ZGVkIiwiY29uZmlndXJlSW50ZXJuYWwiLCJvcHRpb24iLCJyZXNldFRvRGVmYXVsdHMiLCJnZXRDb25maWciXSwic291cmNlcyI6WyIuLi9zcmMvY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlYnVnT3B0aW9ucyB9IGZyb20gJy4vaGVscGVycy9kZWJ1Zy1kZWVwJztcblxuLyoqXG4gKiBHbG9iYWwgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBSZWFjdCBOYXRpdmUgVGVzdGluZyBMaWJyYXJ5LlxuICovXG5cbmV4cG9ydCB0eXBlIENvbmZpZyA9IHtcbiAgLyoqIERlZmF1bHQgdGltZW91dCwgaW4gbXMsIGZvciBgd2FpdEZvcmAgYW5kIGBmaW5kQnkqYCBxdWVyaWVzLiAqL1xuICBhc3luY1V0aWxUaW1lb3V0OiBudW1iZXI7XG5cbiAgLyoqIERlZmF1bHQgdmFsdWUgZm9yIGBpbmNsdWRlSGlkZGVuRWxlbWVudHNgIHF1ZXJ5IG9wdGlvbi4gKi9cbiAgZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50czogYm9vbGVhbjtcblxuICAvKiogRGVmYXVsdCBvcHRpb25zIGZvciBgZGVidWdgIGhlbHBlci4gKi9cbiAgZGVmYXVsdERlYnVnT3B0aW9ucz86IFBhcnRpYWw8RGVidWdPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIENvbmZpZ0FsaWFzT3B0aW9ucyA9IHtcbiAgLyoqIFJUTC1jb21wYXRpYmlsaXR5IGFsaWFzIHRvIGBkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzYCAqL1xuICBkZWZhdWx0SGlkZGVuOiBib29sZWFuO1xufTtcblxuZXhwb3J0IHR5cGUgSG9zdENvbXBvbmVudE5hbWVzID0ge1xuICB0ZXh0OiBzdHJpbmc7XG4gIHRleHRJbnB1dDogc3RyaW5nO1xuICBzd2l0Y2g6IHN0cmluZztcbiAgc2Nyb2xsVmlldzogc3RyaW5nO1xuICBtb2RhbDogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgSW50ZXJuYWxDb25maWcgPSBDb25maWcgJiB7XG4gIC8qKiBOYW1lcyBmb3Iga2V5IFJlYWN0IE5hdGl2ZSBob3N0IGNvbXBvbmVudHMuICovXG4gIGhvc3RDb21wb25lbnROYW1lcz86IEhvc3RDb21wb25lbnROYW1lcztcbn07XG5cbmNvbnN0IGRlZmF1bHRDb25maWc6IEludGVybmFsQ29uZmlnID0ge1xuICBhc3luY1V0aWxUaW1lb3V0OiAxMDAwLFxuICBkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzOiBmYWxzZSxcbn07XG5cbmxldCBjb25maWcgPSB7IC4uLmRlZmF1bHRDb25maWcgfTtcblxuLyoqXG4gKiBDb25maWd1cmUgZ2xvYmFsIG9wdGlvbnMgZm9yIFJlYWN0IE5hdGl2ZSBUZXN0aW5nIExpYnJhcnkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmUob3B0aW9uczogUGFydGlhbDxDb25maWcgJiBDb25maWdBbGlhc09wdGlvbnM+KSB7XG4gIGNvbnN0IHsgZGVmYXVsdEhpZGRlbiwgLi4ucmVzdE9wdGlvbnMgfSA9IG9wdGlvbnM7XG5cbiAgY29uc3QgZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50cyA9XG4gICAgcmVzdE9wdGlvbnMuZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50cyA/P1xuICAgIGRlZmF1bHRIaWRkZW4gPz9cbiAgICBjb25maWcuZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50cztcblxuICBjb25maWcgPSB7XG4gICAgLi4uY29uZmlnLFxuICAgIC4uLnJlc3RPcHRpb25zLFxuICAgIGRlZmF1bHRJbmNsdWRlSGlkZGVuRWxlbWVudHMsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVJbnRlcm5hbChvcHRpb246IFBhcnRpYWw8SW50ZXJuYWxDb25maWc+KSB7XG4gIGNvbmZpZyA9IHtcbiAgICAuLi5jb25maWcsXG4gICAgLi4ub3B0aW9uLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRUb0RlZmF1bHRzKCkge1xuICBjb25maWcgPSB7IC4uLmRlZmF1bHRDb25maWcgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmZpZygpIHtcbiAgcmV0dXJuIGNvbmZpZztcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBbUNBLElBQU1BLGFBQTZCLEdBQUc7RUFDcENDLGdCQUFnQixFQUFFLElBQUk7RUFDdEJDLDRCQUE0QixFQUFFO0FBQ2hDLENBQUM7QUFFRCxJQUFJQyxNQUFNLEdBQUFDLE1BQUEsQ0FBQUMsTUFBQSxLQUFRTCxhQUFBLENBQWU7QUFLMUIsU0FBU00sU0FBU0EsQ0FBQ0MsT0FBNkMsRUFBRTtFQUFBLElBQUFDLElBQUEsRUFBQUMscUJBQUE7RUFDdkUsSUFBUUMsYUFBYSxHQUFxQkgsT0FBTyxDQUF6Q0csYUFBYTtJQUFLQyxXQUFBLE9BQUFDLHlCQUFBLENBQUFDLE9BQUEsRUFBZ0JOLE9BQU8sRUFBQU8sU0FBQTtFQUVqRCxJQUFNWiw0QkFBNEIsSUFBQU0sSUFBQSxJQUFBQyxxQkFBQSxHQUNoQ0UsV0FBVyxDQUFDVCw0QkFBNEIsWUFBQU8scUJBQUEsR0FDeENDLGFBQWEsWUFBQUYsSUFBQSxHQUNiTCxNQUFNLENBQUNELDRCQUE0QjtFQUVyQ0MsTUFBTSxHQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FDREYsTUFBTSxFQUNOUSxXQUFXO0lBQ2RULDRCQUFBLEVBQUFBO0VBQUEsRUFDRDtBQUNIO0FBRU8sU0FBU2EsaUJBQWlCQSxDQUFDQyxNQUErQixFQUFFO0VBQ2pFYixNQUFNLEdBQUFDLE1BQUEsQ0FBQUMsTUFBQSxLQUNERixNQUFNLEVBQ05hLE1BQUEsQ0FDSjtBQUNIO0FBRU8sU0FBU0MsZUFBZUEsQ0FBQSxFQUFHO0VBQ2hDZCxNQUFNLEdBQUFDLE1BQUEsQ0FBQUMsTUFBQSxLQUFRTCxhQUFBLENBQWU7QUFDL0I7QUFFTyxTQUFTa0IsU0FBU0EsQ0FBQSxFQUFHO0VBQzFCLE9BQU9mLE1BQU07QUFDZiIsImlnbm9yZUxpc3QiOltdfQ==