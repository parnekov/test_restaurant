{"version":3,"names":["_findAll","require","_matchLabelText","_makeQueries","queryAllByLabelText","instance","text","queryOptions","findAll","node","matchLabelText","getMultipleError","labelText","String","getMissingError","_ref","makeQueries","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","bindByLabelTextQueries","getByLabelText","getAllByLabelText","queryByLabelText","findByLabelText","findAllByLabelText","exports"],"sources":["../../src/queries/label-text.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { findAll } from '../helpers/find-all';\nimport { TextMatch, TextMatchOptions } from '../matches';\nimport { matchLabelText } from '../helpers/matchers/match-label-text';\nimport { makeQueries } from './make-queries';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './make-queries';\nimport { CommonQueryOptions } from './options';\n\ntype ByLabelTextOptions = CommonQueryOptions & TextMatchOptions;\n\nfunction queryAllByLabelText(instance: ReactTestInstance) {\n  return (text: TextMatch, queryOptions?: ByLabelTextOptions) => {\n    return findAll(\n      instance,\n      (node) => matchLabelText(instance, node, text, queryOptions),\n      queryOptions,\n    );\n  };\n}\n\nconst getMultipleError = (labelText: TextMatch) =>\n  `Found multiple elements with accessibility label: ${String(labelText)} `;\nconst getMissingError = (labelText: TextMatch) =>\n  `Unable to find an element with accessibility label: ${String(labelText)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByLabelText,\n  getMissingError,\n  getMultipleError,\n);\n\nexport type ByLabelTextQueries = {\n  getByLabelText: GetByQuery<TextMatch, ByLabelTextOptions>;\n  getAllByLabelText: GetAllByQuery<TextMatch, ByLabelTextOptions>;\n  queryByLabelText: QueryByQuery<TextMatch, ByLabelTextOptions>;\n  queryAllByLabelText: QueryAllByQuery<TextMatch, ByLabelTextOptions>;\n  findByLabelText: FindByQuery<TextMatch, ByLabelTextOptions>;\n  findAllByLabelText: FindAllByQuery<TextMatch, ByLabelTextOptions>;\n};\n\nexport const bindByLabelTextQueries = (instance: ReactTestInstance): ByLabelTextQueries => ({\n  getByLabelText: getBy(instance),\n  getAllByLabelText: getAllBy(instance),\n  queryByLabelText: queryBy(instance),\n  queryAllByLabelText: queryAllBy(instance),\n  findByLabelText: findBy(instance),\n  findAllByLabelText: findAllBy(instance),\n});\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AAaA,SAASG,mBAAmBA,CAACC,QAA2B,EAAE;EACxD,OAAO,UAACC,IAAe,EAAEC,YAAiC,EAAK;IAC7D,OAAO,IAAAP,QAAA,CAAAQ,OAAO,EACZH,QAAQ,EACP,UAAAI,IAAI;MAAA,OAAK,IAAAP,eAAA,CAAAQ,cAAc,EAACL,QAAQ,EAAEI,IAAI,EAAEH,IAAI,EAAEC,YAAY,CAAC;IAAA,GAC5DA,YACF,CAAC;EACH,CAAC;AACH;AAEA,IAAMI,gBAAgB,GAAI,SAApBA,gBAAgBA,CAAIC,SAAoB;EAAA,OAC3C,qDAAoDC,MAAM,CAACD,SAAS,CAAE,GAAE;AAAA;AAC3E,IAAME,eAAe,GAAI,SAAnBA,eAAeA,CAAIF,SAAoB;EAAA,OAC1C,uDAAsDC,MAAM,CAACD,SAAS,CAAE,EAAC;AAAA;AAE5E,IAAAG,IAAA,GAAoE,IAAAZ,YAAA,CAAAa,WAAW,EAC7EZ,mBAAmB,EACnBU,eAAe,EACfH,gBACF,CAAC;EAJOM,KAAK,GAAAF,IAAA,CAALE,KAAK;EAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAAEC,UAAU,GAAAL,IAAA,CAAVK,UAAU;EAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;EAAEC,SAAA,GAAAP,IAAA,CAAAO,SAAA;AAe/C,IAAMC,sBAAsB,GAAI,SAA1BA,sBAAsBA,CAAIlB,QAA2B;EAAA,OAA0B;IAC1FmB,cAAc,EAAEP,KAAK,CAACZ,QAAQ,CAAC;IAC/BoB,iBAAiB,EAAEP,QAAQ,CAACb,QAAQ,CAAC;IACrCqB,gBAAgB,EAAEP,OAAO,CAACd,QAAQ,CAAC;IACnCD,mBAAmB,EAAEgB,UAAU,CAACf,QAAQ,CAAC;IACzCsB,eAAe,EAAEN,MAAM,CAAChB,QAAQ,CAAC;IACjCuB,kBAAkB,EAAEN,SAAS,CAACjB,QAAQ;EACxC,CAAC;AAAA,CAAC;AAACwB,OAAA,CAAAN,sBAAA,GAAAA,sBAAA","ignoreList":[]}