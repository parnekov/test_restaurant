520691a19a399f129a11ee31617e2031
'use strict';

var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === 'number' && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
module.exports = memoizeOne;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzYWZlSXNOYU4iLCJOdW1iZXIiLCJpc05hTiIsInBvbnlmaWxsIiwidmFsdWUiLCJpc0VxdWFsIiwiZmlyc3QiLCJzZWNvbmQiLCJhcmVJbnB1dHNFcXVhbCIsIm5ld0lucHV0cyIsImxhc3RJbnB1dHMiLCJsZW5ndGgiLCJpIiwibWVtb2l6ZU9uZSIsInJlc3VsdEZuIiwibGFzdFRoaXMiLCJsYXN0QXJncyIsImxhc3RSZXN1bHQiLCJjYWxsZWRPbmNlIiwibWVtb2l6ZWQiLCJuZXdBcmdzIiwiX2kiLCJhcmd1bWVudHMiLCJhcHBseSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJtZW1vaXplLW9uZS5janMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgc2FmZUlzTmFOID0gTnVtYmVyLmlzTmFOIHx8XG4gICAgZnVuY3Rpb24gcG9ueWZpbGwodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IHZhbHVlO1xuICAgIH07XG5mdW5jdGlvbiBpc0VxdWFsKGZpcnN0LCBzZWNvbmQpIHtcbiAgICBpZiAoZmlyc3QgPT09IHNlY29uZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHNhZmVJc05hTihmaXJzdCkgJiYgc2FmZUlzTmFOKHNlY29uZCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGFyZUlucHV0c0VxdWFsKG5ld0lucHV0cywgbGFzdElucHV0cykge1xuICAgIGlmIChuZXdJbnB1dHMubGVuZ3RoICE9PSBsYXN0SW5wdXRzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3SW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICghaXNFcXVhbChuZXdJbnB1dHNbaV0sIGxhc3RJbnB1dHNbaV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG1lbW9pemVPbmUocmVzdWx0Rm4sIGlzRXF1YWwpIHtcbiAgICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7IGlzRXF1YWwgPSBhcmVJbnB1dHNFcXVhbDsgfVxuICAgIHZhciBsYXN0VGhpcztcbiAgICB2YXIgbGFzdEFyZ3MgPSBbXTtcbiAgICB2YXIgbGFzdFJlc3VsdDtcbiAgICB2YXIgY2FsbGVkT25jZSA9IGZhbHNlO1xuICAgIGZ1bmN0aW9uIG1lbW9pemVkKCkge1xuICAgICAgICB2YXIgbmV3QXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgbmV3QXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYWxsZWRPbmNlICYmIGxhc3RUaGlzID09PSB0aGlzICYmIGlzRXF1YWwobmV3QXJncywgbGFzdEFyZ3MpKSB7XG4gICAgICAgICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgICAgIGNhbGxlZE9uY2UgPSB0cnVlO1xuICAgICAgICBsYXN0VGhpcyA9IHRoaXM7XG4gICAgICAgIGxhc3RBcmdzID0gbmV3QXJncztcbiAgICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBtZW1vaXplZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtZW1vaXplT25lO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLElBQUlBLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxLQUFLLElBQ3hCLFNBQVNDLFFBQVFBLENBQUNDLEtBQUssRUFBRTtFQUNyQixPQUFPLE9BQU9BLEtBQUssS0FBSyxRQUFRLElBQUlBLEtBQUssS0FBS0EsS0FBSztBQUN2RCxDQUFDO0FBQ0wsU0FBU0MsT0FBT0EsQ0FBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUU7RUFDNUIsSUFBSUQsS0FBSyxLQUFLQyxNQUFNLEVBQUU7SUFDbEIsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxJQUFJUCxTQUFTLENBQUNNLEtBQUssQ0FBQyxJQUFJTixTQUFTLENBQUNPLE1BQU0sQ0FBQyxFQUFFO0lBQ3ZDLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCO0FBQ0EsU0FBU0MsY0FBY0EsQ0FBQ0MsU0FBUyxFQUFFQyxVQUFVLEVBQUU7RUFDM0MsSUFBSUQsU0FBUyxDQUFDRSxNQUFNLEtBQUtELFVBQVUsQ0FBQ0MsTUFBTSxFQUFFO0lBQ3hDLE9BQU8sS0FBSztFQUNoQjtFQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxTQUFTLENBQUNFLE1BQU0sRUFBRUMsQ0FBQyxFQUFFLEVBQUU7SUFDdkMsSUFBSSxDQUFDUCxPQUFPLENBQUNJLFNBQVMsQ0FBQ0csQ0FBQyxDQUFDLEVBQUVGLFVBQVUsQ0FBQ0UsQ0FBQyxDQUFDLENBQUMsRUFBRTtNQUN2QyxPQUFPLEtBQUs7SUFDaEI7RUFDSjtFQUNBLE9BQU8sSUFBSTtBQUNmO0FBRUEsU0FBU0MsVUFBVUEsQ0FBQ0MsUUFBUSxFQUFFVCxPQUFPLEVBQUU7RUFDbkMsSUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBQyxFQUFFO0lBQUVBLE9BQU8sR0FBR0csY0FBYztFQUFFO0VBQ3BELElBQUlPLFFBQVE7RUFDWixJQUFJQyxRQUFRLEdBQUcsRUFBRTtFQUNqQixJQUFJQyxVQUFVO0VBQ2QsSUFBSUMsVUFBVSxHQUFHLEtBQUs7RUFDdEIsU0FBU0MsUUFBUUEsQ0FBQSxFQUFHO0lBQ2hCLElBQUlDLE9BQU8sR0FBRyxFQUFFO0lBQ2hCLEtBQUssSUFBSUMsRUFBRSxHQUFHLENBQUMsRUFBRUEsRUFBRSxHQUFHQyxTQUFTLENBQUNYLE1BQU0sRUFBRVUsRUFBRSxFQUFFLEVBQUU7TUFDMUNELE9BQU8sQ0FBQ0MsRUFBRSxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0QsRUFBRSxDQUFDO0lBQy9CO0lBQ0EsSUFBSUgsVUFBVSxJQUFJSCxRQUFRLEtBQUssSUFBSSxJQUFJVixPQUFPLENBQUNlLE9BQU8sRUFBRUosUUFBUSxDQUFDLEVBQUU7TUFDL0QsT0FBT0MsVUFBVTtJQUNyQjtJQUNBQSxVQUFVLEdBQUdILFFBQVEsQ0FBQ1MsS0FBSyxDQUFDLElBQUksRUFBRUgsT0FBTyxDQUFDO0lBQzFDRixVQUFVLEdBQUcsSUFBSTtJQUNqQkgsUUFBUSxHQUFHLElBQUk7SUFDZkMsUUFBUSxHQUFHSSxPQUFPO0lBQ2xCLE9BQU9ILFVBQVU7RUFDckI7RUFDQSxPQUFPRSxRQUFRO0FBQ25CO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWixVQUFVIiwiaWdub3JlTGlzdCI6W119