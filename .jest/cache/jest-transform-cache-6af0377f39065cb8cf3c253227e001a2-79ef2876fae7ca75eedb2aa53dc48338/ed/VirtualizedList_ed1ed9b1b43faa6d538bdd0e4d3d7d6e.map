{"version":3,"names":["_Batchinator","_interopRequireDefault","require","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_ListMetricsAggregator","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizedListProps","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_reactNative","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","getScrollingThreshold","threshold","visibleLength","VirtualizedList","_StateSafePureCompone","props","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_this","_classCallCheck2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_listMetrics","ListMetricsAggregator","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_pendingViewabilityUpdate","_prevParentOffset","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","onContentSizeChange","otherProps","_objectWithoutProperties2","jsx","View","assign","_props$refreshing","invariant","refreshing","JSON","stringify","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","cellIndex","layoutHasChanged","notifyCellLayout","layout","nativeEvent","orientation","_orientation","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellFocusCapture","_updateCellsToRender","_onCellUnmount","notifyCellUnmounted","_onLayout","measureLayoutRelativeToContainingList","_selectLength","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","notifyListContentLayout","_maybeScrollToInitialScrollIndex","_convertParentScrollMetrics","metrics","contentLength","getContentLength","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_offsetFromScrollEvent","_this$_convertParentS","Math","max","perf","infoLog","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","_selectOffset","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","index","isViewable","data","getItem","item","_keyExtractor","lastFocusedCellRenderer","focusedCellIndex","itemCount","getItemCount","_getItemKey","heightOfCellsBeforeFocused","getCellMetricsApprox","length","heightOfCellsAfterFocused","_checkProps","FillRateHelper","_updateCellsToRenderBatcher","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","_this$props","push","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","initialScrollIndex","_inherits2","_createClass2","value","scrollToEnd","params","animated","veryLast","frame","scrollToOffset","scrollToIndex","_this$props2","getItemLayout","onScrollToIndexFailed","viewOffset","viewPosition","getHighestMeasuredCellIndex","averageItemLength","getAverageCellLength","highestMeasuredFrameIndex","floor","getCellOffsetApprox","scrollToItem","_this$props3","scrollRef","scrollTo","console","warn","_this$_orientation","horizontal","rtl","hasContentLength","_scrollToParamsFromOffset","_this$_orientation2","cartOffset","cartesianOffset","x","y","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","windowSize","__isNative","windowSizeOrDefault","__DEV__","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","onEndReachedThreshold","onEndReachedThresholdOrDefault","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","min","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","onUnmount","onCellLayout","nestedContext","horizontalOrDefault","render","_this3","_this$props$scrollEve","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","VirtualizedListCellContextProvider","children","collapsable","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastRegion","lastSpacer","isSpacer","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","_defineProperty2","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","isInvertedVirtualizedList","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","jsxs","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","isMounted","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_ref3","I18nManager","isRTL","_this$props8","onStartReached","onStartReachedThreshold","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","contentWidth","contentHeight","contentOffset","nullthrows","_e$nativeEvent","_this$_orientation3","_shouldRenderWithPriority","schedule","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","onStartReachedThresholdOrDefault","distTop","distBottom","__getListMetrics","_this5","onUpdate","_findItemIndexWithKey","hint","curKey","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","initialNumToRenderOrDefault","initialNumToRender","cellIdx","itemIdx","getDerivedStateFromProps","prevState","_newProps$maintainVis","_newProps$maintainVis2","numCells","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","constrainedCells","lastPossibleCellIndex","maxFirst","keyExtractor","defaultKeyExtractor","String","type","displayName","StateSafePureComponent","contextType","VirtualizedListContext","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {CellMetricProps, ListOrientation} from './ListMetricsAggregator';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport ListMetricsAggregator from './ListMetricsAggregator';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  horizontalOrDefault,\n  initialNumToRenderOrDefault,\n  maxToRenderPerBatchOrDefault,\n  onEndReachedThresholdOrDefault,\n  onStartReachedThresholdOrDefault,\n  windowSizeOrDefault,\n} from './VirtualizedListProps';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  View,\n  findNodeHandle,\n} from 'react-native';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    // TODO: consider using `ref.scrollToEnd` directly\n    this.scrollToOffset({animated, offset});\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {data, getItemCount, getItemLayout, onScrollToIndexFailed} =\n      this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (\n      !getItemLayout &&\n      index > this._listMetrics.getHighestMeasuredCellIndex()\n    ) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._listMetrics.getAverageCellLength(),\n        highestMeasuredFrameIndex:\n          this._listMetrics.getHighestMeasuredCellIndex(),\n        index,\n      });\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(\n      Math.floor(index),\n      this.props,\n    );\n    const offset =\n      Math.max(\n        0,\n        this._listMetrics.getCellOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    this.scrollToOffset({offset, animated});\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n    const scrollRef = this._scrollRef;\n\n    if (scrollRef == null) {\n      return;\n    }\n\n    if (scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl && !this._listMetrics.hasContentLength()) {\n      console.warn(\n        'scrollToOffset may not be called in RTL before content is laid out',\n      );\n      return;\n    }\n\n    scrollRef.scrollTo({\n      animated,\n      ...this._scrollToParamsFromOffset(offset),\n    });\n  }\n\n  _scrollToParamsFromOffset(offset: number): {x?: number, y?: number} {\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      // Add the visible length of the scrollview so that the offset is right-aligned\n      const cartOffset = this._listMetrics.cartesianOffset(\n        offset + this._scrollMetrics.visibleLength,\n      );\n      return horizontal ? {x: cartOffset} : {y: cartOffset};\n    } else {\n      return horizontal ? {x: offset} : {y: offset};\n    }\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._listMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {offset, visibleLength} = this._scrollMetrics;\n    const contentLength = this._listMetrics.getContentLength();\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this._listMetrics,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={this._onCellFocusCapture}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const lastPossibleCellIndex = itemCount - 1;\n\n    // Constraining `last` may significantly shrink the window. Adjust `first`\n    // to expand the window if the new `last` results in a new window smaller\n    // than the number of cells rendered per batch.\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n    const maxFirst = Math.max(0, lastPossibleCellIndex - maxToRenderPerBatch);\n\n    return {\n      first: clamp(0, cells.first, maxFirst),\n      last: Math.min(lastPossibleCellIndex, cells.last),\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              // $FlowFixMe[prop-missing] React.Element internal inspection\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            // $FlowFixMe[prop-missing] React.Element internal inspection\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastRegion = renderRegions[renderRegions.length - 1];\n      const lastSpacer = lastRegion?.isSpacer ? lastRegion : null;\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._listMetrics.getHighestMeasuredCellIndex(),\n              )\n            : section.last;\n\n          const firstMetrics = this._listMetrics.getCellMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this._listMetrics.getCellMetricsApprox(\n            last,\n            this.props,\n          );\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      // iOS/macOS requires a non-zero scrollEventThrottle to fire more than a\n      // single notification while scrolling. This will otherwise no-op.\n      scrollEventThrottle: this.props.scrollEventThrottle ?? 0.0001,\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _listMetrics: ListMetricsAggregator = new ListMetricsAggregator();\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _pendingViewabilityUpdate: boolean = false;\n  _prevParentOffset: number = 0;\n  _scrollMetrics: {\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  } = {\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // Prevent VirtualizedList._onContentSizeChange from being triggered by a bubbling onContentSizeChange event.\n      // This could lead to internal inconsistencies within VirtualizedList.\n      const {onContentSizeChange, ...otherProps} = props;\n      return <View {...otherProps} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (\n    e: LayoutEvent,\n    cellKey: string,\n    cellIndex: number,\n  ): void => {\n    const layoutHasChanged = this._listMetrics.notifyCellLayout({\n      cellIndex,\n      cellKey,\n      layout: e.nativeEvent.layout,\n      orientation: this._orientation(),\n    });\n\n    if (layoutHasChanged) {\n      this._scheduleCellsToRenderUpdate();\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture = (cellKey: string) => {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  };\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    this._listMetrics.notifyCellUnmounted(cellKey);\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._listMetrics.notifyListContentLayout({\n            layout: {width, height},\n            orientation: this._orientation(),\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._listMetrics.getContentLength() || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._listMetrics.getCellMetricsApprox(ii, this.props);\n      if (frame.isMounted) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset({x, y}: $ReadOnly<{x: number, y: number, ...}>): number {\n    return this._orientation().horizontal ? x : y;\n  }\n\n  _orientation(): ListOrientation {\n    return {\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      rtl: I18nManager.isRTL,\n    };\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd =\n      this._listMetrics.getContentLength() - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._listMetrics.getContentLength() !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._listMetrics.getContentLength();\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._listMetrics.getContentLength() !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._listMetrics.getContentLength();\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    if (!isWithinStartThreshold) {\n      this._sentStartForContentLength = 0;\n    }\n    if (!isWithinEndThreshold) {\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    this._listMetrics.notifyListContentLayout({\n      layout: {width, height},\n      orientation: this._orientation(),\n    });\n\n    this._maybeScrollToInitialScrollIndex(width, height);\n\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /**\n   * Scroll to a specified `initialScrollIndex` prop after the ScrollView\n   * content has been laid out, if it is still valid. Only a single scroll is\n   * triggered throughout the lifetime of the list.\n   */\n  _maybeScrollToInitialScrollIndex(\n    contentWidth: number,\n    contentHeight: number,\n  ) {\n    if (\n      contentWidth > 0 &&\n      contentHeight > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n  }\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._listMetrics.getContentLength();\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._offsetFromScrollEvent(e);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._listMetrics.getContentLength() === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _offsetFromScrollEvent(e: ScrollEvent): number {\n    const {contentOffset, contentSize, layoutMeasurement} = e.nativeEvent;\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      return (\n        this._selectLength(contentSize) -\n        (this._selectOffset(contentOffset) +\n          this._selectLength(layoutMeasurement))\n      );\n    } else {\n      return this._selectOffset(contentOffset);\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      (this._listMetrics.getAverageCellLength() > 0 ||\n        this.props.getItemLayout != null) &&\n      this._shouldRenderWithPriority() &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _shouldRenderWithPriority(): boolean {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset -\n        this._listMetrics.getCellMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this._listMetrics.getCellMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n\n    return hiPri;\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: CellMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  __getListMetrics(): ListMetricsAggregator {\n    return this._listMetrics;\n  }\n\n  _getNonViewportRenderRegions = (\n    props: CellMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: CellMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._listMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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","ignoreList":[]}