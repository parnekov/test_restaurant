80987ff33845faacc56a3cc04b14b999
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextInputEventBuilder = void 0;
var TextInputEventBuilder = exports.TextInputEventBuilder = {
  change: function change(text) {
    return {
      nativeEvent: {
        text: text,
        target: 0,
        eventCount: 0
      },
      currentTarget: {},
      target: {}
    };
  },
  keyPress: function keyPress(key) {
    return {
      nativeEvent: {
        key: key
      },
      currentTarget: {},
      target: {}
    };
  },
  submitEditing: function submitEditing(text) {
    return {
      nativeEvent: {
        text: text,
        target: 0
      },
      currentTarget: {},
      target: {}
    };
  },
  endEditing: function endEditing(text) {
    return {
      nativeEvent: {
        text: text,
        target: 0
      },
      currentTarget: {},
      target: {}
    };
  },
  selectionChange: function selectionChange(_ref) {
    var start = _ref.start,
      end = _ref.end;
    return {
      nativeEvent: {
        selection: {
          start: start,
          end: end
        }
      },
      currentTarget: {},
      target: {}
    };
  },
  textInput: function textInput(text, previousText) {
    return {
      nativeEvent: {
        text: text,
        previousText: previousText,
        range: {
          start: text.length,
          end: text.length
        },
        target: 0
      },
      currentTarget: {},
      target: {}
    };
  },
  contentSizeChange: function contentSizeChange(_ref2) {
    var width = _ref2.width,
      height = _ref2.height;
    return {
      nativeEvent: {
        contentSize: {
          width: width,
          height: height
        },
        target: 0
      },
      currentTarget: {},
      target: {}
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZXh0SW5wdXRFdmVudEJ1aWxkZXIiLCJleHBvcnRzIiwiY2hhbmdlIiwidGV4dCIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0IiwiZXZlbnRDb3VudCIsImN1cnJlbnRUYXJnZXQiLCJrZXlQcmVzcyIsImtleSIsInN1Ym1pdEVkaXRpbmciLCJlbmRFZGl0aW5nIiwic2VsZWN0aW9uQ2hhbmdlIiwiX3JlZiIsInN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uIiwidGV4dElucHV0IiwicHJldmlvdXNUZXh0IiwicmFuZ2UiLCJsZW5ndGgiLCJjb250ZW50U2l6ZUNoYW5nZSIsIl9yZWYyIiwid2lkdGgiLCJoZWlnaHQiLCJjb250ZW50U2l6ZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91c2VyLWV2ZW50L2V2ZW50LWJ1aWxkZXIvdGV4dC1pbnB1dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250ZW50U2l6ZSB9IGZyb20gJy4uL3V0aWxzL2NvbnRlbnQtc2l6ZSc7XG5pbXBvcnQgeyBUZXh0UmFuZ2UgfSBmcm9tICcuLi91dGlscy90ZXh0LXJhbmdlJztcblxuZXhwb3J0IGNvbnN0IFRleHRJbnB1dEV2ZW50QnVpbGRlciA9IHtcbiAgLyoqXG4gICAqIEV4cGVyaW1lbnRhbCB2YWx1ZXM6XG4gICAqIC0gaU9TOiBge1wiZXZlbnRDb3VudFwiOiA0LCBcInRhcmdldFwiOiA3NSwgXCJ0ZXh0XCI6IFwiVGVzdFwifWBcbiAgICogLSBBbmRyb2lkOiBge1wiZXZlbnRDb3VudFwiOiA2LCBcInRhcmdldFwiOiA1MywgXCJ0ZXh0XCI6IFwiVGVzXCJ9YFxuICAgKi9cbiAgY2hhbmdlOiAodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hdGl2ZUV2ZW50OiB7IHRleHQsIHRhcmdldDogMCwgZXZlbnRDb3VudDogMCB9LFxuICAgICAgY3VycmVudFRhcmdldDoge30sXG4gICAgICB0YXJnZXQ6IHt9LFxuICAgIH07XG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4cGVyaW1lbnRhbCB2YWx1ZXM6XG4gICAqIC0gaU9TOiBge1wiZXZlbnRDb3VudFwiOiAzLCBcImtleVwiOiBcImFcIiwgXCJ0YXJnZXRcIjogNzV9YFxuICAgKiAtIEFuZHJvaWQ6IGB7XCJrZXlcIjogXCJhXCJ9YFxuICAgKi9cbiAga2V5UHJlc3M6IChrZXk6IHN0cmluZykgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuYXRpdmVFdmVudDogeyBrZXkgfSxcbiAgICAgIGN1cnJlbnRUYXJnZXQ6IHt9LFxuICAgICAgdGFyZ2V0OiB7fSxcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICAgKiAtIGlPUzogYHtcImV2ZW50Q291bnRcIjogNCwgXCJ0YXJnZXRcIjogNzUsIFwidGV4dFwiOiBcIlRlc3RcIn1gXG4gICAqIC0gQW5kcm9pZDogYHtcInRhcmdldFwiOiA1MywgXCJ0ZXh0XCI6IFwiVGVzdFwifWBcbiAgICovXG4gIHN1Ym1pdEVkaXRpbmc6ICh0ZXh0OiBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmF0aXZlRXZlbnQ6IHsgdGV4dCwgdGFyZ2V0OiAwIH0sXG4gICAgICBjdXJyZW50VGFyZ2V0OiB7fSxcbiAgICAgIHRhcmdldDoge30sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJldmVudENvdW50XCI6IDQsIFwidGFyZ2V0XCI6IDc1LCBcInRleHRcIjogXCJUZXN0XCJ9YFxuICAgKiAtIEFuZHJvaWQ6IGB7XCJ0YXJnZXRcIjogNTMsIFwidGV4dFwiOiBcIlRlc3RcIn1gXG4gICAqL1xuICBlbmRFZGl0aW5nOiAodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hdGl2ZUV2ZW50OiB7IHRleHQsIHRhcmdldDogMCB9LFxuICAgICAgY3VycmVudFRhcmdldDoge30sXG4gICAgICB0YXJnZXQ6IHt9LFxuICAgIH07XG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4cGVyaW1lbnRhbCB2YWx1ZXM6XG4gICAqIC0gaU9TOiBge1wic2VsZWN0aW9uXCI6IHtcImVuZFwiOiA0LCBcInN0YXJ0XCI6IDR9LCBcInRhcmdldFwiOiA3NX1gXG4gICAqIC0gQW5kcm9pZDogYHtcInNlbGVjdGlvblwiOiB7XCJlbmRcIjogNCwgXCJzdGFydFwiOiA0fX1gXG4gICAqL1xuICBzZWxlY3Rpb25DaGFuZ2U6ICh7IHN0YXJ0LCBlbmQgfTogVGV4dFJhbmdlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hdGl2ZUV2ZW50OiB7IHNlbGVjdGlvbjogeyBzdGFydCwgZW5kIH0gfSxcbiAgICAgIGN1cnJlbnRUYXJnZXQ6IHt9LFxuICAgICAgdGFyZ2V0OiB7fSxcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICAgKiAtIGlPUzogYHtcImV2ZW50Q291bnRcIjogMiwgXCJwcmV2aW91c1RleHRcIjogXCJUZVwiLCBcInJhbmdlXCI6IHtcImVuZFwiOiAyLCBcInN0YXJ0XCI6IDJ9LCBcInRhcmdldFwiOiA3NSwgXCJ0ZXh0XCI6IFwic1wifWBcbiAgICogLSBBbmRyb2lkOiBge1wicHJldmlvdXNUZXh0XCI6IFwiVGVcIiwgXCJyYW5nZVwiOiB7XCJlbmRcIjogMiwgXCJzdGFydFwiOiAwfSwgXCJ0YXJnZXRcIjogNTMsIFwidGV4dFwiOiBcIlRlc1wifWBcbiAgICovXG4gIHRleHRJbnB1dDogKHRleHQ6IHN0cmluZywgcHJldmlvdXNUZXh0OiBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmF0aXZlRXZlbnQ6IHtcbiAgICAgICAgdGV4dCxcbiAgICAgICAgcHJldmlvdXNUZXh0LFxuICAgICAgICByYW5nZTogeyBzdGFydDogdGV4dC5sZW5ndGgsIGVuZDogdGV4dC5sZW5ndGggfSxcbiAgICAgICAgdGFyZ2V0OiAwLFxuICAgICAgfSxcbiAgICAgIGN1cnJlbnRUYXJnZXQ6IHt9LFxuICAgICAgdGFyZ2V0OiB7fSxcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICAgKiAtIGlPUzogYHtcImNvbnRlbnRTaXplXCI6IHtcImhlaWdodFwiOiAyMS42NjY2NjY2NjY2NjY2NjgsIFwid2lkdGhcIjogMTEuNjY2NjY2NjY2NjY2NjY2fSwgXCJ0YXJnZXRcIjogNzV9YFxuICAgKiAtIEFuZHJvaWQ6IGB7XCJjb250ZW50U2l6ZVwiOiB7XCJoZWlnaHRcIjogNjEuNDU0NTQ0MDY3MzgyODEsIFwid2lkdGhcIjogMzUyLjcyNzI2NDQwNDI5Njl9LCBcInRhcmdldFwiOiA1M31gXG4gICAqL1xuICBjb250ZW50U2l6ZUNoYW5nZTogKHsgd2lkdGgsIGhlaWdodCB9OiBDb250ZW50U2l6ZSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuYXRpdmVFdmVudDogeyBjb250ZW50U2l6ZTogeyB3aWR0aCwgaGVpZ2h0IH0sIHRhcmdldDogMCB9LFxuICAgICAgY3VycmVudFRhcmdldDoge30sXG4gICAgICB0YXJnZXQ6IHt9LFxuICAgIH07XG4gIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFHTyxJQUFNQSxxQkFBcUIsR0FBQUMsT0FBQSxDQUFBRCxxQkFBQSxHQUFHO0VBTW5DRSxNQUFNLEVBQUcsU0FBQUEsT0FBQUMsSUFBWSxFQUFLO0lBQ3hCLE9BQU87TUFDTEMsV0FBVyxFQUFFO1FBQUVELElBQUksRUFBSkEsSUFBSTtRQUFFRSxNQUFNLEVBQUUsQ0FBQztRQUFFQyxVQUFVLEVBQUU7TUFBRSxDQUFDO01BQy9DQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO01BQ2pCRixNQUFNLEVBQUUsQ0FBQztJQUNYLENBQUM7RUFDSCxDQUFDO0VBT0RHLFFBQVEsRUFBRyxTQUFBQSxTQUFBQyxHQUFXLEVBQUs7SUFDekIsT0FBTztNQUNMTCxXQUFXLEVBQUU7UUFBRUssR0FBQSxFQUFBQTtNQUFJLENBQUM7TUFDcEJGLGFBQWEsRUFBRSxDQUFDLENBQUM7TUFDakJGLE1BQU0sRUFBRSxDQUFDO0lBQ1gsQ0FBQztFQUNILENBQUM7RUFPREssYUFBYSxFQUFHLFNBQUFBLGNBQUFQLElBQVksRUFBSztJQUMvQixPQUFPO01BQ0xDLFdBQVcsRUFBRTtRQUFFRCxJQUFJLEVBQUpBLElBQUk7UUFBRUUsTUFBTSxFQUFFO01BQUUsQ0FBQztNQUNoQ0UsYUFBYSxFQUFFLENBQUMsQ0FBQztNQUNqQkYsTUFBTSxFQUFFLENBQUM7SUFDWCxDQUFDO0VBQ0gsQ0FBQztFQU9ETSxVQUFVLEVBQUcsU0FBQUEsV0FBQVIsSUFBWSxFQUFLO0lBQzVCLE9BQU87TUFDTEMsV0FBVyxFQUFFO1FBQUVELElBQUksRUFBSkEsSUFBSTtRQUFFRSxNQUFNLEVBQUU7TUFBRSxDQUFDO01BQ2hDRSxhQUFhLEVBQUUsQ0FBQyxDQUFDO01BQ2pCRixNQUFNLEVBQUUsQ0FBQztJQUNYLENBQUM7RUFDSCxDQUFDO0VBT0RPLGVBQWUsRUFBRSxTQUFBQSxnQkFBQUMsSUFBQSxFQUErQjtJQUFBLElBQTVCQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztNQUFFQyxHQUFBLEdBQUFGLElBQUEsQ0FBQUUsR0FBQTtJQUN6QixPQUFPO01BQ0xYLFdBQVcsRUFBRTtRQUFFWSxTQUFTLEVBQUU7VUFBRUYsS0FBSyxFQUFMQSxLQUFLO1VBQUVDLEdBQUEsRUFBQUE7UUFBSTtNQUFFLENBQUM7TUFDMUNSLGFBQWEsRUFBRSxDQUFDLENBQUM7TUFDakJGLE1BQU0sRUFBRSxDQUFDO0lBQ1gsQ0FBQztFQUNILENBQUM7RUFPRFksU0FBUyxFQUFFLFNBQUFBLFVBQUNkLElBQVksRUFBRWUsWUFBb0IsRUFBSztJQUNqRCxPQUFPO01BQ0xkLFdBQVcsRUFBRTtRQUNYRCxJQUFJLEVBQUpBLElBQUk7UUFDSmUsWUFBWSxFQUFaQSxZQUFZO1FBQ1pDLEtBQUssRUFBRTtVQUFFTCxLQUFLLEVBQUVYLElBQUksQ0FBQ2lCLE1BQU07VUFBRUwsR0FBRyxFQUFFWixJQUFJLENBQUNpQjtRQUFPLENBQUM7UUFDL0NmLE1BQU0sRUFBRTtNQUNWLENBQUM7TUFDREUsYUFBYSxFQUFFLENBQUMsQ0FBQztNQUNqQkYsTUFBTSxFQUFFLENBQUM7SUFDWCxDQUFDO0VBQ0gsQ0FBQztFQU9EZ0IsaUJBQWlCLEVBQUUsU0FBQUEsa0JBQUFDLEtBQUEsRUFBb0M7SUFBQSxJQUFqQ0MsS0FBSyxHQUFBRCxLQUFBLENBQUxDLEtBQUs7TUFBRUMsTUFBQSxHQUFBRixLQUFBLENBQUFFLE1BQUE7SUFDM0IsT0FBTztNQUNMcEIsV0FBVyxFQUFFO1FBQUVxQixXQUFXLEVBQUU7VUFBRUYsS0FBSyxFQUFMQSxLQUFLO1VBQUVDLE1BQUEsRUFBQUE7UUFBTyxDQUFDO1FBQUVuQixNQUFNLEVBQUU7TUFBRSxDQUFDO01BQzFERSxhQUFhLEVBQUUsQ0FBQyxDQUFDO01BQ2pCRixNQUFNLEVBQUUsQ0FBQztJQUNYLENBQUM7RUFDSDtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=