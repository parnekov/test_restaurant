8a4c7b41c0bc2464d7f7c61beda0741d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _shouldUseTurboAnimatedModule = _interopRequireDefault(require("../../../../Libraries/Animated/shouldUseTurboAnimatedModule"));
var TurboModuleRegistry = _interopRequireWildcard(require("../../../../Libraries/TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var NativeModule = !(0, _shouldUseTurboAnimatedModule.default)() ? TurboModuleRegistry.get('NativeAnimatedModule') : null;
var _default = exports.default = NativeModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2hvdWxkVXNlVHVyYm9BbmltYXRlZE1vZHVsZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiVHVyYm9Nb2R1bGVSZWdpc3RyeSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiTmF0aXZlTW9kdWxlIiwic2hvdWxkVXNlVHVyYm9BbmltYXRlZE1vZHVsZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk5hdGl2ZUFuaW1hdGVkTW9kdWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5cbmltcG9ydCBzaG91bGRVc2VUdXJib0FuaW1hdGVkTW9kdWxlIGZyb20gJy4uLy4uLy4uLy4uL0xpYnJhcmllcy9BbmltYXRlZC9zaG91bGRVc2VUdXJib0FuaW1hdGVkTW9kdWxlJztcbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG50eXBlIEVuZFJlc3VsdCA9IHtmaW5pc2hlZDogYm9vbGVhbiwgdmFsdWU/OiBudW1iZXIsIC4uLn07XG50eXBlIEVuZENhbGxiYWNrID0gKHJlc3VsdDogRW5kUmVzdWx0KSA9PiB2b2lkO1xudHlwZSBTYXZlVmFsdWVDYWxsYmFjayA9ICh2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuXG5leHBvcnQgdHlwZSBFdmVudE1hcHBpbmcgPSB7fFxuICBuYXRpdmVFdmVudFBhdGg6IEFycmF5PHN0cmluZz4sXG4gIGFuaW1hdGVkVmFsdWVUYWc6ID9udW1iZXIsXG58fTtcblxuLy8gVGhlIGNvbmZpZyBoYXMgZGlmZmVyZW50IGtleXMgZGVwZW5kaW5nIG9uIHRoZSB0eXBlIG9mIHRoZSBOb2RlXG4vLyBUT0RPKFQ1NDg5Njg4OCk6IE1ha2UgdGhlc2UgdHlwZXMgc3RyaWN0XG5leHBvcnQgdHlwZSBBbmltYXRlZE5vZGVDb25maWcgPSBPYmplY3Q7XG5leHBvcnQgdHlwZSBBbmltYXRpbmdOb2RlQ29uZmlnID0gT2JqZWN0O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtzdGFydE9wZXJhdGlvbkJhdGNoOiAoKSA9PiB2b2lkO1xuICArZmluaXNoT3BlcmF0aW9uQmF0Y2g6ICgpID0+IHZvaWQ7XG4gICtjcmVhdGVBbmltYXRlZE5vZGU6ICh0YWc6IG51bWJlciwgY29uZmlnOiBBbmltYXRlZE5vZGVDb25maWcpID0+IHZvaWQ7XG4gICt1cGRhdGVBbmltYXRlZE5vZGVDb25maWc/OiAodGFnOiBudW1iZXIsIGNvbmZpZzogQW5pbWF0ZWROb2RlQ29uZmlnKSA9PiB2b2lkO1xuICArZ2V0VmFsdWU6ICh0YWc6IG51bWJlciwgc2F2ZVZhbHVlQ2FsbGJhY2s6IFNhdmVWYWx1ZUNhbGxiYWNrKSA9PiB2b2lkO1xuICArc3RhcnRMaXN0ZW5pbmdUb0FuaW1hdGVkTm9kZVZhbHVlOiAodGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdG9wTGlzdGVuaW5nVG9BbmltYXRlZE5vZGVWYWx1ZTogKHRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZXM6IChwYXJlbnRUYWc6IG51bWJlciwgY2hpbGRUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Rpc2Nvbm5lY3RBbmltYXRlZE5vZGVzOiAocGFyZW50VGFnOiBudW1iZXIsIGNoaWxkVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdGFydEFuaW1hdGluZ05vZGU6IChcbiAgICBhbmltYXRpb25JZDogbnVtYmVyLFxuICAgIG5vZGVUYWc6IG51bWJlcixcbiAgICBjb25maWc6IEFuaW1hdGluZ05vZGVDb25maWcsXG4gICAgZW5kQ2FsbGJhY2s6IEVuZENhbGxiYWNrLFxuICApID0+IHZvaWQ7XG4gICtzdG9wQW5pbWF0aW9uOiAoYW5pbWF0aW9uSWQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK3NldEFuaW1hdGVkTm9kZVZhbHVlOiAobm9kZVRhZzogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuICArc2V0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyLCBvZmZzZXQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK2ZsYXR0ZW5BbmltYXRlZE5vZGVPZmZzZXQ6IChub2RlVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtleHRyYWN0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZVRvVmlldzogKG5vZGVUYWc6IG51bWJlciwgdmlld1RhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArZGlzY29ubmVjdEFuaW1hdGVkTm9kZUZyb21WaWV3OiAobm9kZVRhZzogbnVtYmVyLCB2aWV3VGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtyZXN0b3JlRGVmYXVsdFZhbHVlczogKG5vZGVUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Ryb3BBbmltYXRlZE5vZGU6ICh0YWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2FkZEFuaW1hdGVkRXZlbnRUb1ZpZXc6IChcbiAgICB2aWV3VGFnOiBudW1iZXIsXG4gICAgZXZlbnROYW1lOiBzdHJpbmcsXG4gICAgZXZlbnRNYXBwaW5nOiBFdmVudE1hcHBpbmcsXG4gICkgPT4gdm9pZDtcbiAgK3JlbW92ZUFuaW1hdGVkRXZlbnRGcm9tVmlldzogKFxuICAgIHZpZXdUYWc6IG51bWJlcixcbiAgICBldmVudE5hbWU6IHN0cmluZyxcbiAgICBhbmltYXRlZE5vZGVUYWc6IG51bWJlcixcbiAgKSA9PiB2b2lkO1xuXG4gIC8vIEV2ZW50c1xuICArYWRkTGlzdGVuZXI6IChldmVudE5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgK3JlbW92ZUxpc3RlbmVyczogKGNvdW50OiBudW1iZXIpID0+IHZvaWQ7XG5cbiAgLy8gQWxsIG9mIHRoZSBhYm92ZSBpbiBhIGJhdGNoZWQgbW9kZVxuICArcXVldWVBbmRFeGVjdXRlQmF0Y2hlZE9wZXJhdGlvbnM/OiAob3BlcmF0aW9uc0FuZEFyZ3M6IEFycmF5PGFueT4pID0+IHZvaWQ7XG59XG5cbmNvbnN0IE5hdGl2ZU1vZHVsZTogP1NwZWMgPSAhc2hvdWxkVXNlVHVyYm9BbmltYXRlZE1vZHVsZSgpXG4gID8gVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oJ05hdGl2ZUFuaW1hdGVkTW9kdWxlJylcbiAgOiBudWxsO1xuZXhwb3J0IGRlZmF1bHQgTmF0aXZlTW9kdWxlO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQVlBLElBQUFBLDZCQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxtQkFBQSxHQUFBQyx1QkFBQSxDQUFBRixPQUFBO0FBQTZGLFNBQUFHLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLEtBQUFGLENBQUE7QUFBQSxTQUFBRix3QkFBQUUsQ0FBQSxFQUFBRSxDQUFBLFNBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQSxlQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFdBQUFLLE9BQUEsRUFBQUwsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFBTSxDQUFBLEVBQUFHLENBQUEsSUFBQVQsQ0FBQSxDQUFBTSxDQUFBLElBQUFkLENBQUEsQ0FBQWMsQ0FBQSxZQUFBTixDQUFBLENBQUFILE9BQUEsR0FBQUwsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUE0RDdGLElBQU1XLFlBQW1CLEdBQUcsQ0FBQyxJQUFBQyxxQ0FBNEIsRUFBQyxDQUFDLEdBQ3ZEdkIsbUJBQW1CLENBQUNVLEdBQUcsQ0FBTyxzQkFBc0IsQ0FBQyxHQUNyRCxJQUFJO0FBQUMsSUFBQWMsUUFBQSxHQUFBQyxPQUFBLENBQUFqQixPQUFBLEdBQ01jLFlBQVkiLCJpZ25vcmVMaXN0IjpbXX0=