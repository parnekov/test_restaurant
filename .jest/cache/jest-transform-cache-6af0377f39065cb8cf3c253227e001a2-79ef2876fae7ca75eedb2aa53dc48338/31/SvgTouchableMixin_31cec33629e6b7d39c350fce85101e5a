c4779537e8f962f4c4e7a9b73ab39132
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var PRESS_RETENTION_OFFSET = {
  top: 20,
  left: 20,
  right: 20,
  bottom: 30
};
var Mixin = _reactNative.Touchable.Mixin;
var _touchableHandleStartShouldSetResponder = Mixin.touchableHandleStartShouldSetResponder,
  _touchableHandleResponderTerminationRequest = Mixin.touchableHandleResponderTerminationRequest,
  _touchableHandleResponderGrant = Mixin.touchableHandleResponderGrant,
  _touchableHandleResponderMove = Mixin.touchableHandleResponderMove,
  _touchableHandleResponderRelease = Mixin.touchableHandleResponderRelease,
  _touchableHandleResponderTerminate = Mixin.touchableHandleResponderTerminate,
  touchableGetInitialState = Mixin.touchableGetInitialState;
var SvgTouchableMixin = Object.assign({}, Mixin, {
  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder(e) {
    var onStartShouldSetResponder = this.props.onStartShouldSetResponder;
    if (onStartShouldSetResponder) {
      return onStartShouldSetResponder(e);
    } else {
      return _touchableHandleStartShouldSetResponder.call(this, e);
    }
  },
  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest(e) {
    var onResponderTerminationRequest = this.props.onResponderTerminationRequest;
    if (onResponderTerminationRequest) {
      return onResponderTerminationRequest(e);
    } else {
      return _touchableHandleResponderTerminationRequest.call(this, e);
    }
  },
  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var onResponderGrant = this.props.onResponderGrant;
    if (onResponderGrant) {
      return onResponderGrant(e);
    } else {
      return _touchableHandleResponderGrant.call(this, e);
    }
  },
  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    var onResponderMove = this.props.onResponderMove;
    if (onResponderMove) {
      return onResponderMove(e);
    } else {
      return _touchableHandleResponderMove.call(this, e);
    }
  },
  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    var onResponderRelease = this.props.onResponderRelease;
    if (onResponderRelease) {
      return onResponderRelease(e);
    } else {
      return _touchableHandleResponderRelease.call(this, e);
    }
  },
  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    var onResponderTerminate = this.props.onResponderTerminate;
    if (onResponderTerminate) {
      return onResponderTerminate(e);
    } else {
      return _touchableHandleResponderTerminate.call(this, e);
    }
  },
  touchableHandlePress: function touchableHandlePress(e) {
    var onPress = this.props.onPress;
    onPress && onPress(e);
  },
  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    var onPressIn = this.props.onPressIn;
    onPressIn && onPressIn(e);
  },
  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    var onPressOut = this.props.onPressOut;
    onPressOut && onPressOut(e);
  },
  touchableHandleLongPress: function touchableHandleLongPress(e) {
    var onLongPress = this.props.onLongPress;
    onLongPress && onLongPress(e);
  },
  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    var pressRetentionOffset = this.props.pressRetentionOffset;
    return pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },
  touchableGetHitSlop: function touchableGetHitSlop() {
    var hitSlop = this.props.hitSlop;
    return hitSlop;
  },
  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    var delayPressIn = this.props.delayPressIn;
    return delayPressIn || 0;
  },
  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    var delayLongPress = this.props.delayLongPress;
    return delayLongPress === 0 ? 0 : delayLongPress || 500;
  },
  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    var delayPressOut = this.props.delayPressOut;
    return delayPressOut || 0;
  }
});
var touchKeys = Object.keys(SvgTouchableMixin);
var touchVals = touchKeys.map(function (key) {
  return SvgTouchableMixin[key];
});
var numTouchKeys = touchKeys.length;
var _default = function _default(target) {
  for (var i = 0; i < numTouchKeys; i++) {
    var key = touchKeys[i];
    var val = touchVals[i];
    if (typeof val === 'function') {
      target[key] = val.bind(target);
    } else {
      target[key] = val;
    }
  }
  target.state = touchableGetInitialState();
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiUFJFU1NfUkVURU5USU9OX09GRlNFVCIsInRvcCIsImxlZnQiLCJyaWdodCIsImJvdHRvbSIsIk1peGluIiwiVG91Y2hhYmxlIiwidG91Y2hhYmxlSGFuZGxlU3RhcnRTaG91bGRTZXRSZXNwb25kZXIiLCJ0b3VjaGFibGVIYW5kbGVSZXNwb25kZXJUZXJtaW5hdGlvblJlcXVlc3QiLCJ0b3VjaGFibGVIYW5kbGVSZXNwb25kZXJHcmFudCIsInRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlck1vdmUiLCJ0b3VjaGFibGVIYW5kbGVSZXNwb25kZXJSZWxlYXNlIiwidG91Y2hhYmxlSGFuZGxlUmVzcG9uZGVyVGVybWluYXRlIiwidG91Y2hhYmxlR2V0SW5pdGlhbFN0YXRlIiwiU3ZnVG91Y2hhYmxlTWl4aW4iLCJPYmplY3QiLCJhc3NpZ24iLCJlIiwib25TdGFydFNob3VsZFNldFJlc3BvbmRlciIsInByb3BzIiwiY2FsbCIsIm9uUmVzcG9uZGVyVGVybWluYXRpb25SZXF1ZXN0Iiwib25SZXNwb25kZXJHcmFudCIsIm9uUmVzcG9uZGVyTW92ZSIsIm9uUmVzcG9uZGVyUmVsZWFzZSIsIm9uUmVzcG9uZGVyVGVybWluYXRlIiwidG91Y2hhYmxlSGFuZGxlUHJlc3MiLCJvblByZXNzIiwidG91Y2hhYmxlSGFuZGxlQWN0aXZlUHJlc3NJbiIsIm9uUHJlc3NJbiIsInRvdWNoYWJsZUhhbmRsZUFjdGl2ZVByZXNzT3V0Iiwib25QcmVzc091dCIsInRvdWNoYWJsZUhhbmRsZUxvbmdQcmVzcyIsIm9uTG9uZ1ByZXNzIiwidG91Y2hhYmxlR2V0UHJlc3NSZWN0T2Zmc2V0IiwicHJlc3NSZXRlbnRpb25PZmZzZXQiLCJ0b3VjaGFibGVHZXRIaXRTbG9wIiwiaGl0U2xvcCIsInRvdWNoYWJsZUdldEhpZ2hsaWdodERlbGF5TVMiLCJkZWxheVByZXNzSW4iLCJ0b3VjaGFibGVHZXRMb25nUHJlc3NEZWxheU1TIiwiZGVsYXlMb25nUHJlc3MiLCJ0b3VjaGFibGVHZXRQcmVzc091dERlbGF5TVMiLCJkZWxheVByZXNzT3V0IiwidG91Y2hLZXlzIiwia2V5cyIsInRvdWNoVmFscyIsIm1hcCIsImtleSIsIm51bVRvdWNoS2V5cyIsImxlbmd0aCIsIl9kZWZhdWx0IiwidGFyZ2V0IiwiaSIsInZhbCIsImJpbmQiLCJzdGF0ZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9TdmdUb3VjaGFibGVNaXhpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUc7RUFBRUMsR0FBRyxFQUFFLEVBQUU7RUFBRUMsSUFBSSxFQUFFLEVBQUU7RUFBRUMsS0FBSyxFQUFFLEVBQUU7RUFBRUMsTUFBTSxFQUFFO0FBQUcsQ0FBQztBQUUzRSxJQUFRQyxLQUFBLEdBQVVQLFlBQUEsQ0FBQVEsU0FBUyxDQUFuQkQsS0FBQTtBQUNSLElBQ0VFLHVDQUFzQyxHQU9wQ0YsS0FBSyxDQVBQRSxzQ0FBc0M7RUFDdENDLDJDQUEwQyxHQU14Q0gsS0FBSyxDQU5QRywwQ0FBMEM7RUFDMUNDLDhCQUE2QixHQUszQkosS0FBSyxDQUxQSSw2QkFBNkI7RUFDN0JDLDZCQUE0QixHQUkxQkwsS0FBSyxDQUpQSyw0QkFBNEI7RUFDNUJDLGdDQUErQixHQUc3Qk4sS0FBSyxDQUhQTSwrQkFBK0I7RUFDL0JDLGtDQUFpQyxHQUUvQlAsS0FBSyxDQUZQTyxpQ0FBaUM7RUFDakNDLHdCQUFBLEdBQ0VSLEtBQUssQ0FEUFEsd0JBQUE7QUFHRixJQUFNQyxpQkFBaUIsR0FBQUMsTUFBQSxDQUFBQyxNQUFBLEtBQ2xCWCxLQUFLO0VBRVJFLHNDQUFzQyxXQUFBQSx1Q0FBQ1UsQ0FBd0IsRUFBRTtJQUMvRCxJQUFRQyx5QkFBQSxHQUE4QixJQUFJLENBQUNDLEtBQUssQ0FBeENELHlCQUFBO0lBQ1IsSUFBSUEseUJB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