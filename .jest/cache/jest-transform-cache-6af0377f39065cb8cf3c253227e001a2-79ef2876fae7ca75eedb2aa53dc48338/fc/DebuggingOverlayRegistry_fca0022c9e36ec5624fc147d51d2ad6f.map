{"version":3,"names":["_RendererProxy","require","_processColor","_interopRequireDefault","reactDevToolsHook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","_registry","_classPrivateFieldLooseKey2","default","_reactDevToolsAgent","_onReactDevToolsAgentAttached","_getPublicInstanceFromInstance","_findLowestParentFromRegistryForInstance","_findLowestParentFromRegistryForInstanceLegacy","_onDrawTraceUpdates","_drawTraceUpdatesModern","_drawTraceUpdatesLegacy","_onHighlightElements","_onHighlightElementsModern","_onHighlightElementsLegacy","_onClearElementsHighlights","DebuggingOverlayRegistry","_this","_classCallCheck2","Object","defineProperty","value","_onHighlightElementsLegacy2","_onHighlightElementsModern2","_drawTraceUpdatesLegacy2","_drawTraceUpdatesModern2","_findLowestParentFromRegistryForInstanceLegacy2","_findLowestParentFromRegistryForInstance2","writable","Set","agent","_classPrivateFieldLooseBase2","addListener","instanceHandle","_instanceHandle$canon","canonical","publicInstance","_instanceHandle$canon2","measure","traceUpdates","modernNodesUpdates","legacyNodesUpdates","_ref","node","color","instanceReactTag","findNodeHandle","ReactNativeElementClass","push","id","instance","length","nodes","subscriber","_subscriber$debugging","debuggingOverlayRef","current","clearElementsHighlight","reactNativeElements","legacyPublicInstances","_subscriber$debugging2","reactDevtoolsAgent","on","_createClass2","key","subscribe","add","unsubscribe","wasPresent","delete","console","error","iterator","rootViewRef","parentElement","candidates","isChildPublicInstance","candidatesWithNoChildren","potentialParent","shouldSkipThisParent","potentialChild","updates","parentToTraceUpdatesMap","Map","_ref2","parent","traceUpdatesForParent","get","set","_instance$getBounding","getBoundingClientRect","x","y","width","height","rootViewInstance","_rootViewInstance$get","parentX","parentY","rectangle","processColor","_ref3","entries","_debuggingOverlayRef$","_ref4","_slicedToArray2","highlightTraceUpdates","_this2","parentToTraceUpdatesPromisesMap","_loop","traceUpdatesPromisesForParent","frameToDrawPromise","Promise","resolve","reject","left","top","_ref5","_loop2","all","traceUpdatesPromises","then","resolvedTraceUpdates","_parent$debuggingOver","catch","_ref6","_ref7","elements","parentToElementsMap","element","childElementOfAParent","_loop3","_parent2$debuggingOve","v","_rootViewInstance$get2","elementsRectangles","elementsToHighlight","map","_element$getBoundingC","highlightElements","_ret","_ref8","_ref9","_loop4","_parent3","promises","resolvedElementsRectangles","_parent3$debuggingOve","_ref10","_ref11","debuggingOverlayRegistryInstance","_default","exports"],"sources":["DebuggingOverlayRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type ReactNativeElement from '../../src/private/webapis/dom/nodes/ReactNativeElement';\nimport type ReadOnlyElement from '../../src/private/webapis/dom/nodes/ReadOnlyElement';\nimport type {\n  AppContainerRootViewRef,\n  DebuggingOverlayRef,\n} from '../ReactNative/AppContainer-dev';\nimport type {NativeMethods} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  InstanceFromReactDevTools,\n  ReactDevToolsAgent,\n  ReactDevToolsAgentEvents,\n  ReactDevToolsGlobalHook,\n} from '../Types/ReactDevToolsTypes';\nimport type {\n  ElementRectangle,\n  TraceUpdate,\n} from './DebuggingOverlayNativeComponent';\n\nimport {\n  findNodeHandle,\n  isChildPublicInstance,\n} from '../ReactNative/RendererProxy';\nimport processColor from '../StyleSheet/processColor';\n\n// TODO(T171193075): __REACT_DEVTOOLS_GLOBAL_HOOK__ is always injected in dev-bundles,\n// but it is not mocked in some Jest tests. We should update Jest tests setup, so it would be the same as expected testing environment.\nconst reactDevToolsHook: ?ReactDevToolsGlobalHook =\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\nexport type DebuggingOverlayRegistrySubscriberProtocol = {\n  rootViewRef: AppContainerRootViewRef,\n  debuggingOverlayRef: DebuggingOverlayRef,\n};\n\ntype ModernNodeUpdate = {\n  id: number,\n  instance: ReactNativeElement,\n  color: string,\n};\n\ntype LegacyNodeUpdate = {\n  id: number,\n  instance: NativeMethods,\n  color: string,\n};\n\nclass DebuggingOverlayRegistry {\n  #registry: Set<DebuggingOverlayRegistrySubscriberProtocol> = new Set();\n  #reactDevToolsAgent: ReactDevToolsAgent | null = null;\n\n  constructor() {\n    if (reactDevToolsHook?.reactDevtoolsAgent != null) {\n      this.#onReactDevToolsAgentAttached(reactDevToolsHook.reactDevtoolsAgent);\n      return;\n    }\n\n    reactDevToolsHook?.on?.(\n      'react-devtools',\n      this.#onReactDevToolsAgentAttached,\n    );\n  }\n\n  subscribe(subscriber: DebuggingOverlayRegistrySubscriberProtocol) {\n    this.#registry.add(subscriber);\n  }\n\n  unsubscribe(subscriber: DebuggingOverlayRegistrySubscriberProtocol) {\n    const wasPresent = this.#registry.delete(subscriber);\n    if (!wasPresent) {\n      console.error(\n        '[DebuggingOverlayRegistry] Unexpected argument for unsubscription, which was not previously subscribed:',\n        subscriber,\n      );\n    }\n  }\n\n  #onReactDevToolsAgentAttached = (agent: ReactDevToolsAgent): void => {\n    this.#reactDevToolsAgent = agent;\n\n    agent.addListener('drawTraceUpdates', this.#onDrawTraceUpdates);\n    agent.addListener('showNativeHighlight', this.#onHighlightElements);\n    agent.addListener('hideNativeHighlight', this.#onClearElementsHighlights);\n  };\n\n  #getPublicInstanceFromInstance = (\n    instanceHandle: InstanceFromReactDevTools,\n  ): NativeMethods | null => {\n    // `canonical.publicInstance` => Fabric\n    if (instanceHandle.canonical?.publicInstance != null) {\n      return instanceHandle.canonical?.publicInstance;\n    }\n\n    // `canonical` => Legacy Fabric\n    if (instanceHandle.canonical != null) {\n      // $FlowFixMe[incompatible-return]\n      return instanceHandle.canonical;\n    }\n\n    // `instanceHandle` => Legacy renderer\n    if (instanceHandle.measure != null) {\n      // $FlowFixMe[incompatible-return]\n      return instanceHandle;\n    }\n\n    return null;\n  };\n\n  #findLowestParentFromRegistryForInstance(\n    instance: ReactNativeElement,\n  ): ?DebuggingOverlayRegistrySubscriberProtocol {\n    let iterator: ?ReadOnlyElement = instance;\n    while (iterator != null) {\n      for (const subscriber of this.#registry) {\n        if (subscriber.rootViewRef.current === iterator) {\n          return subscriber;\n        }\n      }\n\n      iterator = iterator.parentElement;\n    }\n\n    return null;\n  }\n\n  #findLowestParentFromRegistryForInstanceLegacy(\n    instance: NativeMethods,\n  ): ?DebuggingOverlayRegistrySubscriberProtocol {\n    const candidates: Array<DebuggingOverlayRegistrySubscriberProtocol> = [];\n\n    for (const subscriber of this.#registry) {\n      if (\n        subscriber.rootViewRef.current != null &&\n        // $FlowFixMe[incompatible-call] There is a lot of stuff to untangle to make types for refs work.\n        isChildPublicInstance(subscriber.rootViewRef.current, instance)\n      ) {\n        candidates.push(subscriber);\n      }\n    }\n\n    if (candidates.length === 0) {\n      // In some cases, like with LogBox in custom integrations, the whole subtree for specific React root might not have an AppContainer.\n      return null;\n    }\n\n    if (candidates.length === 1) {\n      return candidates[0];\n    }\n\n    // If there are multiple candidates, we need to find the lowest.\n    // Imagine the case when there is a modal on the screen, both of them will have their own AppContainers,\n    // but modal's AppContainer is a child of screen's AppContainer.\n    const candidatesWithNoChildren: Array<DebuggingOverlayRegistrySubscriberProtocol> =\n      [];\n    for (const potentialParent of candidates) {\n      let shouldSkipThisParent = false;\n\n      if (potentialParent.rootViewRef.current == null) {\n        continue;\n      }\n\n      for (const potentialChild of candidates) {\n        if (potentialChild === potentialParent) {\n          continue;\n        }\n\n        if (potentialChild.rootViewRef.current == null) {\n          continue;\n        }\n\n        if (\n          isChildPublicInstance(\n            // $FlowFixMe[incompatible-call] There is a lot of stuff to untangle to make types for refs work.\n            potentialParent.rootViewRef.current,\n            // $FlowFixMe[incompatible-call] There is a lot of stuff to untangle to make types for refs work.\n            potentialChild.rootViewRef.current,\n          )\n        ) {\n          shouldSkipThisParent = true;\n          break;\n        }\n      }\n\n      if (!shouldSkipThisParent) {\n        candidatesWithNoChildren.push(potentialParent);\n      }\n    }\n\n    if (candidatesWithNoChildren.length === 0) {\n      console.error(\n        '[DebuggingOverlayRegistry] Unexpected circular relationship between AppContainers',\n      );\n      return null;\n    } else if (candidatesWithNoChildren.length > 1) {\n      console.error(\n        '[DebuggingOverlayRegistry] Unexpected multiple options for lowest parent AppContainer',\n      );\n      return null;\n    }\n\n    return candidatesWithNoChildren[0];\n  }\n\n  #onDrawTraceUpdates: (\n    ...ReactDevToolsAgentEvents['drawTraceUpdates']\n  ) => void = traceUpdates => {\n    const modernNodesUpdates: Array<ModernNodeUpdate> = [];\n    const legacyNodesUpdates: Array<LegacyNodeUpdate> = [];\n\n    for (const {node, color} of traceUpdates) {\n      const publicInstance = this.#getPublicInstanceFromInstance(node);\n      if (publicInstance == null) {\n        return;\n      }\n\n      const instanceReactTag = findNodeHandle(node);\n      if (instanceReactTag == null) {\n        return;\n      }\n\n      // Lazy import to avoid dependency cycle.\n      const ReactNativeElementClass =\n        require('../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n      if (publicInstance instanceof ReactNativeElementClass) {\n        modernNodesUpdates.push({\n          id: instanceReactTag,\n          instance: publicInstance,\n          color,\n        });\n      } else {\n        legacyNodesUpdates.push({\n          id: instanceReactTag,\n          instance: publicInstance,\n          color,\n        });\n      }\n    }\n\n    if (modernNodesUpdates.length > 0) {\n      this.#drawTraceUpdatesModern(modernNodesUpdates);\n    }\n\n    if (legacyNodesUpdates.length > 0) {\n      this.#drawTraceUpdatesLegacy(legacyNodesUpdates);\n    }\n  };\n\n  #drawTraceUpdatesModern(updates: Array<ModernNodeUpdate>): void {\n    const parentToTraceUpdatesMap = new Map<\n      DebuggingOverlayRegistrySubscriberProtocol,\n      Array<TraceUpdate>,\n    >();\n    for (const {id, instance, color} of updates) {\n      const parent = this.#findLowestParentFromRegistryForInstance(instance);\n      if (parent == null) {\n        continue;\n      }\n\n      let traceUpdatesForParent = parentToTraceUpdatesMap.get(parent);\n      if (traceUpdatesForParent == null) {\n        traceUpdatesForParent = [];\n        parentToTraceUpdatesMap.set(parent, traceUpdatesForParent);\n      }\n\n      const {x, y, width, height} = instance.getBoundingClientRect();\n\n      const rootViewInstance = parent.rootViewRef.current;\n      if (rootViewInstance == null) {\n        continue;\n      }\n\n      const {x: parentX, y: parentY} =\n        // $FlowFixMe[prop-missing] React Native View is not a descendant of ReactNativeElement yet. We should be able to remove it once Paper is no longer supported.\n        rootViewInstance.getBoundingClientRect();\n\n      // DebuggingOverlay will scale to the same size as a Root view. Substract Root view position from the element position\n      // to calculate the element's position relatively to its parent DebuggingOverlay.\n      // We can't call `getBoundingClientRect` on the debuggingOverlayRef, because its a ref for the native component, which doesn't have it, hopefully yet.\n      traceUpdatesForParent.push({\n        id,\n        rectangle: {x: x - parentX, y: y - parentY, width, height},\n        color: processColor(color),\n      });\n    }\n\n    for (const [parent, traceUpdates] of parentToTraceUpdatesMap.entries()) {\n      const {debuggingOverlayRef} = parent;\n      debuggingOverlayRef.current?.highlightTraceUpdates(traceUpdates);\n    }\n  }\n\n  // TODO: remove once DOM Node APIs are opt-in by default and Paper is no longer supported.\n  #drawTraceUpdatesLegacy(updates: Array<LegacyNodeUpdate>): void {\n    const parentToTraceUpdatesPromisesMap = new Map<\n      DebuggingOverlayRegistrySubscriberProtocol,\n      Array<Promise<TraceUpdate>>,\n    >();\n\n    for (const {id, instance, color} of updates) {\n      const parent =\n        this.#findLowestParentFromRegistryForInstanceLegacy(instance);\n\n      if (parent == null) {\n        continue;\n      }\n\n      let traceUpdatesPromisesForParent =\n        parentToTraceUpdatesPromisesMap.get(parent);\n      if (traceUpdatesPromisesForParent == null) {\n        traceUpdatesPromisesForParent = [];\n        parentToTraceUpdatesPromisesMap.set(\n          parent,\n          traceUpdatesPromisesForParent,\n        );\n      }\n\n      const frameToDrawPromise = new Promise<TraceUpdate>((resolve, reject) => {\n        instance.measure((x, y, width, height, left, top) => {\n          // measure can execute callback without any values provided to signal error.\n          if (left == null || top == null || width == null || height == null) {\n            reject('Unexpectedly failed to call measure on an instance.');\n          }\n\n          resolve({\n            id,\n            rectangle: {x: left, y: top, width, height},\n            color: processColor(color),\n          });\n        });\n      });\n\n      traceUpdatesPromisesForParent.push(frameToDrawPromise);\n    }\n\n    for (const [\n      parent,\n      traceUpdatesPromises,\n    ] of parentToTraceUpdatesPromisesMap.entries()) {\n      Promise.all(traceUpdatesPromises)\n        .then(resolvedTraceUpdates =>\n          parent.debuggingOverlayRef.current?.highlightTraceUpdates(\n            resolvedTraceUpdates,\n          ),\n        )\n        .catch(() => {\n          // noop. For legacy architecture (Paper) this can happen for root views or LogBox button.\n          // LogBox case: it has a separate React root, so `measure` fails.\n          // Calling `console.error` here would trigger rendering a new LogBox button, for which we will call measure again, this is a cycle.\n          // Don't spam the UI with errors for such cases.\n        });\n    }\n  }\n\n  #onHighlightElements: (\n    ...ReactDevToolsAgentEvents['showNativeHighlight']\n  ) => void = nodes => {\n    // First clear highlights for every container\n    for (const subscriber of this.#registry) {\n      subscriber.debuggingOverlayRef.current?.clearElementsHighlight();\n    }\n\n    // Lazy import to avoid dependency cycle.\n    const ReactNativeElementClass =\n      require('../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n\n    const reactNativeElements: Array<ReactNativeElement> = [];\n    const legacyPublicInstances: Array<NativeMethods> = [];\n\n    for (const node of nodes) {\n      const publicInstance = this.#getPublicInstanceFromInstance(node);\n      if (publicInstance == null) {\n        continue;\n      }\n\n      if (publicInstance instanceof ReactNativeElementClass) {\n        reactNativeElements.push(publicInstance);\n      } else {\n        legacyPublicInstances.push(publicInstance);\n      }\n    }\n\n    if (reactNativeElements.length > 0) {\n      this.#onHighlightElementsModern(reactNativeElements);\n    }\n\n    if (legacyPublicInstances.length > 0) {\n      this.#onHighlightElementsLegacy(legacyPublicInstances);\n    }\n  };\n\n  #onHighlightElementsModern(elements: Array<ReactNativeElement>): void {\n    const parentToElementsMap = new Map<\n      DebuggingOverlayRegistrySubscriberProtocol,\n      Array<ReactNativeElement>,\n    >();\n\n    for (const element of elements) {\n      const parent = this.#findLowestParentFromRegistryForInstance(element);\n      if (parent == null) {\n        continue;\n      }\n\n      let childElementOfAParent = parentToElementsMap.get(parent);\n      if (childElementOfAParent == null) {\n        childElementOfAParent = [];\n        parentToElementsMap.set(parent, childElementOfAParent);\n      }\n\n      childElementOfAParent.push(element);\n    }\n\n    for (const [parent, elementsToHighlight] of parentToElementsMap.entries()) {\n      const rootViewInstance = parent.rootViewRef.current;\n      if (rootViewInstance == null) {\n        return;\n      }\n\n      const {x: parentX, y: parentY} =\n        // $FlowFixMe[prop-missing] React Native View is not a descendant of ReactNativeElement yet. We should be able to remove it once Paper is no longer supported.\n        rootViewInstance.getBoundingClientRect();\n\n      // DebuggingOverlay will scale to the same size as a Root view. Substract Root view position from the element position\n      // to calculate the element's position relatively to its parent DebuggingOverlay.\n      // We can't call `getBoundingClientRect` on the debuggingOverlayRef, because its a ref for the native component, which doesn't have it, hopefully yet.\n      const elementsRectangles = elementsToHighlight.map(element => {\n        const {x, y, width, height} = element.getBoundingClientRect();\n        return {x: x - parentX, y: y - parentY, width, height};\n      });\n\n      parent.debuggingOverlayRef.current?.highlightElements(elementsRectangles);\n    }\n  }\n\n  // TODO: remove once DOM Node APIs are opt-in by default and Paper is no longer supported.\n  #onHighlightElementsLegacy(elements: Array<NativeMethods>): void {\n    const parentToElementsMap = new Map<\n      DebuggingOverlayRegistrySubscriberProtocol,\n      Array<NativeMethods>,\n    >();\n\n    for (const element of elements) {\n      const parent =\n        this.#findLowestParentFromRegistryForInstanceLegacy(element);\n      if (parent == null) {\n        continue;\n      }\n\n      let childElementOfAParent = parentToElementsMap.get(parent);\n      if (childElementOfAParent == null) {\n        childElementOfAParent = [];\n        parentToElementsMap.set(parent, childElementOfAParent);\n      }\n\n      childElementOfAParent.push(element);\n    }\n\n    for (const [parent, elementsToHighlight] of parentToElementsMap.entries()) {\n      const promises = elementsToHighlight.map(\n        element =>\n          new Promise<ElementRectangle>((resolve, reject) => {\n            element.measure((x, y, width, height, left, top) => {\n              // measure can execute callback without any values provided to signal error.\n              if (\n                left == null ||\n                top == null ||\n                width == null ||\n                height == null\n              ) {\n                reject('Unexpectedly failed to call measure on an instance.');\n              }\n\n              resolve({x: left, y: top, width, height});\n            });\n          }),\n      );\n\n      Promise.all(promises)\n        .then(resolvedElementsRectangles =>\n          parent.debuggingOverlayRef.current?.highlightElements(\n            resolvedElementsRectangles,\n          ),\n        )\n        .catch(() => {\n          // noop. For legacy architecture (Paper) this can happen for root views or LogBox button.\n          // LogBox case: it has a separate React root, so `measure` fails.\n          // Calling `console.error` here would trigger rendering a new LogBox button, for which we will call measure again, this is a cycle.\n          // Don't spam the UI with errors for such cases.\n        });\n    }\n  }\n\n  #onClearElementsHighlights: (\n    ...ReactDevToolsAgentEvents['hideNativeHighlight']\n  ) => void = () => {\n    for (const subscriber of this.#registry) {\n      subscriber.debuggingOverlayRef.current?.clearElementsHighlight();\n    }\n  };\n}\n\nconst debuggingOverlayRegistryInstance: DebuggingOverlayRegistry =\n  new DebuggingOverlayRegistry();\nexport default debuggingOverlayRegistryInstance;\n"],"mappings":"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","ignoreList":[]}