9ffd9b2453fc7c9e49dbf935b628accd
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jestFakeTimersAreEnabled = exports.clearTimeout = void 0;
exports.runWithRealTimers = runWithRealTimers;
exports.setTimeout = exports.setImmediate = void 0;
var globalObj = typeof window === 'undefined' ? global : window;
function runWithRealTimers(callback) {
  var fakeTimersType = getJestFakeTimersType();
  if (fakeTimersType) {
    jest.useRealTimers();
  }
  var callbackReturnValue = callback();
  if (fakeTimersType) {
    var fakeTimersConfig = getFakeTimersConfigFromType(fakeTimersType);
    jest.useFakeTimers(fakeTimersConfig);
  }
  return callbackReturnValue;
}
function getJestFakeTimersType() {
  if (typeof jest === 'undefined' || typeof globalObj.setTimeout === 'undefined' || process.env.RNTL_SKIP_AUTO_DETECT_FAKE_TIMERS) {
    return null;
  }
  if (typeof globalObj.setTimeout._isMockFunction !== 'undefined' && globalObj.setTimeout._isMockFunction) {
    return 'legacy';
  }
  if (typeof globalObj.setTimeout.clock !== 'undefined' && typeof jest.getRealSystemTime !== 'undefined') {
    try {
      jest.getRealSystemTime();
      return 'modern';
    } catch (_unused) {}
  }
  return null;
}
function getFakeTimersConfigFromType(type) {
  return type === 'legacy' ? {
    legacyFakeTimers: true
  } : {
    legacyFakeTimers: false
  };
}
var jestFakeTimersAreEnabled = function jestFakeTimersAreEnabled() {
  return Boolean(getJestFakeTimersType());
};
exports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;
function setImmediatePolyfill(fn) {
  return globalObj.setTimeout(fn, 0);
}
function bindTimeFunctions() {
  return {
    clearTimeoutFn: globalObj.clearTimeout,
    setImmediateFn: globalObj.setImmediate || setImmediatePolyfill,
    setTimeoutFn: globalObj.setTimeout
  };
}
var _runWithRealTimers = runWithRealTimers(bindTimeFunctions),
  clearTimeoutFn = _runWithRealTimers.clearTimeoutFn,
  setImmediateFn = _runWithRealTimers.setImmediateFn,
  setTimeoutFn = _runWithRealTimers.setTimeoutFn;
exports.setTimeout = setTimeoutFn;
exports.setImmediate = setImmediateFn;
exports.clearTimeout = clearTimeoutFn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWxPYmoiLCJ3aW5kb3ciLCJnbG9iYWwiLCJydW5XaXRoUmVhbFRpbWVycyIsImNhbGxiYWNrIiwiZmFrZVRpbWVyc1R5cGUiLCJnZXRKZXN0RmFrZVRpbWVyc1R5cGUiLCJqZXN0IiwidXNlUmVhbFRpbWVycyIsImNhbGxiYWNrUmV0dXJuVmFsdWUiLCJmYWtlVGltZXJzQ29uZmlnIiwiZ2V0RmFrZVRpbWVyc0NvbmZpZ0Zyb21UeXBlIiwidXNlRmFrZVRpbWVycyIsInNldFRpbWVvdXQiLCJwcm9jZXNzIiwiZW52IiwiUk5UTF9TS0lQX0FVVE9fREVURUNUX0ZBS0VfVElNRVJTIiwiX2lzTW9ja0Z1bmN0aW9uIiwiY2xvY2siLCJnZXRSZWFsU3lzdGVtVGltZSIsIl91bnVzZWQiLCJ0eXBlIiwibGVnYWN5RmFrZVRpbWVycyIsImplc3RGYWtlVGltZXJzQXJlRW5hYmxlZCIsIkJvb2xlYW4iLCJleHBvcnRzIiwic2V0SW1tZWRpYXRlUG9seWZpbGwiLCJmbiIsImJpbmRUaW1lRnVuY3Rpb25zIiwiY2xlYXJUaW1lb3V0Rm4iLCJjbGVhclRpbWVvdXQiLCJzZXRJbW1lZGlhdGVGbiIsInNldEltbWVkaWF0ZSIsInNldFRpbWVvdXRGbiIsIl9ydW5XaXRoUmVhbFRpbWVycyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL3RpbWVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb3N0IGNvbnRlbnQgb2YgdGhpcyBmaWxlIHNvdXJjZWQgZGlyZWN0bHkgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdGVzdGluZy1saWJyYXJ5L2RvbS10ZXN0aW5nLWxpYnJhcnkvYmxvYi9tYWluL3NyYy9oZWxwZXJzLmpzXG4vKiBnbG9iYWxzIGplc3QgKi9cbmNvbnN0IGdsb2JhbE9iaiA9IHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogd2luZG93O1xuXG50eXBlIEZha2VUaW1lcnNUeXBlcyA9ICdtb2Rlcm4nIHwgJ2xlZ2FjeSc7XG5cbi8vIEN1cnJlbnRseSB0aGlzIGZuIG9ubHkgc3VwcG9ydHMgamVzdCB0aW1lcnMsIGJ1dCBpdCBjb3VsZCBzdXBwb3J0IG90aGVyIHRlc3QgcnVubmVycyBpbiB0aGUgZnV0dXJlLlxuZnVuY3Rpb24gcnVuV2l0aFJlYWxUaW1lcnM8VD4oY2FsbGJhY2s6ICgpID0+IFQpOiBUIHtcbiAgY29uc3QgZmFrZVRpbWVyc1R5cGUgPSBnZXRKZXN0RmFrZVRpbWVyc1R5cGUoKTtcbiAgaWYgKGZha2VUaW1lcnNUeXBlKSB7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH1cblxuICBjb25zdCBjYWxsYmFja1JldHVyblZhbHVlID0gY2FsbGJhY2soKTtcblxuICBpZiAoZmFrZVRpbWVyc1R5cGUpIHtcbiAgICBjb25zdCBmYWtlVGltZXJzQ29uZmlnID0gZ2V0RmFrZVRpbWVyc0NvbmZpZ0Zyb21UeXBlKGZha2VUaW1lcnNUeXBlKTtcbiAgICBqZXN0LnVzZUZha2VUaW1lcnMoZmFrZVRpbWVyc0NvbmZpZyk7XG4gIH1cblxuICByZXR1cm4gY2FsbGJhY2tSZXR1cm5WYWx1ZTtcbn1cblxuZnVuY3Rpb24gZ2V0SmVzdEZha2VUaW1lcnNUeXBlKCk6IEZha2VUaW1lcnNUeXBlcyB8IG51bGwge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKFxuICAgIHR5cGVvZiBqZXN0ID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBnbG9iYWxPYmouc2V0VGltZW91dCA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICBwcm9jZXNzLmVudi5STlRMX1NLSVBfQVVUT19ERVRFQ1RfRkFLRV9USU1FUlNcbiAgKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBpZiAoXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBqZXN0IG11dGF0ZXMgc2V0VGltZW91dFxuICAgIHR5cGVvZiBnbG9iYWxPYmouc2V0VGltZW91dC5faXNNb2NrRnVuY3Rpb24gIT09ICd1bmRlZmluZWQnICYmXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBqZXN0IG11dGF0ZXMgc2V0VGltZW91dFxuICAgIGdsb2JhbE9iai5zZXRUaW1lb3V0Ll9pc01vY2tGdW5jdGlvblxuICApIHtcbiAgICByZXR1cm4gJ2xlZ2FjeSc7XG4gIH1cblxuICBpZiAoXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBqZXN0IG11dGF0ZXMgc2V0VGltZW91dFxuICAgIHR5cGVvZiBnbG9iYWxPYmouc2V0VGltZW91dC5jbG9jayAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgamVzdC5nZXRSZWFsU3lzdGVtVGltZSAhPT0gJ3VuZGVmaW5lZCdcbiAgKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIGplc3QuZ2V0UmVhbFN5c3RlbVRpbWUgaXMgb25seSBzdXBwb3J0ZWQgZm9yIEplc3QncyBgbW9kZXJuYCBmYWtlIHRpbWVycyBhbmQgb3RoZXJ3aXNlIHRocm93c1xuICAgICAgamVzdC5nZXRSZWFsU3lzdGVtVGltZSgpO1xuICAgICAgcmV0dXJuICdtb2Rlcm4nO1xuICAgIH0gY2F0Y2gge1xuICAgICAgLy8gbm90IHVzaW5nIEplc3QncyBtb2Rlcm4gZmFrZSB0aW1lcnNcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0RmFrZVRpbWVyc0NvbmZpZ0Zyb21UeXBlKHR5cGU6IEZha2VUaW1lcnNUeXBlcykge1xuICByZXR1cm4gdHlwZSA9PT0gJ2xlZ2FjeScgPyB7IGxlZ2FjeUZha2VUaW1lcnM6IHRydWUgfSA6IHsgbGVnYWN5RmFrZVRpbWVyczogZmFsc2UgfTtcbn1cblxuY29uc3QgamVzdEZha2VUaW1lcnNBcmVFbmFibGVkID0gKCk6IGJvb2xlYW4gPT4gQm9vbGVhbihnZXRKZXN0RmFrZVRpbWVyc1R5cGUoKSk7XG5cbi8vIHdlIG9ubHkgcnVuIG91ciB0ZXN0cyBpbiBub2RlLCBhbmQgc2V0SW1tZWRpYXRlIGlzIHN1cHBvcnRlZCBpbiBub2RlLlxuZnVuY3Rpb24gc2V0SW1tZWRpYXRlUG9seWZpbGwoZm46IEZ1bmN0aW9uKSB7XG4gIHJldHVybiBnbG9iYWxPYmouc2V0VGltZW91dChmbiwgMCk7XG59XG5cbnR5cGUgQmluZFRpbWVGdW5jdGlvbnMgPSB7XG4gIGNsZWFyVGltZW91dEZuOiB0eXBlb2YgY2xlYXJUaW1lb3V0O1xuICBzZXRJbW1lZGlhdGVGbjogdHlwZW9mIHNldEltbWVkaWF0ZTtcbiAgc2V0VGltZW91dEZuOiB0eXBlb2Ygc2V0VGltZW91dDtcbn07XG5cbmZ1bmN0aW9uIGJpbmRUaW1lRnVuY3Rpb25zKCk6IEJpbmRUaW1lRnVuY3Rpb25zIHtcbiAgcmV0dXJuIHtcbiAgICBjbGVhclRpbWVvdXRGbjogZ2xvYmFsT2JqLmNsZWFyVGltZW91dCxcbiAgICBzZXRJbW1lZGlhdGVGbjogZ2xvYmFsT2JqLnNldEltbWVkaWF0ZSB8fCBzZXRJbW1lZGlhdGVQb2x5ZmlsbCxcbiAgICBzZXRUaW1lb3V0Rm46IGdsb2JhbE9iai5zZXRUaW1lb3V0LFxuICB9O1xufVxuXG5jb25zdCB7IGNsZWFyVGltZW91dEZuLCBzZXRJbW1lZGlhdGVGbiwgc2V0VGltZW91dEZuIH0gPSBydW5XaXRoUmVhbFRpbWVycyhcbiAgYmluZFRpbWVGdW5jdGlvbnMsXG4pIGFzIEJpbmRUaW1lRnVuY3Rpb25zO1xuXG5leHBvcnQge1xuICBydW5XaXRoUmVhbFRpbWVycyxcbiAgamVzdEZha2VUaW1lcnNBcmVFbmFibGVkLFxuICBjbGVhclRpbWVvdXRGbiBhcyBjbGVhclRpbWVvdXQsXG4gIHNldEltbWVkaWF0ZUZuIGFzIHNldEltbWVkaWF0ZSxcbiAgc2V0VGltZW91dEZuIGFzIHNldFRpbWVvdXQsXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBRyxPQUFPQyxNQUFNLEtBQUssV0FBVyxHQUFHQyxNQUFNLEdBQUdELE1BQU07QUFLakUsU0FBU0UsaUJBQWlCQSxDQUFJQyxRQUFpQixFQUFLO0VBQ2xELElBQU1DLGNBQWMsR0FBR0MscUJBQXFCLENBQUMsQ0FBQztFQUM5QyxJQUFJRCxjQUFjLEVBQUU7SUFDbEJFLElBQUksQ0FBQ0MsYUFBYSxDQUFDLENBQUM7RUFDdEI7RUFFQSxJQUFNQyxtQkFBbUIsR0FBR0wsUUFBUSxDQUFDLENBQUM7RUFFdEMsSUFBSUMsY0FBYyxFQUFFO0lBQ2xCLElBQU1LLGdCQUFnQixHQUFHQywyQkFBMkIsQ0FBQ04sY0FBYyxDQUFDO0lBQ3BFRSxJQUFJLENBQUNLLGFBQWEsQ0FBQ0YsZ0JBQWdCLENBQUM7RUFDdEM7RUFFQSxPQUFPRCxtQkFBbUI7QUFDNUI7QUFFQSxTQUFTSCxxQkFBcUJBLENBQUEsRUFBMkI7RUFFdkQsSUFDRSxPQUFPQyxJQUFJLEtBQUssV0FBVyxJQUMzQixPQUFPUCxTQUFTLENBQUNhLFVBQVUsS0FBSyxXQUFXLElBQzNDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsaUNBQWlDLEVBQzdDO0lBQ0EsT0FBTyxJQUFJO0VBQ2I7RUFFQSxJQUVFLE9BQU9oQixTQUFTLENBQUNhLFVBQVUsQ0FBQ0ksZUFBZSxLQUFLLFdBQVcsSUFFM0RqQixTQUFTLENBQUNhLFVBQVUsQ0FBQ0ksZUFBZSxFQUNwQztJQUNBLE9BQU8sUUFBUTtFQUNqQjtFQUVBLElBRUUsT0FBT2pCLFNBQVMsQ0FBQ2EsVUFBVSxDQUFDSyxLQUFLLEtBQUssV0FBVyxJQUNqRCxPQUFPWCxJQUFJLENBQUNZLGlCQUFpQixLQUFLLFdBQVcsRUFDN0M7SUFDQSxJQUFJO01BRUZaLElBQUksQ0FBQ1ksaUJBQWlCLENBQUMsQ0FBQztNQUN4QixPQUFPLFFBQVE7SUFDakIsQ0FBQyxDQUFDLE9BQUFDLE9BQUEsRUFBTSxDQUNOO0VBRUo7RUFFQSxPQUFPLElBQUk7QUFDYjtBQUVBLFNBQVNULDJCQUEyQkEsQ0FBQ1UsSUFBcUIsRUFBRTtFQUMxRCxPQUFPQSxJQUFJLEtBQUssUUFBUSxHQUFHO0lBQUVDLGdCQUFnQixFQUFFO0VBQUssQ0FBQyxHQUFHO0lBQUVBLGdCQUFnQixFQUFFO0VBQU0sQ0FBQztBQUNyRjtBQUVBLElBQU1DLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBd0JBLENBQUE7RUFBQSxPQUFrQkMsT0FBTyxDQUFDbEIscUJBQXFCLENBQUMsQ0FBQyxDQUFDO0FBQUE7QUFFaEZtQixPQUFBLENBQUFGLHdCQUFBLEdBQUFBLHdCQUFBO0FBQ0EsU0FBU0csb0JBQW9CQSxDQUFDQyxFQUFZLEVBQUU7RUFDMUMsT0FBTzNCLFNBQVMsQ0FBQ2EsVUFBVSxDQUFDYyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3BDO0FBUUEsU0FBU0MsaUJBQWlCQSxDQUFBLEVBQXNCO0VBQzlDLE9BQU87SUFDTEMsY0FBYyxFQUFFN0IsU0FBUyxDQUFDOEIsWUFBWTtJQUN0Q0MsY0FBYyxFQUFFL0IsU0FBUyxDQUFDZ0MsWUFBWSxJQUFJTixvQkFBb0I7SUFDOURPLFlBQVksRUFBRWpDLFNBQVMsQ0FBQ2E7RUFDMUIsQ0FBQztBQUNIO0FBRUEsSUFBQXFCLGtCQUFBLEdBQXlEL0IsaUJBQWlCLENBQ3hFeUIsaUJBQ0YsQ0FBc0I7RUFGZEMsY0FBYyxHQUFBSyxrQkFBQSxDQUFkTCxjQUFjO0VBQUVFLGNBQWMsR0FBQUcsa0JBQUEsQ0FBZEgsY0FBYztFQUFFRSxZQUFBLEdBQUFDLGtCQUFBLENBQUFELFlBQUE7QUFFakJSLE9BQUEsQ0FBQVosVUFBQSxHQUFBb0IsWUFBQTtBQUFBUixPQUFBLENBQUFPLFlBQUEsR0FBQUQsY0FBQTtBQUFBTixPQUFBLENBQUFLLFlBQUEsR0FBQUQsY0FBQSIsImlnbm9yZUxpc3QiOltdfQ==