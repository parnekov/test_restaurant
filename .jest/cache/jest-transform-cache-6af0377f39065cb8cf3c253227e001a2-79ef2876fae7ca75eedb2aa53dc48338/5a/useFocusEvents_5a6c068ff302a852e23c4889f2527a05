fccb38afcd4fe1257b22a82f6cf056b6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useFocusEvents;
var React = _interopRequireWildcard(require("react"));
var _NavigationContext = _interopRequireDefault(require("./NavigationContext"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function useFocusEvents(_ref) {
  var state = _ref.state,
    emitter = _ref.emitter;
  var navigation = React.useContext(_NavigationContext.default);
  var lastFocusedKeyRef = React.useRef();
  var currentFocusedKey = state.routes[state.index].key;
  React.useEffect(function () {
    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', function () {
      lastFocusedKeyRef.current = currentFocusedKey;
      emitter.emit({
        type: 'focus',
        target: currentFocusedKey
      });
    });
  }, [currentFocusedKey, emitter, navigation]);
  React.useEffect(function () {
    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('blur', function () {
      lastFocusedKeyRef.current = undefined;
      emitter.emit({
        type: 'blur',
        target: currentFocusedKey
      });
    });
  }, [currentFocusedKey, emitter, navigation]);
  React.useEffect(function () {
    var lastFocusedKey = lastFocusedKeyRef.current;
    lastFocusedKeyRef.current = currentFocusedKey;
    if (lastFocusedKey === undefined && !navigation) {
      emitter.emit({
        type: 'focus',
        target: currentFocusedKey
      });
    }
    if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {
      return;
    }
    if (lastFocusedKey === undefined) {
      return;
    }
    emitter.emit({
      type: 'blur',
      target: lastFocusedKey
    });
    emitter.emit({
      type: 'focus',
      target: currentFocusedKey
    });
  }, [currentFocusedKey, emitter, navigation]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9OYXZpZ2F0aW9uQ29udGV4dCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwidXNlRm9jdXNFdmVudHMiLCJfcmVmIiwic3RhdGUiLCJlbWl0dGVyIiwibmF2aWdhdGlvbiIsInVzZUNvbnRleHQiLCJsYXN0Rm9jdXNlZEtleVJlZiIsInVzZVJlZiIsImN1cnJlbnRGb2N1c2VkS2V5Iiwicm91dGVzIiwiaW5kZXgiLCJ1c2VFZmZlY3QiLCJhZGRMaXN0ZW5lciIsImN1cnJlbnQiLCJlbWl0IiwidHlwZSIsInRhcmdldCIsInVuZGVmaW5lZCIsImxhc3RGb2N1c2VkS2V5IiwiaXNGb2N1c2VkIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3VzZUZvY3VzRXZlbnRzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsa0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUFvRCxTQUFBRSx1QkFBQUMsR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFB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