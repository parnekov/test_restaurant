924ddbaddb2b81c48f4aa4f33ebf559f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var CheckIcon = function CheckIcon(props) {
  return (0, _jsxRuntime.jsx)(_reactNativeSvg.default, Object.assign({
    width: props.size || 32,
    height: props.size || 32,
    viewBox: "0 0 32 32"
  }, props, {
    children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Path, {
      fill: props.color,
      d: "m5 16.577 2.194-2.195 5.486 5.484L24.804 7.743 27 9.937l-14.32 14.32z"
    })
  }));
};
var _default = exports.default = CheckIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZVN2ZyIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiQ2hlY2tJY29uIiwicHJvcHMiLCJqc3giLCJhc3NpZ24iLCJ3aWR0aCIsInNpemUiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiY2hpbGRyZW4iLCJQYXRoIiwiZmlsbCIsImNvbG9yIiwiZCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkNoZWNrSWNvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogUkVBQ1QgKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qIE1PRFVMRVMgKi9cbmltcG9ydCBTdmcsIHtQYXRoLCBTdmdQcm9wc30gZnJvbSAncmVhY3QtbmF0aXZlLXN2Zyc7XG5cbmNvbnN0IENoZWNrSWNvbiA9IChwcm9wczogU3ZnUHJvcHMgJiB7Y29sb3I6IHN0cmluZzsgc2l6ZT86IG51bWJlcn0pID0+IChcbiAgPFN2Z1xuICAgIHdpZHRoPXtwcm9wcy5zaXplIHx8IDMyfVxuICAgIGhlaWdodD17cHJvcHMuc2l6ZSB8fCAzMn1cbiAgICB2aWV3Qm94PVwiMCAwIDMyIDMyXCJcbiAgICB7Li4ucHJvcHN9PlxuICAgIDxQYXRoXG4gICAgICBmaWxsPXtwcm9wcy5jb2xvcn1cbiAgICAgIGQ9XCJtNSAxNi41NzcgMi4xOTQtMi4xOTUgNS40ODYgNS40ODRMMjQuODA0IDcuNzQzIDI3IDkuOTM3bC0xNC4zMiAxNC4zMnpcIlxuICAgIC8+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