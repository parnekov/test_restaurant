{"version":3,"names":["_react","_interopRequireWildcard","require","React","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","VirtualizedListContext","exports","createContext","__DEV__","displayName","VirtualizedListContextResetter","_ref","children","jsx","Provider","value","VirtualizedListContextProvider","_ref2","context","useMemo","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","registerAsNestedChild","unregisterAsNestedChild","VirtualizedListCellContextProvider","_ref3","currContext","useContext","assign"],"sources":["VirtualizedListContext.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof VirtualizedList from './VirtualizedList';\n\nimport * as React from 'react';\nimport {useContext, useMemo} from 'react';\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,\n  registerAsNestedChild: ({\n    cellKey: string,\n    ref: React.ElementRef<VirtualizedList>,\n  }) => void,\n  unregisterAsNestedChild: ({ref: React.ElementRef<VirtualizedList>}) => void,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> =\n  React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const currContext = useContext(VirtualizedListContext);\n  const context = useMemo(\n    () => (currContext == null ? null : {...currContext, cellKey}),\n    [currContext, cellKey],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]}