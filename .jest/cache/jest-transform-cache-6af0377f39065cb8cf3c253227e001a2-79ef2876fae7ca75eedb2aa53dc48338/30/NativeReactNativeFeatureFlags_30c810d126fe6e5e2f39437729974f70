3978e441a089ae978066c611522d3687
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../../Libraries/TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var NativeReactNativeFeatureFlags = TurboModuleRegistry.get('NativeReactNativeFeatureFlagsCxx');
var _default = exports.default = NativeReactNativeFeatureFlags;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiTmF0aXZlUmVhY3ROYXRpdmVGZWF0dXJlRmxhZ3MiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJOYXRpdmVSZWFjdE5hdGl2ZUZlYXR1cmVGbGFncy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGdlbmVyYXRlZCBTaWduZWRTb3VyY2U8PDg1MDlkNWVlODdlZmI1YWE4ZGE3ZWZjZDIwODVkMGEyPj5cbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbi8qKlxuICogSU1QT1JUQU5UOiBEbyBOT1QgbW9kaWZ5IHRoaXMgZmlsZSBkaXJlY3RseS5cbiAqXG4gKiBUbyBjaGFuZ2UgdGhlIGRlZmluaXRpb24gb2YgdGhlIGZsYWdzLCBlZGl0XG4gKiAgIHBhY2thZ2VzL3JlYWN0LW5hdGl2ZS9zY3JpcHRzL2ZlYXR1cmVmbGFncy9SZWFjdE5hdGl2ZUZlYXR1cmVGbGFncy5jb25maWcuanMuXG4gKlxuICogVG8gcmVnZW5lcmF0ZSB0aGlzIGNvZGUsIHJ1biB0aGUgZm9sbG93aW5nIHNjcmlwdCBmcm9tIHRoZSByZXBvIHJvb3Q6XG4gKiAgIHlhcm4gZmVhdHVyZWZsYWdzLXVwZGF0ZVxuICovXG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5cbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtjb21tb25UZXN0RmxhZz86ICgpID0+IGJvb2xlYW47XG4gICtlbmFibGVCYWNrZ3JvdW5kRXhlY3V0b3I/OiAoKSA9PiBib29sZWFuO1xuICArdXNlTW9kZXJuUnVudGltZVNjaGVkdWxlcj86ICgpID0+IGJvb2xlYW47XG4gICtlbmFibGVNaWNyb3Rhc2tzPzogKCkgPT4gYm9vbGVhbjtcbiAgK2JhdGNoUmVuZGVyaW5nVXBkYXRlc0luRXZlbnRMb29wPzogKCkgPT4gYm9vbGVhbjtcbiAgK2VuYWJsZVNwYW5uYWJsZUJ1aWxkaW5nVW5pZmljYXRpb24/OiAoKSA9PiBib29sZWFuO1xuICArZW5hYmxlQ3VzdG9tRHJhd09yZGVyRmFicmljPzogKCkgPT4gYm9vbGVhbjtcbiAgK2VuYWJsZUZpeEZvckNsaXBwZWRTdWJ2aWV3c0NyYXNoPzogKCkgPT4gYm9vbGVhbjtcbiAgK2luc3BlY3RvckVuYWJsZUN4eEluc3BlY3RvclBhY2thZ2VyQ29ubmVjdGlvbj86ICgpID0+IGJvb2xlYW47XG4gICtpbnNwZWN0b3JFbmFibGVNb2Rlcm5DRFBSZWdpc3RyeT86ICgpID0+IGJvb2xlYW47XG59XG5cbmNvbnN0IE5hdGl2ZVJlYWN0TmF0aXZlRmVhdHVyZUZsYWdzOiA/U3BlYyA9IFR1cmJvTW9kdWxlUmVnaXN0cnkuZ2V0PFNwZWM+KFxuICAnTmF0aXZlUmVhY3ROYXRpdmVGZWF0dXJlRmxhZ3NDeHgnLFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTmF0aXZlUmVhY3ROYXRpdmVGZWF0dXJlRmxhZ3M7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFzQkEsSUFBQUEsbUJBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUEwRixTQUFBQyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQUgsd0JBQUFHLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxXQUFBSyxPQUFBLEVBQUFMLENBQUEsUUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBLE9BQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENBQUEsVUFBQUcsQ0FBQSxDQUFBSSxHQUFBLENBQUFQLENBQUEsT0FBQVEsQ0FBQSxLQUFBQyxTQUFBLFVBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsQ0FBQSxJQUFBZCxDQUFBLG9CQUFBYyxDQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxDQUFBLFNBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQSxVQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUEsWUFBQU4sQ0FBQSxDQUFBSCxPQUFBLEdBQUFMLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBZTFGLElBQU1XLDZCQUFvQyxHQUFHdkIsbUJBQW1CLENBQUNXLEdBQUcsQ0FDbEUsa0NBQ0YsQ0FBQztBQUFDLElBQUFhLFFBQUEsR0FBQUMsT0FBQSxDQUFBaEIsT0FBQSxHQUVhYyw2QkFBNkIiLCJpZ25vcmVMaXN0IjpbXX0=