{"version":3,"names":["_interopRequireDefault","require","_toConsumableArray2","Object","defineProperty","exports","value","default","deepCyclicCopyReplaceable","_prettyFormat","builtInObject","Array","Date","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Map","Set","RegExp","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","Buffer","push","isBuiltInObject","object","includes","constructor","isMap","cycles","arguments","length","undefined","WeakMap","has","get","isArray","deepCyclicCopyArray","deepCyclicCopyMap","plugins","DOMElement","test","cloneNode","deepCyclicCopyObject","newObject","create","getPrototypeOf","descriptors","obj","assign","getOwnPropertyDescriptors","set","newDescriptors","concat","keys","getOwnPropertySymbols","reduce","key","enumerable","configurable","writable","defineProperties","array","newArray","i","map","newMap","forEach"],"sources":["deepCyclicCopyReplaceable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = deepCyclicCopyReplaceable;\nvar _prettyFormat = require('pretty-format');\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst builtInObject = [\n  Array,\n  Date,\n  Float32Array,\n  Float64Array,\n  Int16Array,\n  Int32Array,\n  Int8Array,\n  Map,\n  Set,\n  RegExp,\n  Uint16Array,\n  Uint32Array,\n  Uint8Array,\n  Uint8ClampedArray\n];\nif (typeof Buffer !== 'undefined') {\n  builtInObject.push(Buffer);\n}\nconst isBuiltInObject = object => builtInObject.includes(object.constructor);\nconst isMap = value => value.constructor === Map;\nfunction deepCyclicCopyReplaceable(value, cycles = new WeakMap()) {\n  if (typeof value !== 'object' || value === null) {\n    return value;\n  } else if (cycles.has(value)) {\n    return cycles.get(value);\n  } else if (Array.isArray(value)) {\n    return deepCyclicCopyArray(value, cycles);\n  } else if (isMap(value)) {\n    return deepCyclicCopyMap(value, cycles);\n  } else if (isBuiltInObject(value)) {\n    return value;\n  } else if (_prettyFormat.plugins.DOMElement.test(value)) {\n    return value.cloneNode(true);\n  } else {\n    return deepCyclicCopyObject(value, cycles);\n  }\n}\nfunction deepCyclicCopyObject(object, cycles) {\n  const newObject = Object.create(Object.getPrototypeOf(object));\n  let descriptors = {};\n  let obj = object;\n  do {\n    descriptors = Object.assign(\n      {},\n      Object.getOwnPropertyDescriptors(obj),\n      descriptors\n    );\n  } while (\n    (obj = Object.getPrototypeOf(obj)) &&\n    obj !== Object.getPrototypeOf({})\n  );\n  cycles.set(object, newObject);\n  const newDescriptors = [\n    ...Object.keys(descriptors),\n    ...Object.getOwnPropertySymbols(descriptors)\n  ].reduce(\n    //@ts-expect-error because typescript do not support symbol key in object\n    //https://github.com/microsoft/TypeScript/issues/1863\n    (newDescriptors, key) => {\n      const enumerable = descriptors[key].enumerable;\n      newDescriptors[key] = {\n        configurable: true,\n        enumerable,\n        value: deepCyclicCopyReplaceable(\n          // this accesses the value or getter, depending. We just care about the value anyways, and this allows us to not mess with accessors\n          // it has the side effect of invoking the getter here though, rather than copying it over\n          object[key],\n          cycles\n        ),\n        writable: true\n      };\n      return newDescriptors;\n    },\n    {}\n  );\n  //@ts-expect-error because typescript do not support symbol key in object\n  //https://github.com/microsoft/TypeScript/issues/1863\n  return Object.defineProperties(newObject, newDescriptors);\n}\nfunction deepCyclicCopyArray(array, cycles) {\n  const newArray = new (Object.getPrototypeOf(array).constructor)(array.length);\n  const length = array.length;\n  cycles.set(array, newArray);\n  for (let i = 0; i < length; i++) {\n    newArray[i] = deepCyclicCopyReplaceable(array[i], cycles);\n  }\n  return newArray;\n}\nfunction deepCyclicCopyMap(map, cycles) {\n  const newMap = new Map();\n  cycles.set(map, newMap);\n  map.forEach((value, key) => {\n    newMap.set(key, deepCyclicCopyReplaceable(value, cycles));\n  });\n  return newMap;\n}\n"],"mappings":"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","ignoreList":[]}