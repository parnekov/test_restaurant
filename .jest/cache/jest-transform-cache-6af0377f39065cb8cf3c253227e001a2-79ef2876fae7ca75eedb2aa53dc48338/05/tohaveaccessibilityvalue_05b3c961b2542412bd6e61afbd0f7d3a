82671376993e81ebb1e0668946ac16d2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toHaveAccessibilityValue = void 0;
var jest_matcher_utils_1 = require("jest-matcher-utils");
var utils_1 = require("./utils");
function toHaveAccessibilityValue(element, expectedValue) {
  var _this = this;
  (0, utils_1.checkReactElement)(element, toHaveAccessibilityValue, this);
  var value = element.props.accessibilityValue;
  return {
    pass: matchAccessibilityValue(value, expectedValue),
    message: function message() {
      var matcher = (0, jest_matcher_utils_1.matcherHint)(`${_this.isNot ? '.not' : ''}.toHaveAccessibilityValue`, 'element', (0, jest_matcher_utils_1.stringify)(expectedValue));
      return (0, utils_1.getMessage)(matcher, `Expected the element ${_this.isNot ? 'not to' : 'to'} have accessibility value`, (0, jest_matcher_utils_1.stringify)(expectedValue), 'Received element with accessibility value', (0, jest_matcher_utils_1.stringify)(value));
    }
  };
}
exports.toHaveAccessibilityValue = toHaveAccessibilityValue;
function matchAccessibilityValue(value, matcher) {
  var _value$text;
  return (matcher.min === undefined || matcher.min === value.min) && (matcher.max === undefined || matcher.max === value.max) && (matcher.now === undefined || matcher.now === value.now) && (matcher.text === undefined || (0, utils_1.matches)((_value$text = value.text) != null ? _value$text : '', matcher.text));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRvSGF2ZUFjY2Vzc2liaWxpdHlWYWx1ZSIsImplc3RfbWF0Y2hlcl91dGlsc18xIiwicmVxdWlyZSIsInV0aWxzXzEiLCJlbGVtZW50IiwiZXhwZWN0ZWRWYWx1ZSIsIl90aGlzIiwiY2hlY2tSZWFjdEVsZW1lbnQiLCJwcm9wcyIsImFjY2Vzc2liaWxpdHlWYWx1ZSIsInBhc3MiLCJtYXRjaEFjY2Vzc2liaWxpdHlWYWx1ZSIsIm1lc3NhZ2UiLCJtYXRjaGVyIiwibWF0Y2hlckhpbnQiLCJpc05vdCIsInN0cmluZ2lmeSIsImdldE1lc3NhZ2UiLCJfdmFsdWUkdGV4dCIsIm1pbiIsInVuZGVmaW5lZCIsIm1heCIsIm5vdyIsInRleHQiLCJtYXRjaGVzIl0sInNvdXJjZXMiOlsidG8taGF2ZS1hY2Nlc3NpYmlsaXR5LXZhbHVlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0hhdmVBY2Nlc3NpYmlsaXR5VmFsdWUgPSB2b2lkIDA7XG5jb25zdCBqZXN0X21hdGNoZXJfdXRpbHNfMSA9IHJlcXVpcmUoXCJqZXN0LW1hdGNoZXItdXRpbHNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5mdW5jdGlvbiB0b0hhdmVBY2Nlc3NpYmlsaXR5VmFsdWUoZWxlbWVudCwgZXhwZWN0ZWRWYWx1ZSkge1xuICAgICgwLCB1dGlsc18xLmNoZWNrUmVhY3RFbGVtZW50KShlbGVtZW50LCB0b0hhdmVBY2Nlc3NpYmlsaXR5VmFsdWUsIHRoaXMpO1xuICAgIGNvbnN0IHZhbHVlID0gZWxlbWVudC5wcm9wcy5hY2Nlc3NpYmlsaXR5VmFsdWU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFzczogbWF0Y2hBY2Nlc3NpYmlsaXR5VmFsdWUodmFsdWUsIGV4cGVjdGVkVmFsdWUpLFxuICAgICAgICBtZXNzYWdlOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBtYXRjaGVyID0gKDAsIGplc3RfbWF0Y2hlcl91dGlsc18xLm1hdGNoZXJIaW50KShgJHt0aGlzLmlzTm90ID8gJy5ub3QnIDogJyd9LnRvSGF2ZUFjY2Vzc2liaWxpdHlWYWx1ZWAsICdlbGVtZW50JywgKDAsIGplc3RfbWF0Y2hlcl91dGlsc18xLnN0cmluZ2lmeSkoZXhwZWN0ZWRWYWx1ZSkpO1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmdldE1lc3NhZ2UpKG1hdGNoZXIsIGBFeHBlY3RlZCB0aGUgZWxlbWVudCAke3RoaXMuaXNOb3QgPyAnbm90IHRvJyA6ICd0byd9IGhhdmUgYWNjZXNzaWJpbGl0eSB2YWx1ZWAsICgwLCBqZXN0X21hdGNoZXJfdXRpbHNfMS5zdHJpbmdpZnkpKGV4cGVjdGVkVmFsdWUpLCAnUmVjZWl2ZWQgZWxlbWVudCB3aXRoIGFjY2Vzc2liaWxpdHkgdmFsdWUnLCAoMCwgamVzdF9tYXRjaGVyX3V0aWxzXzEuc3RyaW5naWZ5KSh2YWx1ZSkpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnRvSGF2ZUFjY2Vzc2liaWxpdHlWYWx1ZSA9IHRvSGF2ZUFjY2Vzc2liaWxpdHlWYWx1ZTtcbmZ1bmN0aW9uIG1hdGNoQWNjZXNzaWJpbGl0eVZhbHVlKHZhbHVlLCBtYXRjaGVyKSB7XG4gICAgcmV0dXJuICgobWF0Y2hlci5taW4gPT09IHVuZGVmaW5lZCB8fCBtYXRjaGVyLm1pbiA9PT0gdmFsdWUubWluKSAmJlxuICAgICAgICAobWF0Y2hlci5tYXggPT09IHVuZGVmaW5lZCB8fCBtYXRjaGVyLm1heCA9PT0gdmFsdWUubWF4KSAmJlxuICAgICAgICAobWF0Y2hlci5ub3cgPT09IHVuZGVmaW5lZCB8fCBtYXRjaGVyLm5vdyA9PT0gdmFsdWUubm93KSAmJlxuICAgICAgICAobWF0Y2hlci50ZXh0ID09PSB1bmRlZmluZWQgfHwgKDAsIHV0aWxzXzEubWF0Y2hlcykodmFsdWUudGV4dCA/PyAnJywgbWF0Y2hlci50ZXh0KSkpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFDN0RELE9BQU8sQ0FBQ0Usd0JBQXdCLEdBQUcsS0FBSyxDQUFDO0FBQ3pDLElBQU1DLG9CQUFvQixHQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDMUQsSUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLFNBQVNGLHdCQUF3QkEsQ0FBQ0ksT0FBTyxFQUFFQyxhQUFhLEVBQUU7RUFBQSxJQUFBQyxLQUFBO0VBQ3RELENBQUMsQ0FBQyxFQUFFSCxPQUFPLENBQUNJLGlCQUFpQixFQUFFSCxPQUFPLEVBQUVKLHdCQUF3QixFQUFFLElBQUksQ0FBQztFQUN2RSxJQUFNRCxLQUFLLEdBQUdLLE9BQU8sQ0FBQ0ksS0FBSyxDQUFDQyxrQkFBa0I7RUFDOUMsT0FBTztJQUNIQyxJQUFJLEVBQUVDLHVCQUF1QixDQUFDWixLQUFLLEVBQUVNLGFBQWEsQ0FBQztJQUNuRE8sT0FBTyxFQUFFLFNBQUFBLFFBQUEsRUFBTTtNQUNYLElBQU1DLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRVosb0JBQW9CLENBQUNhLFdBQVcsRUFBRyxHQUFFUixLQUFJLENBQUNTLEtBQUssR0FBRyxNQUFNLEdBQUcsRUFBRywyQkFBMEIsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLEVBQUVkLG9CQUFvQixDQUFDZSxTQUFTLEVBQUVYLGFBQWEsQ0FBQyxDQUFDO01BQzVLLE9BQU8sQ0FBQyxDQUFDLEVBQUVGLE9BQU8sQ0FBQ2MsVUFBVSxFQUFFSixPQUFPLEVBQUcsd0JBQXVCUCxLQUFJLENBQUNTLEtBQUssR0FBRyxRQUFRLEdBQUcsSUFBSywyQkFBMEIsRUFBRSxDQUFDLENBQUMsRUFBRWQsb0JBQW9CLENBQUNlLFNBQVMsRUFBRVgsYUFBYSxDQUFDLEVBQUUsMkNBQTJDLEVBQUUsQ0FBQyxDQUFDLEVBQUVKLG9CQUFvQixDQUFDZSxTQUFTLEVBQUVqQixLQUFLLENBQUMsQ0FBQztJQUN6UTtFQUNKLENBQUM7QUFDTDtBQUNBRCxPQUFPLENBQUNFLHdCQUF3QixHQUFHQSx3QkFBd0I7QUFDM0QsU0FBU1csdUJBQXVCQSxDQUFDWixLQUFLLEVBQUVjLE9BQU8sRUFBRTtFQUFBLElBQUFLLFdBQUE7RUFDN0MsT0FBUSxDQUFDTCxPQUFPLENBQUNNLEdBQUcsS0FBS0MsU0FBUyxJQUFJUCxPQUFPLENBQUNNLEdBQUcsS0FBS3BCLEtBQUssQ0FBQ29CLEdBQUcsTUFDMUROLE9BQU8sQ0FBQ1EsR0FBRyxLQUFLRCxTQUFTLElBQUlQLE9BQU8sQ0FBQ1EsR0FBRyxLQUFLdEIsS0FBSyxDQUFDc0IsR0FBRyxDQUFDLEtBQ3ZEUixPQUFPLENBQUNTLEdBQUcsS0FBS0YsU0FBUyxJQUFJUCxPQUFPLENBQUNTLEdBQUcsS0FBS3ZCLEtBQUssQ0FBQ3VCLEdBQUcsQ0FBQyxLQUN2RFQsT0FBTyxDQUFDVSxJQUFJLEtBQUtILFNBQVMsSUFBSSxDQUFDLENBQUMsRUFBRWpCLE9BQU8sQ0FBQ3FCLE9BQU8sR0FBQU4sV0FBQSxHQUFFbkIsS0FBSyxDQUFDd0IsSUFBSSxZQUFBTCxXQUFBLEdBQUksRUFBRSxFQUFFTCxPQUFPLENBQUNVLElBQUksQ0FBQyxDQUFDO0FBQzVGIiwiaWdub3JlTGlzdCI6W119