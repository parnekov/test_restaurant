{"version":3,"names":["_reactNative","require","_componentTree","_hostComponentNames","_textContent","accessibilityStateKeys","exports","accessiblityValueKeys","isHiddenFromAccessibility","element","_ref","arguments","length","undefined","cache","current","isCurrentSubtreeInaccessible","get","isSubtreeInaccessible","set","parent","isInaccessible","_reactNative$StyleShe","props","accessibilityElementsHidden","importantForAccessibility","flatStyle","StyleSheet","flatten","style","display","hostSiblings","getHostSiblings","some","sibling","getAccessibilityViewIsModal","isAccessibilityElement","accessible","hostComponentNames","getHostComponentNames","type","text","textInput","switch","getAccessibilityRole","_element$props$role","explicitRole","role","accessibilityRole","isHostText","_element$props$ariaM","accessibilityViewIsModal","getAccessibilityLabel","_element$props$ariaL","accessibilityLabel","getAccessibilityLabelledBy","_element$props$ariaL2","accessibilityLabelledBy","getAccessibilityState","_element$props","accessibilityState","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaSelected","hasAnyAccessibilityStateProps","busy","checked","disabled","expanded","selected","getAccessibilityCheckedState","_element$props2","getAccessibilityValue","_element$props3","accessibilityValue","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","hasAnyAccessibilityValueProps","max","min","now","isElementBusy","_ref2","_element$props4","isElementCollapsed","_element$props5","isElementExpanded","_ref3","_element$props6","isElementSelected","_ref4","_element$props7","getAccessibleName","label","labelElementId","rootElement","getUnsafeRootElement","labelElement","findByProps","nativeID","getTextContent"],"sources":["../../src/helpers/accessiblity.ts"],"sourcesContent":["import { AccessibilityState, AccessibilityValue, StyleSheet } from 'react-native';\nimport { ReactTestInstance } from 'react-test-renderer';\nimport { getHostSiblings, getUnsafeRootElement } from './component-tree';\nimport { getHostComponentNames, isHostText } from './host-component-names';\nimport { getTextContent } from './text-content';\n\ntype IsInaccessibleOptions = {\n  cache?: WeakMap<ReactTestInstance, boolean>;\n};\n\nexport const accessibilityStateKeys: (keyof AccessibilityState)[] = [\n  'disabled',\n  'selected',\n  'checked',\n  'busy',\n  'expanded',\n];\n\nexport const accessiblityValueKeys: (keyof AccessibilityValue)[] = ['min', 'max', 'now', 'text'];\n\nexport function isHiddenFromAccessibility(\n  element: ReactTestInstance | null,\n  { cache }: IsInaccessibleOptions = {},\n): boolean {\n  if (element == null) {\n    return true;\n  }\n\n  let current: ReactTestInstance | null = element;\n  while (current) {\n    let isCurrentSubtreeInaccessible = cache?.get(current);\n\n    if (isCurrentSubtreeInaccessible === undefined) {\n      isCurrentSubtreeInaccessible = isSubtreeInaccessible(current);\n      cache?.set(current, isCurrentSubtreeInaccessible);\n    }\n\n    if (isCurrentSubtreeInaccessible) {\n      return true;\n    }\n\n    current = current.parent;\n  }\n\n  return false;\n}\n\n/** RTL-compatitibility alias for `isHiddenFromAccessibility` */\nexport const isInaccessible = isHiddenFromAccessibility;\n\nfunction isSubtreeInaccessible(element: ReactTestInstance): boolean {\n  // Null props can happen for React.Fragments\n  if (element.props == null) {\n    return false;\n  }\n\n  // See: https://reactnative.dev/docs/accessibility#aria-hidden\n  if (element.props['aria-hidden']) {\n    return true;\n  }\n\n  // iOS: accessibilityElementsHidden\n  // See: https://reactnative.dev/docs/accessibility#accessibilityelementshidden-ios\n  if (element.props.accessibilityElementsHidden) {\n    return true;\n  }\n\n  // Android: importantForAccessibility\n  // See: https://reactnative.dev/docs/accessibility#importantforaccessibility-android\n  if (element.props.importantForAccessibility === 'no-hide-descendants') {\n    return true;\n  }\n\n  // Note that `opacity: 0` is not treated as inaccessible on iOS\n  const flatStyle = StyleSheet.flatten(element.props.style) ?? {};\n  if (flatStyle.display === 'none') return true;\n\n  // iOS: accessibilityViewIsModal or aria-modal\n  // See: https://reactnative.dev/docs/accessibility#accessibilityviewismodal-ios\n  const hostSiblings = getHostSiblings(element);\n  if (hostSiblings.some((sibling) => getAccessibilityViewIsModal(sibling))) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAccessibilityElement(element: ReactTestInstance | null): boolean {\n  if (element == null) {\n    return false;\n  }\n\n  if (element.props.accessible !== undefined) {\n    return element.props.accessible;\n  }\n\n  const hostComponentNames = getHostComponentNames();\n  return (\n    element?.type === hostComponentNames?.text ||\n    element?.type === hostComponentNames?.textInput ||\n    element?.type === hostComponentNames?.switch\n  );\n}\n\n/**\n * Returns the accessibility role for given element. It will return explicit\n * role from either `role` or `accessibilityRole` props if set.\n *\n * If explicit role is not available, it would try to return default element\n * role:\n * - `text` for `Text` elements\n *\n * In all other cases this functions returns `none`.\n *\n * @param element\n * @returns\n */\nexport function getAccessibilityRole(element: ReactTestInstance) {\n  const explicitRole = element.props.role ?? element.props.accessibilityRole;\n  if (explicitRole) {\n    return explicitRole;\n  }\n\n  if (isHostText(element)) {\n    return 'text';\n  }\n\n  return 'none';\n}\n\nexport function getAccessibilityViewIsModal(element: ReactTestInstance) {\n  return element.props['aria-modal'] ?? element.props.accessibilityViewIsModal;\n}\n\nexport function getAccessibilityLabel(element: ReactTestInstance): string | undefined {\n  return element.props['aria-label'] ?? element.props.accessibilityLabel;\n}\n\nexport function getAccessibilityLabelledBy(element: ReactTestInstance): string | undefined {\n  return element.props['aria-labelledby'] ?? element.props.accessibilityLabelledBy;\n}\n\nexport function getAccessibilityState(element: ReactTestInstance): AccessibilityState | undefined {\n  const {\n    accessibilityState,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-selected': ariaSelected,\n  } = element.props;\n\n  const hasAnyAccessibilityStateProps =\n    accessibilityState != null ||\n    ariaBusy != null ||\n    ariaChecked != null ||\n    ariaDisabled != null ||\n    ariaExpanded != null ||\n    ariaSelected != null;\n\n  if (!hasAnyAccessibilityStateProps) {\n    return undefined;\n  }\n\n  return {\n    busy: ariaBusy ?? accessibilityState?.busy,\n    checked: ariaChecked ?? accessibilityState?.checked,\n    disabled: ariaDisabled ?? accessibilityState?.disabled,\n    expanded: ariaExpanded ?? accessibilityState?.expanded,\n    selected: ariaSelected ?? accessibilityState?.selected,\n  };\n}\n\nexport function getAccessibilityCheckedState(\n  element: ReactTestInstance,\n): AccessibilityState['checked'] {\n  const { accessibilityState, 'aria-checked': ariaChecked } = element.props;\n  return ariaChecked ?? accessibilityState?.checked;\n}\n\nexport function getAccessibilityValue(element: ReactTestInstance): AccessibilityValue | undefined {\n  const {\n    accessibilityValue,\n    'aria-valuemax': ariaValueMax,\n    'aria-valuemin': ariaValueMin,\n    'aria-valuenow': ariaValueNow,\n    'aria-valuetext': ariaValueText,\n  } = element.props;\n\n  const hasAnyAccessibilityValueProps =\n    accessibilityValue != null ||\n    ariaValueMax != null ||\n    ariaValueMin != null ||\n    ariaValueNow != null ||\n    ariaValueText != null;\n\n  if (!hasAnyAccessibilityValueProps) {\n    return undefined;\n  }\n\n  return {\n    max: ariaValueMax ?? accessibilityValue?.max,\n    min: ariaValueMin ?? accessibilityValue?.min,\n    now: ariaValueNow ?? accessibilityValue?.now,\n    text: ariaValueText ?? accessibilityValue?.text,\n  };\n}\n\nexport function isElementBusy(element: ReactTestInstance): NonNullable<AccessibilityState['busy']> {\n  const { accessibilityState, 'aria-busy': ariaBusy } = element.props;\n  return ariaBusy ?? accessibilityState?.busy ?? false;\n}\n\nexport function isElementCollapsed(\n  element: ReactTestInstance,\n): NonNullable<AccessibilityState['expanded']> {\n  const { accessibilityState, 'aria-expanded': ariaExpanded } = element.props;\n  return (ariaExpanded ?? accessibilityState?.expanded) === false;\n}\n\nexport function isElementExpanded(\n  element: ReactTestInstance,\n): NonNullable<AccessibilityState['expanded']> {\n  const { accessibilityState, 'aria-expanded': ariaExpanded } = element.props;\n  return ariaExpanded ?? accessibilityState?.expanded ?? false;\n}\n\nexport function isElementSelected(\n  element: ReactTestInstance,\n): NonNullable<AccessibilityState['selected']> {\n  const { accessibilityState, 'aria-selected': ariaSelected } = element.props;\n  return ariaSelected ?? accessibilityState?.selected ?? false;\n}\n\nexport function getAccessibleName(element: ReactTestInstance): string | undefined {\n  const label = getAccessibilityLabel(element);\n  if (label) {\n    return label;\n  }\n\n  const labelElementId = getAccessibilityLabelledBy(element);\n  if (labelElementId) {\n    const rootElement = getUnsafeRootElement(element);\n    const labelElement = rootElement?.findByProps({ nativeID: labelElementId });\n    if (labelElement) {\n      return getTextContent(labelElement);\n    }\n  }\n\n  return getTextContent(element);\n}\n"],"mappings":"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","ignoreList":[]}