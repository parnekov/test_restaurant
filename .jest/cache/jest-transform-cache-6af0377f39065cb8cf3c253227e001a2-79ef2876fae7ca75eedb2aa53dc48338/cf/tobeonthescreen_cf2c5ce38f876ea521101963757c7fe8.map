{"version":3,"names":["Object","defineProperty","exports","value","toBeOnTheScreen","jest_matcher_utils_1","require","utils_1","element","_this","checkReactElement","pass","getScreenRoot","getRootElement","errorFound","printElement","errorNotFound","message","matcherHint","isNot","RECEIVED_COLOR","join","root","parent","_screen$UNSAFE_root","_require","screen","Error","UNSAFE_root","container","error"],"sources":["to-be-on-the-screen.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBeOnTheScreen = void 0;\nconst jest_matcher_utils_1 = require(\"jest-matcher-utils\");\nconst utils_1 = require(\"./utils\");\nfunction toBeOnTheScreen(element) {\n    if (element !== null) {\n        (0, utils_1.checkReactElement)(element, toBeOnTheScreen, this);\n    }\n    const pass = element === null ? false : getScreenRoot() === getRootElement(element);\n    const errorFound = () => {\n        return `expected element tree not to contain element but found:\\n${(0, utils_1.printElement)(element)}`;\n    };\n    const errorNotFound = () => {\n        return `element could not be found in the element tree`;\n    };\n    return {\n        pass,\n        message: () => {\n            return [\n                (0, jest_matcher_utils_1.matcherHint)(`${this.isNot ? '.not' : ''}.toBeOnTheScreen`, 'element', ''),\n                '',\n                (0, jest_matcher_utils_1.RECEIVED_COLOR)(this.isNot ? errorFound() : errorNotFound()),\n            ].join('\\n');\n        },\n    };\n}\nexports.toBeOnTheScreen = toBeOnTheScreen;\nfunction getRootElement(element) {\n    let root = element;\n    while (root.parent) {\n        root = root.parent;\n    }\n    return root;\n}\nfunction getScreenRoot() {\n    try {\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const { screen } = require('@testing-library/react-native');\n        if (!screen) {\n            throw new Error('screen is undefined');\n        }\n        return screen.UNSAFE_root ?? screen.container;\n    }\n    catch (error) {\n        throw new Error('Could not import `screen` object from @testing-library/react-native.\\n\\n' +\n            'Using toBeOnTheScreen() matcher requires @testing-library/react-native v10.1.0 or later to be added to your devDependencies.');\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAMC,oBAAoB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC1D,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,SAASF,eAAeA,CAACI,OAAO,EAAE;EAAA,IAAAC,KAAA;EAC9B,IAAID,OAAO,KAAK,IAAI,EAAE;IAClB,CAAC,CAAC,EAAED,OAAO,CAACG,iBAAiB,EAAEF,OAAO,EAAEJ,eAAe,EAAE,IAAI,CAAC;EAClE;EACA,IAAMO,IAAI,GAAGH,OAAO,KAAK,IAAI,GAAG,KAAK,GAAGI,aAAa,CAAC,CAAC,KAAKC,cAAc,CAACL,OAAO,CAAC;EACnF,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrB,OAAQ,4DAA2D,CAAC,CAAC,EAAEP,OAAO,CAACQ,YAAY,EAAEP,OAAO,CAAE,EAAC;EAC3G,CAAC;EACD,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB,OAAQ,gDAA+C;EAC3D,CAAC;EACD,OAAO;IACHL,IAAI,EAAJA,IAAI;IACJM,OAAO,EAAE,SAAAA,QAAA,EAAM;MACX,OAAO,CACH,CAAC,CAAC,EAAEZ,oBAAoB,CAACa,WAAW,EAAG,GAAET,KAAI,CAACU,KAAK,GAAG,MAAM,GAAG,EAAG,kBAAiB,EAAE,SAAS,EAAE,EAAE,CAAC,EACnG,EAAE,EACF,CAAC,CAAC,EAAEd,oBAAoB,CAACe,cAAc,EAAEX,KAAI,CAACU,KAAK,GAAGL,UAAU,CAAC,CAAC,GAAGE,aAAa,CAAC,CAAC,CAAC,CACxF,CAACK,IAAI,CAAC,IAAI,CAAC;IAChB;EACJ,CAAC;AACL;AACAnB,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC,SAASS,cAAcA,CAACL,OAAO,EAAE;EAC7B,IAAIc,IAAI,GAAGd,OAAO;EAClB,OAAOc,IAAI,CAACC,MAAM,EAAE;IAChBD,IAAI,GAAGA,IAAI,CAACC,MAAM;EACtB;EACA,OAAOD,IAAI;AACf;AACA,SAASV,aAAaA,CAAA,EAAG;EACrB,IAAI;IAAA,IAAAY,mBAAA;IAEA,IAAAC,QAAA,GAAmBnB,OAAO,CAAC,+BAA+B,CAAC;MAAnDoB,MAAM,GAAAD,QAAA,CAANC,MAAM;IACd,IAAI,CAACA,MAAM,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IAC1C;IACA,QAAAH,mBAAA,GAAOE,MAAM,CAACE,WAAW,YAAAJ,mBAAA,GAAIE,MAAM,CAACG,SAAS;EACjD,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,MAAM,IAAIH,KAAK,CAAC,0EAA0E,GACtF,8HAA8H,CAAC;EACvI;AACJ","ignoreList":[]}