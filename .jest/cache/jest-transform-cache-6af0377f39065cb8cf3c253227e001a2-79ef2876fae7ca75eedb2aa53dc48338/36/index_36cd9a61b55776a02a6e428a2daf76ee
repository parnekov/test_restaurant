ba144732c675518a90a8e48b15c08c4a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  CommonActions: true,
  BaseRouter: true,
  DrawerActions: true,
  DrawerRouter: true,
  StackActions: true,
  StackRouter: true,
  TabActions: true,
  TabRouter: true
};
Object.defineProperty(exports, "BaseRouter", {
  enumerable: true,
  get: function get() {
    return _BaseRouter.default;
  }
});
exports.CommonActions = void 0;
Object.defineProperty(exports, "DrawerActions", {
  enumerable: true,
  get: function get() {
    return _DrawerRouter.DrawerActions;
  }
});
Object.defineProperty(exports, "DrawerRouter", {
  enumerable: true,
  get: function get() {
    return _DrawerRouter.default;
  }
});
Object.defineProperty(exports, "StackActions", {
  enumerable: true,
  get: function get() {
    return _StackRouter.StackActions;
  }
});
Object.defineProperty(exports, "StackRouter", {
  enumerable: true,
  get: function get() {
    return _StackRouter.default;
  }
});
Object.defineProperty(exports, "TabActions", {
  enumerable: true,
  get: function get() {
    return _TabRouter.TabActions;
  }
});
Object.defineProperty(exports, "TabRouter", {
  enumerable: true,
  get: function get() {
    return _TabRouter.default;
  }
});
var CommonActions = _interopRequireWildcard(require("./CommonActions"));
exports.CommonActions = CommonActions;
var _BaseRouter = _interopRequireDefault(require("./BaseRouter"));
var _DrawerRouter = _interopRequireWildcard(require("./DrawerRouter"));
var _StackRouter = _interopRequireWildcard(require("./StackRouter"));
var _TabRouter = _interopRequireWildcard(require("./TabRouter"));
var _types = require("./types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb21tb25BY3Rpb25zIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIl9CYXNlUm91dGVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9EcmF3ZXJSb3V0ZXIiLCJfU3RhY2tSb3V0ZXIiLCJfVGFiUm91dGVyIiwiX3R5cGVzIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfZXhwb3J0TmFtZXMiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsImNhY2hlIiwiaGFzIiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVzYyIsInNldCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFBaURDLE9BQUEsQ0FBQUgsYUFBQSxHQUFBQSxhQUFBO0FBSWpELElBQUFJLFdBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQVFBLElBQUFJLGFBQUEsR0FBQUwsdUJBQUEsQ0FBQUMsT0FBQTtBQU9BLElBQUFLLFlBQUEsR0FBQU4sdUJBQUEsQ0FBQUMsT0FBQTtBQU9BLElBQUFNLFVBQUEsR0FBQVAsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFPLE1BQUEsR0FBQVAsT0FBQTtBQUFBUSxNQUFBLENB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