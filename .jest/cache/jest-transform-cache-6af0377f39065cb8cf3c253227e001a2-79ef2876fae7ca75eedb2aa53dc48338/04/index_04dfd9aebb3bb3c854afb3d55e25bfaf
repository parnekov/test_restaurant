9288e72e9ae9aea378a318da6cc6f0e7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _CheckBox = _interopRequireDefault(require("../CheckBox"));
var _CloseIcon = _interopRequireDefault(require("../../assets/icons/CloseIcon"));
var _Counter = _interopRequireDefault(require("../Counter"));
var _constants = require("../../utils/constants");
var _theme = require("../../utils/theme");
var _styles = _interopRequireDefault(require("./styles"));
var _jsxRuntime = require("react/jsx-runtime");
var OrderListItem = function OrderListItem(_ref) {
  var _ref2;
  var orderItem = _ref.orderItem,
    onChangeCheckbox = _ref.onChangeCheckbox,
    onChangeAmount = _ref.onChangeAmount;
  var name = orderItem.name,
    id = orderItem.id,
    amount = orderItem.amount,
    price = orderItem.price,
    status = orderItem.status,
    checked = orderItem.checked,
    isPaid = orderItem.isPaid;
  var onChangeCheck = function onChangeCheck(check) {
    onChangeCheckbox({
      check: check,
      itemId: id
    });
  };
  var onChangeAmountItem = function onChangeAmountItem(updatedAmount) {
    onChangeAmount({
      updatedAmount: updatedAmount,
      itemId: id
    });
  };
  var isEnabled = status === _constants.ORDER_STATUS.New && !isPaid;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: _styles.default.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _styles.default.row,
      children: [(0, _jsxRuntime.jsx)(_CheckBox.default, {
        title: name,
        checked: checked,
        onChange: onChangeCheck,
        isDisabled: isPaid
      }), (0, _jsxRuntime.jsx)(_CloseIcon.default, {
        color: _theme.COLORS.PRIMARY_LIGHT,
        size: 16
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _styles.default.row,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: _styles.default.chf,
        children: ["CHF", ' ', (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _styles.default.chfAmount,
          children: (_ref2 = amount * price) == null ? void 0 : _ref2.toFixed(2)
        })]
      }), isPaid && (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: _styles.default.paid,
        children: "Paid"
      }), (0, _jsxRuntime.jsx)(_Counter.default, {
        amount: amount,
        onChange: onChangeAmountItem,
        isEnabled: isEnabled
      })]
    })]
  });
};
var _default = exports.default = OrderListItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9DaGVja0JveCIsIl9DbG9zZUljb24iLCJfQ291bnRlciIsIl9jb25zdGFudHMiLCJfdGhlbWUiLCJfc3R5bGVzIiwiX2pzeFJ1bnRpbWUiLCJPcmRlckxpc3RJdGVtIiwiX3JlZiIsIl9yZWYyIiwib3JkZXJJdGVtIiwib25DaGFuZ2VDaGVja2JveCIsIm9uQ2hhbmdlQW1vdW50IiwibmFtZSIsImlkIiwiYW1vdW50IiwicHJpY2UiLCJzdGF0dXMiLCJjaGVja2VkIiwiaXNQYWlkIiwib25DaGFuZ2VDaGVjayIsImNoZWNrIiwiaXRlbUlkIiwib25DaGFuZ2VBbW91bnRJdGVtIiwidXBkYXRlZEFtb3VudCIsImlzRW5hYmxlZCIsIk9SREVSX1NUQVRVUyIsIk5ldyIsImpzeHMiLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsInJvdyIsImpzeCIsImRlZmF1bHQiLCJ0aXRsZSIsIm9uQ2hhbmdlIiwiaXNEaXNhYmxlZCIsImNvbG9yIiwiQ09MT1JTIiwiUFJJTUFSWV9MSUdIVCIsInNpemUiLCJUZXh0IiwiY2hmIiwiY2hmQW1vdW50IiwidG9GaXhlZCIsInBhaWQiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogUkVBQ1QgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1ZpZXcsIFRleHR9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG4vKiBDT01QT05FTlRTICovXG5pbXBvcnQgQ2hlY2tCb3ggZnJvbSAnLi4vQ2hlY2tCb3gnO1xuaW1wb3J0IENsb3NlSWNvbiBmcm9tICcuLi8uLi9hc3NldHMvaWNvbnMvQ2xvc2VJY29uJztcbmltcG9ydCBDb3VudGVyIGZyb20gJy4uL0NvdW50ZXInO1xuLyogVVRJTFMgKi9cbmltcG9ydCB7T1JERVJfU1RBVFVTfSBmcm9tICcuLi8uLi91dGlscy9jb25zdGFudHMnO1xuaW1wb3J0IHtDT0xPUlN9IGZyb20gJy4uLy4uL3V0aWxzL3RoZW1lJztcbi8qIFRZUEVTICovXG5pbXBvcnQge09yZGVySXRlbX0gZnJvbSAnLi4vLi4vdXRpbHMvdHlwZXMnO1xuLyogU1RZTEVTICovXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgb3JkZXJJdGVtOiBPcmRlckl0ZW07XG4gIG9uQ2hhbmdlQ2hlY2tib3g6IEZ1bmN0aW9uO1xuICBvbkNoYW5nZUFtb3VudDogRnVuY3Rpb247XG59O1xuXG5jb25zdCBPcmRlckxpc3RJdGVtID0gKHtcbiAgb3JkZXJJdGVtLFxuICBvbkNoYW5nZUNoZWNrYm94LFxuICBvbkNoYW5nZUFtb3VudCxcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHtuYW1lLCBpZCwgYW1vdW50LCBwcmljZSwgc3RhdHVzLCBjaGVja2VkLCBpc1BhaWR9ID0gb3JkZXJJdGVtO1xuXG4gIGNvbnN0IG9uQ2hhbmdlQ2hlY2sgPSAoY2hlY2s6IGJvb2xlYW4pID0+IHtcbiAgICBvbkNoYW5nZUNoZWNrYm94KHtjaGVjaywgaXRlbUlkOiBpZH0pO1xuICB9O1xuXG4gIGNvbnN0IG9uQ2hhbmdlQW1vdW50SXRlbSA9ICh1cGRhdGVkQW1vdW50OiBudW1iZXIpID0+IHtcbiAgICBvbkNoYW5nZUFtb3VudCh7dXBkYXRlZEFtb3VudCwgaXRlbUlkOiBpZH0pO1xuICB9O1xuXG4gIGNvbnN0IGlzRW5hYmxlZCA9IHN0YXR1cyA9PT0gT1JERVJfU1RBVFVTLk5ldyAmJiAhaXNQYWlkO1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5yb3d9PlxuICAgICAgICA8Q2hlY2tCb3hcbiAgICAgICAgICB0aXRsZT17bmFtZX1cbiAgICAgICAgICBjaGVja2VkPXtjaGVja2VkIGFzIGJvb2xlYW59XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlQ2hlY2t9XG4gICAgICAgICAgaXNEaXNhYmxlZD17aXNQYWlkfVxuICAgICAgICAvPlxuICAgICAgICA8Q2xvc2VJY29uIGNvbG9yPXtDT0xPUlMuUFJJTUFSWV9MSUdIVH0gc2l6ZT17MTZ9IC8+XG4gICAgICA8L1ZpZXc+XG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnJvd30+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuY2hmfT5cbiAgICAgICAgICBDSEZ7JyAnfVxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuY2hmQW1vdW50fT57KGFtb3VudCAqIHByaWNlKT8udG9GaXhlZCgyKX08L1RleHQ+XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICAge2lzUGFpZCAmJiA8VGV4dCBzdHlsZT17c3R5bGVzLnBhaWR9PlBhaWQ8L1RleHQ+fVxuICAgICAgICA8Q291bnRlclxuICAgICAgICAgIGFtb3VudD17YW1vdW50fVxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUFtb3VudEl0ZW19XG4gICAgICAgICAgaXNFbmFibGVkPXtpc0VuYWJsZWR9XG4gICAgICAgIC8+XG4gICAgICA8L1ZpZXc+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgT3JkZXJMaXN0SXRlbTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxTQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxVQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxRQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBSyxVQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxNQUFBLEdBQUFOLE9BQUE7QUFJQSxJQUFBTyxPQUFBLEdB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