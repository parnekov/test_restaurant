{"version":3,"names":["matches","matcher","text","normalizer","arguments","length","undefined","getDefaultNormalizer","exact","normalizedText","normalizedMatcher","toLowerCase","includes","lastIndex","test","_ref","_ref$trim","trim","_ref$collapseWhitespa","collapseWhitespace","replace"],"sources":["../src/matches.ts"],"sourcesContent":["export type NormalizerFn = (textToNormalize: string) => string;\n\nexport type TextMatch = string | RegExp;\nexport type TextMatchOptions = {\n  exact?: boolean;\n  normalizer?: NormalizerFn;\n};\n\nexport function matches(\n  matcher: TextMatch,\n  text: string | undefined,\n  normalizer: NormalizerFn = getDefaultNormalizer(),\n  exact: boolean = true,\n): boolean {\n  if (typeof text !== 'string') {\n    return false;\n  }\n\n  const normalizedText = normalizer(text);\n  if (typeof matcher === 'string') {\n    const normalizedMatcher = normalizer(matcher);\n    return exact\n      ? normalizedText === normalizedMatcher\n      : normalizedText.toLowerCase().includes(normalizedMatcher.toLowerCase());\n  } else {\n    // Reset state for global regexes: https://stackoverflow.com/a/1520839/484499\n    matcher.lastIndex = 0;\n    return matcher.test(normalizedText);\n  }\n}\n\ntype NormalizerConfig = {\n  trim?: boolean;\n  collapseWhitespace?: boolean;\n};\n\nexport function getDefaultNormalizer({\n  trim = true,\n  collapseWhitespace = true,\n}: NormalizerConfig = {}): NormalizerFn {\n  return (text: string) => {\n    let normalizedText = text;\n    normalizedText = trim ? normalizedText.trim() : normalizedText;\n    normalizedText = collapseWhitespace ? normalizedText.replace(/\\s+/g, ' ') : normalizedText;\n    return normalizedText;\n  };\n}\n"],"mappings":";;;;;;;AAQO,SAASA,OAAOA,CACrBC,OAAkB,EAClBC,IAAwB,EAGf;EAAA,IAFTC,UAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,oBAAoB,CAAC,CAAC;EAAA,IACjDC,KAAc,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAErB,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,KAAK;EACd;EAEA,IAAMO,cAAc,GAAGN,UAAU,CAACD,IAAI,CAAC;EACvC,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/B,IAAMS,iBAAiB,GAAGP,UAAU,CAACF,OAAO,CAAC;IAC7C,OAAOO,KAAK,GACRC,cAAc,KAAKC,iBAAiB,GACpCD,cAAc,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,iBAAiB,CAACC,WAAW,CAAC,CAAC,CAAC;EAC5E,CAAC,MAAM;IAELV,OAAO,CAACY,SAAS,GAAG,CAAC;IACrB,OAAOZ,OAAO,CAACa,IAAI,CAACL,cAAc,CAAC;EACrC;AACF;AAOO,SAASF,oBAAoBA,CAAA,EAGI;EAAA,IAAAQ,IAAA,GAAAX,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAlB,CAAC,CAAC;IAAAY,SAAA,GAAAD,IAAA,CAFtBE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,IAAI,GAAAA,SAAA;IAAAE,qBAAA,GAAAH,IAAA,CACXI,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,OAAAA,qBAAA;EAErB,OAAQ,UAAAhB,IAAY,EAAK;IACvB,IAAIO,cAAc,GAAGP,IAAI;IACzBO,cAAc,GAAGQ,IAAI,GAAGR,cAAc,CAACQ,IAAI,CAAC,CAAC,GAAGR,cAAc;IAC9DA,cAAc,GAAGU,kBAAkB,GAAGV,cAAc,CAACW,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,GAAGX,cAAc;IAC1F,OAAOA,cAAc;EACvB,CAAC;AACH","ignoreList":[]}