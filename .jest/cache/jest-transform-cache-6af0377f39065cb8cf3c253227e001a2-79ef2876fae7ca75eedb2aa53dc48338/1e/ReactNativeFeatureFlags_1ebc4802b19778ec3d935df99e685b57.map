{"version":3,"names":["_ReactNativeFeatureFlagsBase","require","jsOnlyTestFlag","exports","createJavaScriptFlagGetter","isLayoutAnimationEnabled","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","enableAccessToHostTreeInFabric","shouldUseAnimatedObjectForTransform","shouldUseSetNativePropsInFabric","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","commonTestFlag","createNativeFlagGetter","enableBackgroundExecutor","useModernRuntimeScheduler","enableMicrotasks","batchRenderingUpdatesInEventLoop","enableSpannableBuildingUnification","enableCustomDrawOrderFabric","enableFixForClippedSubviewsCrash","inspectorEnableCxxInspectorPackagerConnection","inspectorEnableModernCDPRegistry","override","setOverrides"],"sources":["ReactNativeFeatureFlags.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<7c83d5613c3be517efe48378e6356e79>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n  type Getter,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = {\n  jsOnlyTestFlag: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n};\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = Partial<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = {\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  enableBackgroundExecutor: Getter<boolean>,\n  useModernRuntimeScheduler: Getter<boolean>,\n  enableMicrotasks: Getter<boolean>,\n  batchRenderingUpdatesInEventLoop: Getter<boolean>,\n  enableSpannableBuildingUnification: Getter<boolean>,\n  enableCustomDrawOrderFabric: Getter<boolean>,\n  enableFixForClippedSubviewsCrash: Getter<boolean>,\n  inspectorEnableCxxInspectorPackagerConnection: Getter<boolean>,\n  inspectorEnableModernCDPRegistry: Getter<boolean>,\n}\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Enables the use of a background executor to compute layout and commit updates on Fabric (this system is deprecated and should not be used).\n */\nexport const enableBackgroundExecutor: Getter<boolean> = createNativeFlagGetter('enableBackgroundExecutor', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler: Getter<boolean> = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks: Getter<boolean> = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop: Getter<boolean> = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * Uses new, deduplicated logic for constructing Android Spannables from text fragments\n */\nexport const enableSpannableBuildingUnification: Getter<boolean> = createNativeFlagGetter('enableSpannableBuildingUnification', false);\n/**\n * When enabled, Fabric will use customDrawOrder in ReactViewGroup (similar to old architecture).\n */\nexport const enableCustomDrawOrderFabric: Getter<boolean> = createNativeFlagGetter('enableCustomDrawOrderFabric', false);\n/**\n * Attempt at fixing a crash related to subview clipping on Android. This is a kill switch for the fix\n */\nexport const enableFixForClippedSubviewsCrash: Getter<boolean> = createNativeFlagGetter('enableFixForClippedSubviewsCrash', false);\n/**\n * Flag determining if the C++ implementation of InspectorPackagerConnection should be used instead of the per-platform one. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableCxxInspectorPackagerConnection: Getter<boolean> = createNativeFlagGetter('inspectorEnableCxxInspectorPackagerConnection', false);\n/**\n * Flag determining if the modern CDP backend should be enabled. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableModernCDPRegistry: Getter<boolean> = createNativeFlagGetter('inspectorEnableModernCDPRegistry', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n"],"mappings":";;;;AAoBA,IAAAA,4BAAA,GAAAC,OAAA;AAqCO,IAAMC,cAA+B,GAAAC,OAAA,CAAAD,cAAA,GAAG,IAAAE,uDAA0B,EAAC,gBAAgB,EAAE,KAAK,CAAC;AAK3F,IAAMC,wBAAyC,GAAAF,OAAA,CAAAE,wBAAA,GAAG,IAAAD,uDAA0B,EAAC,0BAA0B,EAAE,IAAI,CAAC;AAK9G,IAAME,gCAAiD,GAAAH,OAAA,CAAAG,gCAAA,GAAG,IAAAF,uDAA0B,EAAC,kCAAkC,EAAE,KAAK,CAAC;AAK/H,IAAMG,yBAA0C,GAAAJ,OAAA,CAAAI,yBAAA,GAAG,IAAAH,uDAA0B,EAAC,2BAA2B,EAAE,KAAK,CAAC;AAKjH,IAAMI,8BAA+C,GAAAL,OAAA,CAAAK,8BAAA,GAAG,IAAAJ,uDAA0B,EAAC,gCAAgC,EAAE,KAAK,CAAC;AAK3H,IAAMK,mCAAoD,GAAAN,OAAA,CAAAM,mCAAA,GAAG,IAAAL,uDAA0B,EAAC,qCAAqC,EAAE,KAAK,CAAC;AAKrI,IAAMM,+BAAgD,GAAAP,OAAA,CAAAO,+BAAA,GAAG,IAAAN,uDAA0B,EAAC,iCAAiC,EAAE,IAAI,CAAC;AAK5H,IAAMO,4CAA6D,GAAAR,OAAA,CAAAQ,4CAAA,GAAG,IAAAP,uDAA0B,EAAC,8CAA8C,EAAE,KAAK,CAAC;AAKvJ,IAAMQ,cAA+B,GAAAT,OAAA,CAAAS,cAAA,GAAG,IAAAC,mDAAsB,EAAC,gBAAgB,EAAE,KAAK,CAAC;AAIvF,IAAMC,wBAAyC,GAAAX,OAAA,CAAAW,wBAAA,GAAG,IAAAD,mDAAsB,EAAC,0BAA0B,EAAE,KAAK,CAAC;AAI3G,IAAME,yBAA0C,GAAAZ,OAAA,CAAAY,yBAAA,GAAG,IAAAF,mDAAsB,EAAC,2BAA2B,EAAE,KAAK,CAAC;AAI7G,IAAMG,gBAAiC,GAAAb,OAAA,CAAAa,gBAAA,GAAG,IAAAH,mDAAsB,EAAC,kBAAkB,EAAE,KAAK,CAAC;AAI3F,IAAMI,gCAAiD,GAAAd,OAAA,CAAAc,gCAAA,GAAG,IAAAJ,mDAAsB,EAAC,kCAAkC,EAAE,KAAK,CAAC;AAI3H,IAAMK,kCAAmD,GAAAf,OAAA,CAAAe,kCAAA,GAAG,IAAAL,mDAAsB,EAAC,oCAAoC,EAAE,KAAK,CAAC;AAI/H,IAAMM,2BAA4C,GAAAhB,OAAA,CAAAgB,2BAAA,GAAG,IAAAN,mDAAsB,EAAC,6BAA6B,EAAE,KAAK,CAAC;AAIjH,IAAMO,gCAAiD,GAAAjB,OAAA,CAAAiB,gCAAA,GAAG,IAAAP,mDAAsB,EAAC,kCAAkC,EAAE,KAAK,CAAC;AAI3H,IAAMQ,6CAA8D,GAAAlB,OAAA,CAAAkB,6CAAA,GAAG,IAAAR,mDAAsB,EAAC,+CAA+C,EAAE,KAAK,CAAC;AAIrJ,IAAMS,gCAAiD,GAAAnB,OAAA,CAAAmB,gCAAA,GAAG,IAAAT,mDAAsB,EAAC,kCAAkC,EAAE,KAAK,CAAC;AAM3H,IAAMU,QAAQ,GAAApB,OAAA,CAAAoB,QAAA,GAAGC,yCAAY","ignoreList":[]}