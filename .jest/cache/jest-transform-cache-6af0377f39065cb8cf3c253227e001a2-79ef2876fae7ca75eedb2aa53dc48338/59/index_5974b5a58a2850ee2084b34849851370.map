{"version":3,"names":["module","exports","string","count","arguments","length","undefined","options","Object","assign","indent","includeEmptyLines","TypeError","regex","replace","repeat"],"sources":["index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,UAACC,MAAM,EAAyB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3CC,OAAO,GAAAC,MAAA,CAAAC,MAAA;IACNC,MAAM,EAAE,GAAG;IACXC,iBAAiB,EAAE;EAAK,GACrBJ,OAAO,CACV;EAED,IAAI,OAAOL,MAAM,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIU,SAAS,CACjB,gDAA+C,OAAOV,MAAO,IAC/D,CAAC;EACF;EAEA,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIS,SAAS,CACjB,gDAA+C,OAAOT,KAAM,IAC9D,CAAC;EACF;EAEA,IAAI,OAAOI,OAAO,CAACG,MAAM,KAAK,QAAQ,EAAE;IACvC,MAAM,IAAIE,SAAS,CACjB,yDAAwD,OAAOL,OAAO,CAACG,MAAO,IAChF,CAAC;EACF;EAEA,IAAIP,KAAK,KAAK,CAAC,EAAE;IAChB,OAAOD,MAAM;EACd;EAEA,IAAMW,KAAK,GAAGN,OAAO,CAACI,iBAAiB,GAAG,KAAK,GAAG,aAAa;EAE/D,OAAOT,MAAM,CAACY,OAAO,CAACD,KAAK,EAAEN,OAAO,CAACG,MAAM,CAACK,MAAM,CAACZ,KAAK,CAAC,CAAC;AAC3D,CAAC","ignoreList":[]}