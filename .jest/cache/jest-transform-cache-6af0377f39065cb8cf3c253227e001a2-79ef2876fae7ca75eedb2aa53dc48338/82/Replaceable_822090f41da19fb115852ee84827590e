399de187c4cf4b6efde253234c8db96f
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.default = void 0;
var _jestGetType = require('jest-get-type');
var supportTypes = ['map', 'array', 'object'];
var Replaceable = function () {
  function Replaceable(object) {
    (0, _classCallCheck2.default)(this, Replaceable);
    this.object = object;
    this.type = (0, _jestGetType.getType)(object);
    if (!supportTypes.includes(this.type)) {
      throw new Error(`Type ${this.type} is not support in Replaceable!`);
    }
  }
  return (0, _createClass2.default)(Replaceable, [{
    key: "forEach",
    value: function forEach(cb) {
      var _this = this;
      if (this.type === 'object') {
        var descriptors = Object.getOwnPropertyDescriptors(this.object);
        [].concat((0, _toConsumableArray2.default)(Object.keys(descriptors)), (0, _toConsumableArray2.default)(Object.getOwnPropertySymbols(descriptors))).filter(function (key) {
          return descriptors[key].enumerable;
        }).forEach(function (key) {
          cb(_this.object[key], key, _this.object);
        });
      } else {
        this.object.forEach(cb);
      }
    }
  }, {
    key: "get",
    value: function get(key) {
      if (this.type === 'map') {
        return this.object.get(key);
      }
      return this.object[key];
    }
  }, {
    key: "set",
    value: function set(key, value) {
      if (this.type === 'map') {
        this.object.set(key, value);
      } else {
        this.object[key] = value;
      }
    }
  }], [{
    key: "isReplaceable",
    value: function isReplaceable(obj1, obj2) {
      var obj1Type = (0, _jestGetType.getType)(obj1);
      var obj2Type = (0, _jestGetType.getType)(obj2);
      return obj1Type === obj2Type && supportTypes.includes(obj1Type);
    }
  }]);
}();
exports.default = Replaceable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl90b0NvbnN1bWFibGVBcnJheTIiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2NyZWF0ZUNsYXNzMiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9qZXN0R2V0VHlwZSIsInN1cHBvcnRUeXBlcyIsIlJlcGxhY2VhYmxlIiwib2JqZWN0IiwidHlwZSIsImdldFR5cGUiLCJpbmNsdWRlcyIsIkVycm9yIiwia2V5IiwiZm9yRWFjaCIsImNiIiwiX3RoaXMiLCJkZXNjcmlwdG9ycyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJjb25jYXQiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsImdldCIsInNldCIsImlzUmVwbGFjZWFibGUiLCJvYmoxIiwib2JqMiIsIm9iajFUeXBlIiwib2JqMlR5cGUiXSwic291cmNlcyI6WyJSZXBsYWNlYWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9qZXN0R2V0VHlwZSA9IHJlcXVpcmUoJ2plc3QtZ2V0LXR5cGUnKTtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBzdXBwb3J0VHlwZXMgPSBbJ21hcCcsICdhcnJheScsICdvYmplY3QnXTtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXMgKi9cbmNsYXNzIFJlcGxhY2VhYmxlIHtcbiAgb2JqZWN0O1xuICB0eXBlO1xuICBjb25zdHJ1Y3RvcihvYmplY3QpIHtcbiAgICB0aGlzLm9iamVjdCA9IG9iamVjdDtcbiAgICB0aGlzLnR5cGUgPSAoMCwgX2plc3RHZXRUeXBlLmdldFR5cGUpKG9iamVjdCk7XG4gICAgaWYgKCFzdXBwb3J0VHlwZXMuaW5jbHVkZXModGhpcy50eXBlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUeXBlICR7dGhpcy50eXBlfSBpcyBub3Qgc3VwcG9ydCBpbiBSZXBsYWNlYWJsZSFgKTtcbiAgICB9XG4gIH1cbiAgc3RhdGljIGlzUmVwbGFjZWFibGUob2JqMSwgb2JqMikge1xuICAgIGNvbnN0IG9iajFUeXBlID0gKDAsIF9qZXN0R2V0VHlwZS5nZXRUeXBlKShvYmoxKTtcbiAgICBjb25zdCBvYmoyVHlwZSA9ICgwLCBfamVzdEdldFR5cGUuZ2V0VHlwZSkob2JqMik7XG4gICAgcmV0dXJuIG9iajFUeXBlID09PSBvYmoyVHlwZSAmJiBzdXBwb3J0VHlwZXMuaW5jbHVkZXMob2JqMVR5cGUpO1xuICB9XG4gIGZvckVhY2goY2IpIHtcbiAgICBpZiAodGhpcy50eXBlID09PSAnb2JqZWN0Jykge1xuICAgICAgY29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0aGlzLm9iamVjdCk7XG4gICAgICBbXG4gICAgICAgIC4uLk9iamVjdC5rZXlzKGRlc2NyaXB0b3JzKSxcbiAgICAgICAgLi4uT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhkZXNjcmlwdG9ycylcbiAgICAgIF1cbiAgICAgICAgLy9AdHMtZXhwZWN0LWVycm9yIGJlY2F1c2UgdHlwZXNjcmlwdCBkbyBub3Qgc3VwcG9ydCBzeW1ib2wga2V5IGluIG9iamVjdFxuICAgICAgICAvL2h0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvMTg2M1xuICAgICAgICAuZmlsdGVyKGtleSA9PiBkZXNjcmlwdG9yc1trZXldLmVudW1lcmFibGUpXG4gICAgICAgIC5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgY2IodGhpcy5vYmplY3Rba2V5XSwga2V5LCB0aGlzLm9iamVjdCk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9iamVjdC5mb3JFYWNoKGNiKTtcbiAgICB9XG4gIH1cbiAgZ2V0KGtleSkge1xuICAgIGlmICh0aGlzLnR5cGUgPT09ICdtYXAnKSB7XG4gICAgICByZXR1cm4gdGhpcy5vYmplY3QuZ2V0KGtleSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLm9iamVjdFtrZXldO1xuICB9XG4gIHNldChrZXksIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMudHlwZSA9PT0gJ21hcCcpIHtcbiAgICAgIHRoaXMub2JqZWN0LnNldChrZXksIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vYmplY3Rba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxuLyogZXNsaW50LWVuYWJsZSAqL1xuZXhwb3J0cy5kZWZhdWx0ID0gUmVwbGFjZWFibGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLG1CQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxnQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUcsYUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBRWJJLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENBQUM7QUFDRkQsT0FBTyxDQUFDRSxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLElBQUlDLFlB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