{"version":3,"names":["TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","length","touchTrack","undefined","toAdd","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","module","exports"],"sources":["TouchHistoryMath.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nconst TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function (\n    touchHistory,\n    touchesChangedAfter,\n    isXAxis,\n    ofCurrent,\n  ) {\n    const touchBank = touchHistory.touchBank;\n    let total = 0;\n    let count = 0;\n\n    const oneTouchData =\n      touchHistory.numberActiveTouches === 1\n        ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\n        : null;\n\n    if (oneTouchData !== null) {\n      if (\n        oneTouchData.touchActive &&\n        oneTouchData.currentTimeStamp > touchesChangedAfter\n      ) {\n        total +=\n          ofCurrent && isXAxis\n            ? oneTouchData.currentPageX\n            : ofCurrent && !isXAxis\n            ? oneTouchData.currentPageY\n            : !ofCurrent && isXAxis\n            ? oneTouchData.previousPageX\n            : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (let i = 0; i < touchBank.length; i++) {\n        const touchTrack = touchBank[i];\n        if (\n          touchTrack !== null &&\n          touchTrack !== undefined &&\n          touchTrack.touchActive &&\n          touchTrack.currentTimeStamp >= touchesChangedAfter\n        ) {\n          let toAdd; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  currentCentroidX: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidY: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  noCentroid: -1,\n};\n\nmodule.exports = TouchHistoryMath;\n"],"mappings":"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","ignoreList":[]}