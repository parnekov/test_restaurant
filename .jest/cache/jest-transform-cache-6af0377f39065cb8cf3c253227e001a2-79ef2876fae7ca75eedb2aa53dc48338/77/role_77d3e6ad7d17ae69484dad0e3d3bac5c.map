{"version":3,"names":["_accessiblity","require","_findAll","_matchAccessibilityState","_matchAccessibilityValue","_matchStringProp","_within","_makeQueries","matchAccessibleNameIfNeeded","node","name","_ref","getQueriesForElement","queryAllByText","queryAllByLabelText","length","matchAccessibleStateIfNeeded","options","matchAccessibilityState","matchAccessibilityValueIfNeeded","value","matchAccessibilityValue","queryAllByRole","instance","queryAllByRoleFn","role","findAll","isAccessibilityElement","matchStringProp","getAccessibilityRole","formatQueryParams","arguments","undefined","params","String","push","accessibilityStateKeys","forEach","stateKey","accessiblityValueKeys","valueKey","_options$value","_options$value2","join","getMultipleError","getMissingError","_ref2","makeQueries","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","bindByRoleQueries","getByRole","getAllByRole","queryByRole","findByRole","findAllByRole","exports"],"sources":["../../src/queries/role.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport {\n  accessibilityStateKeys,\n  accessiblityValueKeys,\n  getAccessibilityRole,\n  isAccessibilityElement,\n} from '../helpers/accessiblity';\nimport { findAll } from '../helpers/find-all';\nimport {\n  AccessibilityStateMatcher,\n  matchAccessibilityState,\n} from '../helpers/matchers/match-accessibility-state';\nimport {\n  AccessibilityValueMatcher,\n  matchAccessibilityValue,\n} from '../helpers/matchers/match-accessibility-value';\nimport { matchStringProp } from '../helpers/matchers/match-string-prop';\nimport type { TextMatch } from '../matches';\nimport { getQueriesForElement } from '../within';\nimport { makeQueries } from './make-queries';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './make-queries';\nimport { CommonQueryOptions } from './options';\n\ntype ByRoleOptions = CommonQueryOptions &\n  AccessibilityStateMatcher & {\n    name?: TextMatch;\n    value?: AccessibilityValueMatcher;\n  };\n\nconst matchAccessibleNameIfNeeded = (node: ReactTestInstance, name?: TextMatch) => {\n  if (name == null) return true;\n\n  const { queryAllByText, queryAllByLabelText } = getQueriesForElement(node);\n  return queryAllByText(name).length > 0 || queryAllByLabelText(name).length > 0;\n};\n\nconst matchAccessibleStateIfNeeded = (node: ReactTestInstance, options?: ByRoleOptions) => {\n  return options != null ? matchAccessibilityState(node, options) : true;\n};\n\nconst matchAccessibilityValueIfNeeded = (\n  node: ReactTestInstance,\n  value?: AccessibilityValueMatcher,\n) => {\n  return value != null ? matchAccessibilityValue(node, value) : true;\n};\n\nconst queryAllByRole = (instance: ReactTestInstance): QueryAllByQuery<TextMatch, ByRoleOptions> =>\n  function queryAllByRoleFn(role, options) {\n    return findAll(\n      instance,\n      (node) =>\n        // run the cheapest checks first, and early exit to avoid unneeded computations\n        isAccessibilityElement(node) &&\n        matchStringProp(getAccessibilityRole(node), role) &&\n        matchAccessibleStateIfNeeded(node, options) &&\n        matchAccessibilityValueIfNeeded(node, options?.value) &&\n        matchAccessibleNameIfNeeded(node, options?.name),\n      options,\n    );\n  };\n\nconst formatQueryParams = (role: TextMatch, options: ByRoleOptions = {}) => {\n  const params = [`role: \"${String(role)}\"`];\n\n  if (options.name) {\n    params.push(`name: \"${String(options.name)}\"`);\n  }\n\n  accessibilityStateKeys.forEach((stateKey) => {\n    if (options[stateKey] !== undefined) {\n      params.push(`${stateKey} state: ${options[stateKey]}`);\n    }\n  });\n\n  accessiblityValueKeys.forEach((valueKey) => {\n    if (options?.value?.[valueKey] !== undefined) {\n      params.push(`${valueKey} value: ${options?.value?.[valueKey]}`);\n    }\n  });\n\n  return params.join(', ');\n};\n\nconst getMultipleError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Found multiple elements with ${formatQueryParams(role, options)}`;\n\nconst getMissingError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Unable to find an element with ${formatQueryParams(role, options)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByRole,\n  getMissingError,\n  getMultipleError,\n);\n\nexport type ByRoleQueries = {\n  getByRole: GetByQuery<TextMatch, ByRoleOptions>;\n  getAllByRole: GetAllByQuery<TextMatch, ByRoleOptions>;\n  queryByRole: QueryByQuery<TextMatch, ByRoleOptions>;\n  queryAllByRole: QueryAllByQuery<TextMatch, ByRoleOptions>;\n  findByRole: FindByQuery<TextMatch, ByRoleOptions>;\n  findAllByRole: FindAllByQuery<TextMatch, ByRoleOptions>;\n};\n\nexport const bindByRoleQueries = (instance: ReactTestInstance): ByRoleQueries => ({\n  getByRole: getBy(instance),\n  getAllByRole: getAllBy(instance),\n  queryByRole: queryBy(instance),\n  queryAllByRole: queryAllBy(instance),\n  findByRole: findBy(instance),\n  findAllByRole: findAllBy(instance),\n});\n"],"mappings":"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","ignoreList":[]}