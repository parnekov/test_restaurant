{"version":3,"names":["process","env","NODE_ENV","React","require","Scheduler","Scheduler$1","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys","indexOf","assign","get","_reactInternals","set","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","getComponentNameFromType","tag","$$typeof","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","alternate","nextNode","flags","return","isFiberMounted","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","assertIsMounted","Error","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","isArrayImpl","isArray","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","group","groupCollapsed","groupEnd","defineProperties","reenableLogs","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","didError","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","undefined","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","index","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","push","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","NO_CONTEXT","UPDATE_SIGNAL","nodeToInstanceMap","WeakMap","freeze","getPublicInstance","inst","createNodeMock","rootContainerInstance","mockNode","appendChild","parentInstance","splice","insertBefore","beforeChild","beforeIndex","removeChild","clearContainer","container","getRootHostContext","getChildHostContext","parentHostContext","prepareForCommit","containerInfo","resetAfterCommit","createInstance","hostContext","internalInstanceHandle","isHidden","appendInitialChild","prepareUpdate","testElement","oldProps","newProps","shouldSetTextContent","createTextInstance","text","getCurrentEventPriority","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","commitUpdate","updatePayload","commitTextUpdate","textInstance","oldText","newText","resetTextContent","appendChildToContainer","insertInContainerBefore","removeChildFromContainer","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","preparePortalMount","portalInstance","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","c","_frame","replace","includes","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","pop","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","callback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","slice","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","hydrationErrors","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","shouldUpdate","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","forEach","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkPropStringCoercion","propName","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue2","_currentRenderer2","popProvider","currentValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependencies","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","next","parentSuspense","_alternate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT$1","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionSecondary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","create","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","options","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","clear","mountTransition","_mountState","isPending","start","updateTransition","_updateState","rerenderTransition","_rerenderState","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState","_nextState2","subtreeRenderLanes","_subtreeRenderLanes","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","_instance","tempInstance","hasContext","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","ownerName","warningKey","debugSource","fileName","lineNumber","_componentName3","_componentName4","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_dehydrated","updateDehydratedSuspenseComponent","_nextFallbackChildren","_nextPrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment2","_nextPrimaryChildren2","_primaryChildFragment3","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF","capturedValue","attemptHydrationAtLane","_capturedValue","retry","retryDehydratedSuspenseBoundary","_capturedValue2","_primaryChildFragment4","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_Component","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","markUpdate","markRef$1","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","needsVisibilityToggle","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","_isTimedOutSuspense","_primaryChildFragment","completeWork","fiberRoot","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","_offscreenFiber2","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","previousSibling","popRenderLanes","nextIsHidden","_prevState","prevIsHidden","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","invokeGuardedCallbackProd","func","d","f","funcArgs","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","windowEvent","event","windowEventDescriptor","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","inner","addEventListener","initEvent","invokeGuardedCallbackImpl$1","hasError","caughtError","reporter","invokeGuardedCallback","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","setIsRunningInsertionEffect","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","phase","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_instance2","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","_instance3","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","_parent","_before","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","_prevHostParent","_prevHostParentIsContainer","_effect","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","commitReconciliationEffects","_instance4","offscreenFiber","offscreenInstance","wasHidden","markCommitTimeOfFallback","_wasHidden","_offscreenInstance","_newState","_isHidden","offscreenBoundary","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","jestIsDefined","jest","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","priorityLevel","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","_root","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct$1","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","pendingSuspenseBoundaries","ReactVersion","didWarnAboutNestedUpdates","getContextForSubtree","parentComponent","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","obj","path","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","hostFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","act","unstable_act","defaultTestOptions","toJSON","_inst$props","renderedChildren","renderedChild","json","childrenToTree","nodeAndSiblingsArray","toTree","flatten","nodeWithSibling","arr","result","n","el","nodeType","rendered","validWrapperTypes","getChildren","startingNode","descend","wrapFiber","ReactTestInstance","_proto","_currentFiber","find","predicate","expectOne","findAll","deep","findByType","findAllByType","findByProps","findAllByProps","JSON","stringify","_findAll","propsMatch","results","all","filter","isConcurrent","concurrentUpdatesByDefault","unstable_isConcurrent","unstable_strictMode","entry","_Scheduler","newElement","unmount","getInstance","unstable_flushSync","fiberToWrapper","wrapper","exports","unstable_batchedUpdates"],"sources":["react-test-renderer.development.js"],"sourcesContent":["/**\n * @license React\n * react-test-renderer.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\nvar Scheduler = require('scheduler/unstable_mock');\nvar Scheduler$1 = require('scheduler');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar assign = Object.assign;\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar enableSchedulingProfiler = false;\nvar enableProfilerTimer = true;\nvar enableProfilerCommitHooks = true;\nvar warnAboutStringRefs = false;\nvar enableSuspenseAvoidThisFallback = false;\nvar enableNewReconciler = false;\nvar enableLazyContextPropagation = false;\nvar enableLegacyHidden = false;\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n} // Keep in sync with shared/getComponentNameFromType\n\n\nfunction getContextName$1(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n      type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + '.Consumer';\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + '.Provider';\n\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, 'ForwardRef');\n\n    case Fragment:\n      return 'Fragment';\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return 'Portal';\n\n    case HostRoot:\n      return 'Root';\n\n    case HostText:\n      return 'Text';\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n\n      return 'Mode';\n\n    case OffscreenComponent:\n      return 'Offscreen';\n\n    case Profiler:\n      return 'Profiler';\n\n    case ScopeComponent:\n      return 'Scope';\n\n    case SuspenseComponent:\n      return 'Suspense';\n\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      break;\n\n  }\n\n  return null;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n/*                      */\n0;\nvar PerformedWork =\n/*                */\n1; // You can change the rest (and add more).\n\nvar Placement =\n/*                    */\n2;\nvar Update =\n/*                       */\n4;\nvar ChildDeletion =\n/*                */\n16;\nvar ContentReset =\n/*                 */\n32;\nvar Callback =\n/*                     */\n64;\nvar DidCapture =\n/*                   */\n128;\nvar ForceClientRender =\n/*            */\n256;\nvar Ref =\n/*                          */\n512;\nvar Snapshot =\n/*                     */\n1024;\nvar Passive =\n/*                      */\n2048;\nvar Hydrating =\n/*                    */\n4096;\nvar Visibility =\n/*                   */\n8192;\nvar StoreConsistency =\n/*             */\n16384;\nvar LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n/*               */\n32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n/*                   */\n32768;\nvar ShouldCapture =\n/*                */\n65536;\nvar ForceUpdateForLegacySuspense =\n/* */\n131072;\nvar Forked =\n/*                       */\n1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n/*                    */\n2097152;\nvar LayoutStatic =\n/*                 */\n4194304;\nvar PassiveStatic =\n/*                */\n8388608; // These flags allow us to traverse to fibers that have effects on mount\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n// flag logic (see #20043)\nUpdate | Snapshot | ( 0);\nvar MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n\n  return null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\"Return fibers should always be each others' alternates. \" + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler$1.unstable_scheduleCallback;\nvar cancelCallback = Scheduler$1.unstable_cancelCallback;\nvar shouldYield = Scheduler$1.unstable_shouldYield;\nvar requestPaint = Scheduler$1.unstable_requestPaint;\nvar now = Scheduler$1.unstable_now;\nvar ImmediatePriority = Scheduler$1.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler$1.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler$1.unstable_NormalPriority;\nvar IdlePriority = Scheduler$1.unstable_IdlePriority;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar rendererID = null;\nvar injectedHook = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if ( !hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nfunction injectProfilingHooks(profilingHooks) {\n}\n\nfunction getLaneLabelMap() {\n  {\n    return null;\n  }\n}\nfunction markComponentRenderStopped() {\n}\nfunction markComponentErrored(fiber, thrownValue, lanes) {\n}\nfunction markComponentSuspended(fiber, wakeable, lanes) {\n}\n\nvar NoMode =\n/*                         */\n0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n/*                 */\n1;\nvar ProfileMode =\n/*                    */\n2;\nvar StrictLegacyMode =\n/*               */\n8;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n/*                        */\n0;\nvar NoLane =\n/*                          */\n0;\nvar SyncLane =\n/*                        */\n1;\nvar InputContinuousHydrationLane =\n/*    */\n2;\nvar InputContinuousLane =\n/*             */\n4;\nvar DefaultHydrationLane =\n/*            */\n8;\nvar DefaultLane =\n/*                     */\n16;\nvar TransitionHydrationLane =\n/*                */\n32;\nvar TransitionLanes =\n/*                       */\n4194240;\nvar TransitionLane1 =\n/*                        */\n64;\nvar TransitionLane2 =\n/*                        */\n128;\nvar TransitionLane3 =\n/*                        */\n256;\nvar TransitionLane4 =\n/*                        */\n512;\nvar TransitionLane5 =\n/*                        */\n1024;\nvar TransitionLane6 =\n/*                        */\n2048;\nvar TransitionLane7 =\n/*                        */\n4096;\nvar TransitionLane8 =\n/*                        */\n8192;\nvar TransitionLane9 =\n/*                        */\n16384;\nvar TransitionLane10 =\n/*                       */\n32768;\nvar TransitionLane11 =\n/*                       */\n65536;\nvar TransitionLane12 =\n/*                       */\n131072;\nvar TransitionLane13 =\n/*                       */\n262144;\nvar TransitionLane14 =\n/*                       */\n524288;\nvar TransitionLane15 =\n/*                       */\n1048576;\nvar TransitionLane16 =\n/*                       */\n2097152;\nvar RetryLanes =\n/*                            */\n130023424;\nvar RetryLane1 =\n/*                             */\n4194304;\nvar RetryLane2 =\n/*                             */\n8388608;\nvar RetryLane3 =\n/*                             */\n16777216;\nvar RetryLane4 =\n/*                             */\n33554432;\nvar RetryLane5 =\n/*                             */\n67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n/*          */\n134217728;\nvar NonIdleLanes =\n/*                          */\n268435455;\nvar IdleHydrationLane =\n/*               */\n268435456;\nvar IdleLane =\n/*                        */\n536870912;\nvar OffscreenLane =\n/*                   */\n1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n\n  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n  // bother waiting until the root is complete.\n  (wipLanes & suspendedLanes) === NoLanes) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if ( // Tests whether the next lane is equal or lower priority than the wip\n    // one. This works because the bits decrease in priority as you go left.\n    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n    // only difference between default updates and transition updates is that\n    // default updates do not support refresh transitions.\n    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyNonUrgentLanes(lanes) {\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n\n  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if ( // Is this one of the newly entangled lanes?\n    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?\n    entanglements[index] & entangledLanes) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydration(root, renderLanes) {\n  var renderLane = getHighestPriorityLane(renderLanes);\n  var lane;\n\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  } // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n\n\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\nfunction getTransitionsForLanes(root, lanes) {\n  {\n    return null;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\nfunction shim() {\n  throw new Error('The current renderer does not support hydration. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');\n} // Hydration (when unsupported)\nvar isSuspenseInstancePending = shim;\nvar isSuspenseInstanceFallback = shim;\nvar getSuspenseInstanceFallbackErrorDetails = shim;\nvar registerSuspenseInstanceRetry = shim;\nvar hydrateTextInstance = shim;\nvar clearSuspenseBoundary = shim;\nvar clearSuspenseBoundaryFromContainer = shim;\nvar errorHydratingContainer = shim;\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\nvar nodeToInstanceMap = new WeakMap();\n\n{\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\nfunction getPublicInstance(inst) {\n  switch (inst.tag) {\n    case 'INSTANCE':\n      var createNodeMock = inst.rootContainerInstance.createNodeMock;\n      var mockNode = createNodeMock({\n        type: inst.type,\n        props: inst.props\n      });\n\n      if (typeof mockNode === 'object' && mockNode !== null) {\n        nodeToInstanceMap.set(mockNode, inst);\n      }\n\n      return mockNode;\n\n    default:\n      return inst;\n  }\n}\nfunction appendChild(parentInstance, child) {\n  {\n    if (!isArray(parentInstance.children)) {\n      error('An invalid container has been provided. ' + 'This may indicate that another renderer is being used in addition to the test renderer. ' + '(For example, ReactDOM.createPortal inside of a ReactTestRenderer tree.) ' + 'This is not supported.');\n    }\n  }\n\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  parentInstance.children.push(child);\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  var beforeIndex = parentInstance.children.indexOf(beforeChild);\n  parentInstance.children.splice(beforeIndex, 0, child);\n}\nfunction removeChild(parentInstance, child) {\n  var index = parentInstance.children.indexOf(child);\n  parentInstance.children.splice(index, 1);\n}\nfunction clearContainer(container) {\n  container.children.splice(0);\n}\nfunction getRootHostContext(rootContainerInstance) {\n  return NO_CONTEXT;\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  return NO_CONTEXT;\n}\nfunction prepareForCommit(containerInfo) {\n  // noop\n  return null;\n}\nfunction resetAfterCommit(containerInfo) {// noop\n}\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  return {\n    type: type,\n    props: props,\n    isHidden: false,\n    children: [],\n    internalInstanceHandle: internalInstanceHandle,\n    rootContainerInstance: rootContainerInstance,\n    tag: 'INSTANCE'\n  };\n}\nfunction appendInitialChild(parentInstance, child) {\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  parentInstance.children.push(child);\n}\nfunction prepareUpdate(testElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n  return UPDATE_SIGNAL;\n}\nfunction shouldSetTextContent(type, props) {\n  return false;\n}\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n  return {\n    text: text,\n    isHidden: false,\n    tag: 'TEXT'\n  };\n}\nfunction getCurrentEventPriority() {\n  return DefaultEventPriority;\n}\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1; // -------------------\nfunction commitUpdate(instance, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n  instance.type = type;\n  instance.props = newProps;\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  textInstance.text = newText;\n}\nfunction resetTextContent(testElement) {// noop\n}\nvar appendChildToContainer = appendChild;\nvar insertInContainerBefore = insertBefore;\nvar removeChildFromContainer = removeChild;\nfunction hideInstance(instance) {\n  instance.isHidden = true;\n}\nfunction hideTextInstance(textInstance) {\n  textInstance.isHidden = true;\n}\nfunction unhideInstance(instance, props) {\n  instance.isHidden = false;\n}\nfunction unhideTextInstance(textInstance, text) {\n  textInstance.isHidden = false;\n}\nfunction preparePortalMount(portalInstance) {// noop\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error('Unexpected pop.');\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n\n    var instance = workInProgress.stateNode;\n\n    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== 'function') {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(workInProgress, type, previousContext);\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent:\n          {\n            var Component = node.type;\n\n            if (isContextProvider(Component)) {\n              return node.stateNode.__reactInternalMemoizedMergedChildContext;\n            }\n\n            break;\n          }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = '';\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\n\nvar hydrationErrors = null;\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n  {\n    return false;\n  }\n}\n\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n  {\n    throw new Error('Expected prepareToHydrateHostInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  {\n    throw new Error('Expected prepareToHydrateHostTextInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n  var shouldUpdate = hydrateTextInstance();\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\n  {\n    throw new Error('Expected prepareToHydrateHostSuspenseInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nfunction popHydrationState(fiber) {\n  {\n    return false;\n  }\n}\n\nfunction upgradeHydrationErrorsToRecoverable() {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nfunction queueHydrationError(error) {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction describeFiber(fiber) {\n  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;\n  var source =  fiber._debugSource ;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy');\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList');\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type);\n\n    default:\n      return '';\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = '';\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return '';\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction getCurrentFiber() {\n  {\n    return current;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function () {},\n  recordLegacyContextWarning: function (fiber, instance) {},\n  flushLegacyContextWarning: function () {},\n  discardPendingWarnings: function () {}\n};\n\n{\n  var findStrictRoot = function (fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function (set) {\n    var array = [];\n    set.forEach(function (value) {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.\n    instance.componentWillMount.__suppressDeprecationWarning !== true) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\n        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n\n      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, \" + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '\\nPlease update the following components: %s', _sortedNames);\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n\n      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '\\nPlease update the following components: %s', _sortedNames2);\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames3);\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n\n      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, refactor your \" + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames4);\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames5);\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function (fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error('Legacy context API has been detected within a strict-mode tree.' + '\\n\\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue2, providerFiber);\n    context._currentValue2 = nextValue;\n\n    {\n      if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue2 = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null) ; else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      var parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      var _alternate = parentSuspense.alternate;\n\n      if (_alternate !== null) {\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n      } // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n\n\n      scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n    }\n  }\n\n  var value =  context._currentValue2;\n\n  if (lastFullyObservedContext === context) ; else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n      } // This is the first dependency for this component. Create a new list.\n\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\n\nvar concurrentQueues = null;\nfunction pushConcurrentUpdateQueue(queue) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\nfunction finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (var i = 0; i < concurrentQueues.length; i++) {\n      var queue = concurrentQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    concurrentQueues = null;\n  }\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n}\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n} // Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\n\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  {\n    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate()) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n  switch (update.tag) {\n    case ReplaceState:\n      {\n        var payload = update.payload;\n\n        if (typeof payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          var nextState = payload.call(instance, prevState, nextProps);\n\n          {\n\n            exitDisallowedContextReadInDEV();\n          }\n\n          return nextState;\n        } // State object\n\n\n        return payload;\n      }\n\n    case CaptureUpdate:\n      {\n        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n      }\n    // Intentional fallthrough\n\n    case UpdateState:\n      {\n        var _payload = update.payload;\n        var partialState;\n\n        if (typeof _payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          partialState = _payload.call(instance, prevState, nextProps);\n\n          {\n\n            exitDisallowedContextReadInDEV();\n          }\n        } else {\n          // Partial state object\n          partialState = _payload;\n        }\n\n        if (partialState === null || partialState === undefined) {\n          // Null and undefined are treated as no-ops.\n          return prevState;\n        } // Merge the partial state and the previous state.\n\n\n        return assign({}, prevState, partialState);\n      }\n\n    case ForceUpdate:\n      {\n        hasForceUpdate = true;\n        return prevState;\n      }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n\n        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n        var callback = update.callback;\n\n        if (callback !== null && // If the update was already committed, we should not queue its\n        // callback again.\n        update.lane !== NoLane) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== 'function') {\n    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + (\"received: \" + callback));\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n\n    var key = callerName + '_' + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || 'Component';\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function () {\n      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n\n  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n\n    {\n\n      if (shouldUpdate === undefined) {\n        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\n    }\n\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\n    }\n\n    if (instance.propTypes) {\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\n    }\n\n    if (instance.contextType) {\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\n    }\n\n    {\n      if (instance.contextTypes) {\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\n      }\n\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\n    }\n\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\n    }\n\n    if (typeof instance.componentDidUnmount === 'function') {\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\n    }\n\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\n    }\n\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\n    }\n\n    if (instance.defaultProps) {\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\n      error('%s.state: must be set to an object or null', name);\n    }\n\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid = // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = '';\n\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\n\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error('%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    var fiberFlags = Update;\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var fiberFlags = Update;\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags = Update;\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags2 = Update;\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\n\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,\n  // both before and after `shouldComponentUpdate` has been called. Not ideal,\n  // but I'm loath to refactor this function. This only happens for memoized\n  // components so it's not that common.\n  enableLazyContextPropagation   ;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function (child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function (child, returnFiber) {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== 'object') {\n      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error('Each child in a list should have a unique ' + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n      // because these cannot be automatically converted to an arrow function\n      // using a codemod. Therefore, we don't have to warn about string refs again.\n      !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error('A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + 'bug in React. Please file an issue.');\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, 'ref');\n      }\n\n      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\n\n      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {\n        return current.ref;\n      }\n\n      var ref = function (value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== 'string') {\n        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');\n      }\n\n      if (!element._owner) {\n        throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + ' the following reasons:\\n' + '1. You may be adding a ref to a function component\\n' + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + '3. You have multiple copies of React loaded\\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  var payload = lazyType._payload;\n  var init = lazyType._init;\n  return init(payload);\n} // This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n    }\n\n    if (current !== null) {\n      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.\n      // We need to do this after the Hot Reloading check above,\n      // because hot reloading has different semantics than prod because\n      // it doesn't resuspend. So we can't let the call below suspend.\n      typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n\n            _created.ref = coerceRef(returnFiber, null, newChild);\n            _created.return = returnFiber;\n            return _created;\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n\n            _created2.return = returnFiber;\n            return _created2;\n          }\n\n        case REACT_LAZY_TYPE:\n          {\n            var payload = newChild._payload;\n            var init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            if (newChild.key === key) {\n              return updateElement(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            if (newChild.key === key) {\n              return updatePortal(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_LAZY_TYPE:\n          {\n            var payload = newChild._payload;\n            var init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n          }\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== 'string') {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\n\n          break;\n\n        case REACT_LAZY_TYPE:\n          var payload = child._payload;\n          var init = child._init;\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== 'function') {\n      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\n        if (!didWarnAboutGenerators) {\n          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error('An iterable object provided no iterator.');\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.\n          // We need to do this after the Hot Reloading check above,\n          // because hot reloading has different semantics than prod because\n          // it doesn't resuspend. So we can't let the call below suspend.\n          typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n          return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error('Resuming work not yet implemented.');\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT$1 = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT$1);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT$1);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT$1);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT$1) {\n    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT$1, fiber);\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return parentContext & SubtreeSuspenseContextMask | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n          return node;\n        }\n      }\n    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n    // keep track of whether it suspended or not.\n    node.memoizedProps.revealOrder !== undefined) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n/*   */\n0; // Represents whether effect should fire.\n\nvar HasEffect =\n/* */\n1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n/*  */\n2;\nvar Layout =\n/*    */\n4;\nvar Passive$1 =\n/*   */\n8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = '';\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n          table += row;\n        }\n\n        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + prevDeps.join(', ') + \"]\", \"[\" + nextDeps.join(', ') + \"]\");\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n    // and creates false positives. To make this work in legacy mode, we'd\n    // need to mark fibers that commit in an incomplete state, somehow. For\n    // now I'll disable the warning that most of the bugs that would trigger\n    // it are either exclusive to concurrent mode or exist in both.\n    (current.mode & ConcurrentMode) !== NoMode) {\n      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n\n  {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n  // checking whether we scheduled a subscription effect above.\n  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n    fiber.flags |= Passive;\n    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function () {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n}\n\nfunction mountEffect(create, deps) {\n  {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === 'function') {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function () {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty('current')) {\n        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function () {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction mountDebugValue(value, formatterFn) {// This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n  var resolvedCurrentHook = currentHook;\n  var prevValue = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    var prevValue = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl(hook, prevValue, value) {\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n    if (!objectIs(value, prevValue)) {\n      // Schedule a deferred render\n      var deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n\n      hook.baseState = true;\n    } // Reuse the previous value\n\n\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\n  ReactCurrentBatchConfig$1.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\n\n  {\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$1.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState = mountState(false),\n      isPending = _mountState[0],\n      setPending = _mountState[1]; // The `start` method never changes.\n\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState = updateState(),\n      isPending = _updateState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState = rerenderState(),\n      isPending = _rerenderState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var alternate = fiber.alternate;\n\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\n            return;\n          }\n        } catch (error) {// Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n} // TODO: Move to ReactFiberConcurrentUpdates?\n\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function () {\n    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n  };\n\n  var warnInvalidHookAccess = function () {\n    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler$1.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValueAtFiber(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null\n  };\n}\nfunction createCapturedValue(value, digest, stack) {\n  return {\n    value: value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null\n  };\n}\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(boundary, errorInfo) {\n  return true;\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : 'The above error occurred in one of your React components:';\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function () {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === 'function') {\n    var error$1 = errorInfo.value;\n\n    update.payload = function () {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function () {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : ''\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n\n  var tag = sourceFiber.tag;\n\n  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n\n      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot:\n        {\n          var _errorInfo = value;\n          workInProgress.flags |= ShouldCapture;\n          var lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n}\n\nfunction updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n    Component.defaultProps === undefined) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(type));\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\n      'prop', getComponentNameFromType(_type));\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n          'prop', getComponentNameFromType(outerMemoType));\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.\n     workInProgress.type === current.type )) {\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (current === null && ref !== null || current !== null && current.ref !== ref) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false:\n        {\n          var _instance = workInProgress.stateNode;\n          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n          // Is there a better way to do this?\n\n          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n          var state = tempInstance.state;\n\n          _instance.updater.enqueueSetState(_instance, state, null);\n\n          break;\n        }\n\n      case true:\n        {\n          workInProgress.flags |= DidCapture;\n          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n          var error$1 = new Error('Simulated error coming from DevTools');\n          var lane = pickArbitraryLane(renderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n          var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          break;\n        }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  } else {\n    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n  }\n\n  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      setIsRendering(false);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n\n  var nextChildren = nextState.element;\n\n  {\n\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n\n  if (prevProps !== null && shouldSetTextContent()) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  // immediately after.\n\n\n  return null;\n}\n\nfunction mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent:\n      {\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n          workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n        }\n\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ClassComponent:\n      {\n        {\n          workInProgress.type = Component = resolveClassForHotReloading(Component);\n        }\n\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ForwardRef:\n      {\n        {\n          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n        }\n\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case MemoComponent:\n      {\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = Component.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\n              'prop', getComponentNameFromType(Component));\n            }\n          }\n        }\n\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes);\n        return child;\n      }\n  }\n\n  var hint = '';\n\n  {\n    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n\n  throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n}\n\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n}\n\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n    setIsRendering(false);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = '';\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      var warningKey = ownerName || '';\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error('%s: Function components do not support contextType.', _componentName4);\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool,\n    transitions: prevOffscreenState.transitions\n  };\n} // TODO: Probably should inline this back\n\n\nfunction shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n\n    var suspenseState = workInProgress.memoizedState;\n\n    if (suspenseState !== null) {\n      var dehydrated = suspenseState.dehydrated;\n\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(workInProgress);\n      }\n    }\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // Special path for hydration\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n      var _dehydrated = prevState.dehydrated;\n\n      if (_dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n      }\n    }\n\n    if (showFallback) {\n      var _nextFallbackChildren = nextProps.fallback;\n      var _nextPrimaryChildren = nextProps.children;\n      var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n      var _primaryChildFragment2 = workInProgress.child;\n      var prevOffscreenState = current.child.memoizedState;\n      _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      var _nextPrimaryChildren2 = nextProps.children;\n\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n\n      workInProgress.memoizedState = null;\n      return _primaryChildFragment3;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n    mode: 'visible',\n    children: primaryChildren\n  });\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if ( // In legacy mode, we commit the primary tree as if it successfully\n  // completed, even though it's in an inconsistent state.\n  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n  // already cloned. In legacy mode, the only case where this isn't true is\n  // when DevTools forces us to display a fallback; we skip the first render\n  // pass entirely and go straight to rendering the fallback. (In Concurrent\n  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n  // only codepath.)\n  workInProgress.child !== currentPrimaryChildFragment) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n  } else {\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  } // This will add the old fiber to the deletion list\n\n\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\n\n  var nextProps = workInProgress.pendingProps;\n  var primaryChildren = nextProps.children;\n  var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var fiberMode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n  var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n\n  fallbackChildFragment.flags |= Placement;\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    {\n      error('Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOMClient.hydrateRoot(container, <App />)' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');\n    }\n\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback()) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n  if (!didSuspend) {\n\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // TODO: When we delete legacy mode, we should make this error argument\n      // required — every concurrent mode path that causes hydration to\n      // de-opt to client rendering should have an error message.\n      null);\n    }\n\n    if (isSuspenseInstanceFallback()) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      var digest, message, stack;\n\n      {\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n\n        digest = _getSuspenseInstanceF.digest;\n        message = _getSuspenseInstanceF.message;\n        stack = _getSuspenseInstanceF.stack;\n      }\n\n      var error;\n\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error('The server could not finish this Suspense boundary, likely ' + 'due to an error during server rendering. Switched to ' + 'client rendering.');\n      }\n\n      var capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\n    }\n    // any context has changed, we need to treat is as if the input might have changed.\n\n\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      var root = getWorkInProgressRoot();\n\n      if (root !== null) {\n        var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n\n        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\n\n          var eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\n        }\n      } // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n\n\n      renderDidSuspendDelayIfPossible();\n\n      var _capturedValue = createCapturedValue(new Error('This Suspense boundary received an update before it finished ' + 'hydrating. This caused the boundary to switch to client rendering. ' + 'The usual way to fix this is to wrap the original update ' + 'in startTransition.'));\n\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\n    } else if (isSuspenseInstancePending()) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\n\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\n\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry();\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n\n      var _capturedValue2 = createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. ' + 'Switched to client rendering.'));\n\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\n    } else if (workInProgress.memoizedState !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      var nextPrimaryChildren = nextProps.children;\n      var nextFallbackChildren = nextProps.fallback;\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      var _primaryChildFragment4 = workInProgress.child;\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          case 'forward':\n          case 'backward':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          default:\n            error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n\n            break;\n        }\n      } else {\n        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? 'array' : 'iterable';\n\n      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === 'function') {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards':\n        {\n          var lastContentRow = findLastContentRow(workInProgress.child);\n          var tail;\n\n          if (lastContentRow === null) {\n            // The whole list is part of the tail.\n            // TODO: We could fast path by just rendering the tail now.\n            tail = workInProgress.child;\n            workInProgress.child = null;\n          } else {\n            // Disconnect the tail rows after the content row.\n            // We're going to render them separately later.\n            tail = lastContentRow.sibling;\n            lastContentRow.sibling = null;\n          }\n\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          tail, lastContentRow, tailMode);\n          break;\n        }\n\n      case 'backwards':\n        {\n          // We're going to find the first row that has existing content.\n          // At the same time we're going to reverse the list of everything\n          // we pass in the meantime. That's going to be our tail in reverse\n          // order.\n          var _tail = null;\n          var row = workInProgress.child;\n          workInProgress.child = null;\n\n          while (row !== null) {\n            var currentRow = row.alternate; // New rows can't be content rows.\n\n            if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n              // This is the beginning of the main content.\n              workInProgress.child = row;\n              break;\n            }\n\n            var nextRow = row.sibling;\n            row.sibling = _tail;\n            _tail = row;\n            row = nextRow;\n          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n\n          initSuspenseListRenderState(workInProgress, true, // isBackwards\n          _tail, null, // last\n          tailMode);\n          break;\n        }\n\n      case 'together':\n        {\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          null, // tail\n          null, // last\n          undefined);\n          break;\n        }\n\n      default:\n        {\n          // The default reveal order is the same as not having\n          // a boundary.\n          workInProgress.memoizedState = null;\n        }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== 'function') {\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error('Cannot swap the root fiber.');\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error('Expected parent to have a child.');\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          pushContextProvider(workInProgress);\n        }\n\n        break;\n      }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider:\n      {\n        var newValue = workInProgress.memoizedProps.value;\n        var context = workInProgress.type._context;\n        pushProvider(workInProgress, context, newValue);\n        break;\n      }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent:\n      {\n        var state = workInProgress.memoizedState;\n\n        if (state !== null) {\n          if (state.dehydrated !== null) {\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has\n            // been unsuspended it has committed as a resolved Suspense component.\n            // If it needs to be retried, it should have work scheduled on it.\n\n            workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\n            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n\n            return null;\n          } // If this boundary is currently timed out, we need to decide\n          // whether to retry the primary children, or to skip over it and\n          // go straight to the fallback. Check the priority of the primary\n          // child fragment.\n\n\n          var primaryChildFragment = workInProgress.child;\n          var primaryChildLanes = primaryChildFragment.childLanes;\n\n          if (includesSomeLane(renderLanes, primaryChildLanes)) {\n            // The primary children have pending work. Use the normal path\n            // to attempt to render the primary children again.\n            return updateSuspenseComponent(current, workInProgress, renderLanes);\n          } else {\n            // The primary child fragment does not have pending work marked\n            // on it\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient\n            // priority. Bailout.\n\n            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n\n            if (child !== null) {\n              // The fallback children have pending work. Skip over the\n              // primary children and work on the fallback.\n              return child.sibling;\n            } else {\n              // Note: We can return `null` here because we already checked\n              // whether there were nested context consumers, via the call to\n              // `bailoutOnAlreadyFinishedWork` above.\n              return null;\n            }\n          }\n        } else {\n          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n        }\n\n        break;\n      }\n\n    case SuspenseListComponent:\n      {\n        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (didSuspendBefore) {\n          if (_hasChildWork) {\n            // If something was in fallback state last time, and we have all the\n            // same children then we're still in progressive loading state.\n            // Something might get unblocked by state updates or retries in the\n            // tree which will affect the tail. So we need to use the normal\n            // path to compute the correct tail.\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          } // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n\n\n          workInProgress.flags |= DidCapture;\n        } // If nothing suspended before and we're rendering the same children,\n        // then the tail doesn't matter. Anything new that suspends will work\n        // in the \"together\" mode, so we can continue from the state we had.\n\n\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState !== null) {\n          // Reset to the \"together\" mode in case we've started a different\n          // update in the past but didn't complete it.\n          renderState.rendering = null;\n          renderState.tail = null;\n          renderState.lastEffect = null;\n        }\n\n        pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n        if (_hasChildWork) {\n          break;\n        } else {\n          // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n          return null;\n        }\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        // Need to check if the tree still needs to be deferred. This is\n        // almost identical to the logic used in the normal update path,\n        // so we'll just enter that. The only difference is we'll bail out\n        // at the next level instead of this one, because the child props\n        // have not changed. Which is fine.\n        // TODO: Probably should refactor `beginWork` to split the bailout\n        // path from the normal path. I'm tempted to do a labeled break here\n        // but I won't :)\n        workInProgress.lanes = NoLanes;\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:\n     workInProgress.type !== current.type )) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n      // may not be work scheduled on `current`, so we check for this flag.\n      (workInProgress.flags & DidCapture) === NoFlags) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      {\n        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n      }\n\n    case LazyComponent:\n      {\n        var elementType = workInProgress.elementType;\n        return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n      }\n\n    case FunctionComponent:\n      {\n        var Component = workInProgress.type;\n        var unresolvedProps = workInProgress.pendingProps;\n        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case ClassComponent:\n      {\n        var _Component = workInProgress.type;\n        var _unresolvedProps = workInProgress.pendingProps;\n\n        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n\n        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n      }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText();\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef:\n      {\n        var type = workInProgress.type;\n        var _unresolvedProps2 = workInProgress.pendingProps;\n\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n      }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent:\n      {\n        var _type2 = workInProgress.type;\n        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = _type2.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n              'prop', getComponentNameFromType(_type2));\n            }\n          }\n        }\n\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n      }\n\n    case SimpleMemoComponent:\n      {\n        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n      }\n\n    case IncompleteClassComponent:\n      {\n        var _Component2 = workInProgress.type;\n        var _unresolvedProps4 = workInProgress.pendingProps;\n\n        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n      }\n\n    case SuspenseListComponent:\n      {\n        return updateSuspenseListComponent(current, workInProgress, renderLanes);\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n      {\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent$1;\nvar updateHostText$1;\n\n{\n  // Mutation mode\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (current, workInProgress) {// Noop\n  };\n\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    var updatePayload = prepareUpdate(); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n\n  switch (renderState.tailMode) {\n    case 'hidden':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var tailNode = renderState.tail;\n        var lastTailNode = null;\n\n        while (tailNode !== null) {\n          if (tailNode.alternate !== null) {\n            lastTailNode = tailNode;\n          }\n\n          tailNode = tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          renderState.tail = null;\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n\n    case 'collapsed':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var _tailNode = renderState.tail;\n        var _lastTailNode = null;\n\n        while (_tailNode !== null) {\n          if (_tailNode.alternate !== null) {\n            _lastTailNode = _tailNode;\n          }\n\n          _tailNode = _tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (_lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          if (!hasRenderedATailFallback && renderState.tail !== null) {\n            // We suspended during the head. We want to show at least one\n            // row at the tail. So we'll keep on and cut off the rest.\n            renderState.tail.sibling = null;\n          } else {\n            renderState.tail = null;\n          }\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          _lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n\n  var wasHydrated = popHydrationState();\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error('A dehydrated suspense component was completed without a hydrated node. ' + 'This is probably a bug in React.');\n      }\n\n      prepareToHydrateHostSuspenseInstance();\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var isTimedOutSuspense = nextState !== null;\n\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    } else {\n\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n\n\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var _isTimedOutSuspense = nextState !== null;\n\n          if (_isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var _primaryChildFragment = workInProgress.child;\n\n            if (_primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\n\n    return true;\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostRoot:\n      {\n        var fiberRoot = workInProgress.stateNode;\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          var wasHydrated = popHydrationState();\n\n          if (wasHydrated) {\n            // If we hydrated, then we'll need to schedule an update for\n            // the commit side-effects on the root.\n            markUpdate(workInProgress);\n          } else {\n            if (current !== null) {\n              var prevState = current.memoizedState;\n\n              if ( // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                // Schedule an effect to clear this container at the start of the\n                // next commit. This handles the case of React rendering into a\n                // container with previous children. It's also safe to do for\n                // updates too, because current.child would only be null if the\n                // previous render was null (so the container would already\n                // be empty).\n                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n                // recoverable errors during first hydration attempt. If so, add\n                // them to a queue so we can log them in the commit phase.\n\n                upgradeHydrationErrorsToRecoverable();\n              }\n            }\n          }\n        }\n\n        updateHostContainer(current, workInProgress);\n        bubbleProperties(workInProgress);\n\n        return null;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(workInProgress);\n        var rootContainerInstance = getRootHostContainer();\n        var type = workInProgress.type;\n\n        if (current !== null && workInProgress.stateNode != null) {\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n          if (current.ref !== workInProgress.ref) {\n            markRef$1(workInProgress);\n          }\n        } else {\n          if (!newProps) {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n          // \"stack\" as the parent. Then append children as we go in beginWork\n          // or completeWork depending on whether we want to add them top->down or\n          // bottom->up. Top->down is faster in IE11.\n\n          var _wasHydrated = popHydrationState();\n\n          if (_wasHydrated) {\n            // TODO: Move this and createInstance step into the beginPhase\n            // to consolidate.\n            if (prepareToHydrateHostInstance()) {\n              // If changes to the hydrated node need to be applied at the\n              // commit-phase we mark this as such.\n              markUpdate(workInProgress);\n            }\n          } else {\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n            appendAllChildren(instance, workInProgress, false, false);\n            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n          }\n\n          if (workInProgress.ref !== null) {\n            // If there is a ref on a host node we need to schedule a callback\n            markRef$1(workInProgress);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostText:\n      {\n        var newText = newProps;\n\n        if (current && workInProgress.stateNode != null) {\n          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n          // to schedule a side-effect to do the updates.\n\n          updateHostText$1(current, workInProgress, oldText, newText);\n        } else {\n          if (typeof newText !== 'string') {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n          }\n\n          var _rootContainerInstance = getRootHostContainer();\n\n          var _currentHostContext = getHostContext();\n\n          var _wasHydrated2 = popHydrationState();\n\n          if (_wasHydrated2) {\n            if (prepareToHydrateHostTextInstance()) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            workInProgress.stateNode = createTextInstance(newText);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\n        // to its own fiber type so that we can add other kinds of hydration\n        // boundaries that aren't associated with a Suspense tree. In anticipation\n        // of such a refactor, all the hydration logic is contained in\n        // this branch.\n\n        if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n          var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n\n          if (!fallthroughToNormalSuspensePath) {\n            if (workInProgress.flags & ShouldCapture) {\n              // Special case. There were remaining unhydrated nodes. We treat\n              // this as a mismatch. Revert to client rendering.\n              return workInProgress;\n            } else {\n              // Did not finish hydrating, either because this is the initial\n              // render or because something suspended.\n              return null;\n            }\n          } // Continue with the normal Suspense path.\n\n        }\n\n        if ((workInProgress.flags & DidCapture) !== NoFlags) {\n          // Something suspended. Re-render with the fallback children.\n          workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          } // Don't bubble properties in this case.\n\n\n          return workInProgress;\n        }\n\n        var nextDidTimeout = nextState !== null;\n        var prevDidTimeout = current !== null && current.memoizedState !== null;\n        // a passive effect, which is when we process the transitions\n\n\n        if (nextDidTimeout !== prevDidTimeout) {\n          // an effect to toggle the subtree's visibility. When we switch from\n          // fallback -> primary, the inner Offscreen fiber schedules this effect\n          // as part of its normal complete phase. But when we switch from\n          // primary -> fallback, the inner Offscreen fiber does not have a complete\n          // phase. So we need to schedule its effect here.\n          //\n          // We also use this flag to connect/disconnect the effects, but the same\n          // logic applies: when re-connecting, the Offscreen fiber's complete\n          // phase will handle scheduling the effect. It's only when the fallback\n          // is active that we have to do anything special.\n\n\n          if (nextDidTimeout) {\n            var _offscreenFiber2 = workInProgress.child;\n            _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n            // in the concurrent tree already suspended during this render.\n            // This is a known bug.\n\n            if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n              // TODO: Move this back to throwException because this is too late\n              // if this is a large tree which is common for initial loads. We\n              // don't know if we should restart a render or not until we get\n              // this marker, and this is too late.\n              // If this render already had a ping or lower pri updates,\n              // and this is the first time we know we're going to suspend we\n              // should be able to immediately restart from within throwException.\n              var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n\n              if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                // If this was in an invisible tree or a new render, then showing\n                // this boundary is ok.\n                renderDidSuspend();\n              } else {\n                // Otherwise, we're going to have to hide content so we should\n                // suspend for longer if possible.\n                renderDidSuspendDelayIfPossible();\n              }\n            }\n          }\n        }\n\n        var wakeables = workInProgress.updateQueue;\n\n        if (wakeables !== null) {\n          // Schedule an effect to attach a retry listener to the promise.\n          // TODO: Move to passive phase\n          workInProgress.flags |= Update;\n        }\n\n        bubbleProperties(workInProgress);\n\n        {\n          if ((workInProgress.mode & ProfileMode) !== NoMode) {\n            if (nextDidTimeout) {\n              // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n              var primaryChildFragment = workInProgress.child;\n\n              if (primaryChildFragment !== null) {\n                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent:\n      {\n        // Same as class component case. I put it down here so that the tags are\n        // sequential to ensure this switch is compiled to a jump table.\n        var _Component = workInProgress.type;\n\n        if (isContextProvider(_Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState === null) {\n          // We're running in the default, \"independent\" mode.\n          // We don't do anything in this mode.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n        var renderedTail = renderState.rendering;\n\n        if (renderedTail === null) {\n          // We just rendered the head.\n          if (!didSuspendAlready) {\n            // This is the first pass. We need to figure out if anything is still\n            // suspended in the rendered set.\n            // If new content unsuspended, but there's still some content that\n            // didn't. Then we need to do a second pass that forces everything\n            // to keep showing their fallbacks.\n            // We might be suspended if something in this render pass suspended, or\n            // something in the previous committed pass suspended. Otherwise,\n            // there's no chance so we can skip the expensive call to\n            // findFirstSuspended.\n            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n\n            if (!cannotBeSuspended) {\n              var row = workInProgress.child;\n\n              while (row !== null) {\n                var suspended = findFirstSuspended(row);\n\n                if (suspended !== null) {\n                  didSuspendAlready = true;\n                  workInProgress.flags |= DidCapture;\n                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                  // part of the second pass. In that case nothing will subscribe to\n                  // its thenables. Instead, we'll transfer its thenables to the\n                  // SuspenseList so that it can retry if they resolve.\n                  // There might be multiple of these in the list but since we're\n                  // going to wait for all of them anyway, it doesn't really matter\n                  // which ones gets to ping. In theory we could get clever and keep\n                  // track of how many dependencies remain but it gets tricky because\n                  // in the meantime, we can add/remove/change items and dependencies.\n                  // We might bail out of the loop before finding any but that\n                  // doesn't matter since that means that the other boundaries that\n                  // we did find already has their listeners attached.\n\n                  var newThenables = suspended.updateQueue;\n\n                  if (newThenables !== null) {\n                    workInProgress.updateQueue = newThenables;\n                    workInProgress.flags |= Update;\n                  } // Rerender the whole list, but this time, we'll force fallbacks\n                  // to stay in place.\n                  // Reset the effect flags before doing the second pass since that's now invalid.\n                  // Reset the child fibers to their original state.\n\n\n                  workInProgress.subtreeFlags = NoFlags;\n                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                  // rerender the children.\n\n                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.\n\n                  return workInProgress.child;\n                }\n\n                row = row.sibling;\n              }\n            }\n\n            if (renderState.tail !== null && now() > getRenderTargetTime()) {\n              // We have already passed our CPU deadline but we still have rows\n              // left in the tail. We'll just give up further attempts to render\n              // the main content and only render fallbacks.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          } else {\n            cutOffTailIfNeeded(renderState, false);\n          } // Next we're going to render the tail.\n\n        } else {\n          // Append the rendered row to the child list.\n          if (!didSuspendAlready) {\n            var _suspended = findFirstSuspended(renderedTail);\n\n            if (_suspended !== null) {\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n              // get lost if this row ends up dropped during a second pass.\n\n              var _newThenables = _suspended.updateQueue;\n\n              if (_newThenables !== null) {\n                workInProgress.updateQueue = _newThenables;\n                workInProgress.flags |= Update;\n              }\n\n              cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.\n              ) {\n                  // We're done.\n                  bubbleProperties(workInProgress);\n                  return null;\n                }\n            } else if ( // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n              // We have now passed our CPU deadline and we'll just give up further\n              // attempts to render the main content and only render fallbacks.\n              // The assumption is that this is usually faster.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          }\n\n          if (renderState.isBackwards) {\n            // The effect list of the backwards tail will have been added\n            // to the end. This breaks the guarantee that life-cycles fire in\n            // sibling order but that isn't a strong guarantee promised by React.\n            // Especially since these might also just pop in during future commits.\n            // Append to the beginning of the list.\n            renderedTail.sibling = workInProgress.child;\n            workInProgress.child = renderedTail;\n          } else {\n            var previousSibling = renderState.last;\n\n            if (previousSibling !== null) {\n              previousSibling.sibling = renderedTail;\n            } else {\n              workInProgress.child = renderedTail;\n            }\n\n            renderState.last = renderedTail;\n          }\n        }\n\n        if (renderState.tail !== null) {\n          // We still have tail rows to render.\n          // Pop a row.\n          var next = renderState.tail;\n          renderState.rendering = next;\n          renderState.tail = next.sibling;\n          renderState.renderingStartTime = now();\n          next.sibling = null; // Restore the context.\n          // TODO: We can probably just avoid popping it instead and only\n          // setting it the first time we go from not suspended to suspended.\n\n          var suspenseContext = suspenseStackCursor.current;\n\n          if (didSuspendAlready) {\n            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n          } else {\n            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n          }\n\n          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n          // Don't bubble properties in this case.\n\n          return next;\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        popRenderLanes(workInProgress);\n        var _nextState = workInProgress.memoizedState;\n        var nextIsHidden = _nextState !== null;\n\n        if (current !== null) {\n          var _prevState = current.memoizedState;\n          var prevIsHidden = _prevState !== null;\n\n          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden )) {\n            workInProgress.flags |= Visibility;\n          }\n        }\n\n        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n          bubbleProperties(workInProgress);\n        } else {\n          // Don't bubble properties for hidden children unless we're rendering\n          // at offscreen priority.\n          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n            bubbleProperties(workInProgress);\n\n            {\n              // Check if there was an insertion or update in the hidden subtree.\n              // If so, we need to hide those nodes in the commit phase, so\n              // schedule a visibility effect.\n              if ( workInProgress.subtreeFlags & (Placement | Update)) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n          }\n        }\n        return null;\n      }\n\n    case CacheComponent:\n      {\n\n        return null;\n      }\n\n    case TracingMarkerComponent:\n      {\n\n        return null;\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        var flags = workInProgress.flags;\n\n        if (flags & ShouldCapture) {\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case HostRoot:\n      {\n        var root = workInProgress.stateNode;\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n        var _flags = workInProgress.flags;\n\n        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n          // There was an error during render that wasn't captured by a suspense\n          // boundary. Do a second pass on the root to unmount the children.\n          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n          return workInProgress;\n        } // We unwound to the root without completing it. Exit.\n\n\n        return null;\n      }\n\n    case HostComponent:\n      {\n        // TODO: popHydrationState\n        popHostContext(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var suspenseState = workInProgress.memoizedState;\n\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          if (workInProgress.alternate === null) {\n            throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in ' + 'React. Please file an issue.');\n          }\n        }\n\n        var _flags2 = workInProgress.flags;\n\n        if (_flags2 & ShouldCapture) {\n          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n        // caught by a nested boundary. If not, it should bubble through.\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n\n    case CacheComponent:\n\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent:\n      {\n        var childContextTypes = interruptedWork.type.childContextTypes;\n\n        if (childContextTypes !== null && childContextTypes !== undefined) {\n          popContext(interruptedWork);\n        }\n\n        break;\n      }\n\n    case HostRoot:\n      {\n        var root = interruptedWork.stateNode;\n        popHostContainer(interruptedWork);\n        popTopLevelContextObject(interruptedWork);\n        resetWorkInProgressVersions();\n        break;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(interruptedWork);\n        break;\n      }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');\n      }\n\n      var evt = document.createEvent('Event');\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {// Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n\n      var evtType = \"react-\" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\n\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\nvar reporter = {\n  onError: function (error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function () {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function (current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if ( current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\n\nfunction safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      var retVal;\n\n      try {\n        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          break;\n        }\n\n      case ClassComponent:\n        {\n          if (current !== null) {\n            var prevProps = current.memoizedProps;\n            var prevState = current.memoizedState;\n            var instance = finishedWork.stateNode; // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            }\n\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n\n            {\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                didWarnSet.add(finishedWork.type);\n\n                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));\n              }\n            }\n\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          {\n            var root = finishedWork.stateNode;\n            clearContainer(root.containerInfo);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default:\n        {\n          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n        }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n\n\n        var create = effect.create;\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n\n        effect.destroy = create();\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = 'useLayoutEffect';\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = 'useInsertionEffect';\n            } else {\n              hookName = 'useEffect';\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum = '\\n\\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + hookName + '(() => {\\n' + '  async function fetchData() {\\n' + '    // You can await here\\n' + '    const response = await MyAPI.getData(someId);\\n' + '    // ...\\n' + '  }\\n' + '  fetchData();\\n' + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n\n            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler:\n          {\n            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n            var _finishedWork$memoize = finishedWork.memoizedProps,\n                id = _finishedWork$memoize.id,\n                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n            // It does not get reset until the start of the next commit phase.\n\n            var commitTime = getCommitTime();\n            var phase = finishedWork.alternate === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onPostCommit === 'function') {\n              onPostCommit(id, phase, passiveEffectDuration, commitTime);\n            } // Bubble times to the next nearest ancestor Profiler.\n            // After we process that Profiler, we'll bubble further up.\n\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          {\n            // At this point layout effects have already been destroyed (during mutation phase).\n            // This is done to prevent sibling component effects from interfering with each other,\n            // e.g. a destroy function in one component should never override a ref set\n            // by a create function in another component during the same commit.\n            if ( finishedWork.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                commitHookEffectListMount(Layout | HasEffect, finishedWork);\n              } finally {\n                recordLayoutEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            }\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          var instance = finishedWork.stateNode;\n\n          if (finishedWork.flags & Update) {\n            {\n              if (current === null) {\n                // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidMount();\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidMount();\n                }\n              } else {\n                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                var prevState = current.memoizedState; // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                }\n              }\n            }\n          } // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n\n\n          var updateQueue = finishedWork.updateQueue;\n\n          if (updateQueue !== null) {\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            } // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n\n            commitUpdateQueue(finishedWork, updateQueue, instance);\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n          var _updateQueue = finishedWork.updateQueue;\n\n          if (_updateQueue !== null) {\n            var _instance = null;\n\n            if (finishedWork.child !== null) {\n              switch (finishedWork.child.tag) {\n                case HostComponent:\n                  _instance = getPublicInstance(finishedWork.child.stateNode);\n                  break;\n\n                case ClassComponent:\n                  _instance = finishedWork.child.stateNode;\n                  break;\n              }\n            }\n\n            commitUpdateQueue(finishedWork, _updateQueue, _instance);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n        {\n          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n          // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n          // These effects should only be committed when components are first mounted,\n          // aka when there is no current/alternate.\n\n          if (current === null && finishedWork.flags & Update) {\n            var type = finishedWork.type;\n            var props = finishedWork.memoizedProps;\n          }\n\n          break;\n        }\n\n      case HostText:\n        {\n          // We have no life-cycles associated with text.\n          break;\n        }\n\n      case HostPortal:\n        {\n          // We have no life-cycles associated with portals.\n          break;\n        }\n\n      case Profiler:\n        {\n          {\n            var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                onCommit = _finishedWork$memoize2.onCommit,\n                onRender = _finishedWork$memoize2.onRender;\n            var effectDuration = finishedWork.stateNode.effectDuration;\n            var commitTime = getCommitTime();\n            var phase = current === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onRender === 'function') {\n              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n            }\n\n            {\n              if (typeof onCommit === 'function') {\n                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n              // because the effect is also where times bubble to parent Profilers.\n\n\n              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n              // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n              var parentFiber = finishedWork.return;\n\n              outer: while (parentFiber !== null) {\n                switch (parentFiber.tag) {\n                  case HostRoot:\n                    var root = parentFiber.stateNode;\n                    root.effectDuration += effectDuration;\n                    break outer;\n\n                  case Profiler:\n                    var parentStateNode = parentFiber.stateNode;\n                    parentStateNode.effectDuration += effectDuration;\n                    break outer;\n                }\n\n                parentFiber = parentFiber.return;\n              }\n            }\n          }\n\n          break;\n        }\n\n      case SuspenseComponent:\n        {\n          break;\n        }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent:\n        {\n          break;\n        }\n\n      default:\n        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  var hostSubtreeRoot = null;\n\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    var node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          try {\n            var instance = node.stateNode;\n\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            var _instance3 = node.stateNode;\n\n            if (isHidden) {\n              hideTextInstance(_instance3);\n            } else {\n              unhideTextInstance(_instance3, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === 'function') {\n      var retVal;\n\n      if ( finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty('current')) {\n          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n}\n\nfunction isHostParent(fiber) {\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  var node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n\n\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      {\n        var parent = parentFiber.stateNode;\n\n        if (parentFiber.flags & ContentReset) {\n\n          parentFiber.flags &= ~ContentReset;\n        }\n\n        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n        // children to find all the terminal nodes.\n\n        insertOrAppendPlacementNode(finishedWork, before, parent);\n        break;\n      }\n\n    case HostRoot:\n    case HostPortal:\n      {\n        var _parent = parentFiber.stateNode.containerInfo;\n\n        var _before = getHostSibling(finishedWork);\n\n        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n        break;\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n} // These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\n\n\nvar hostParent = null;\nvar hostParentIsContainer = false;\n\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\n  {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    var parent = returnFiber;\n\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent:\n          {\n            hostParent = parent.stateNode;\n            hostParentIsContainer = false;\n            break findParent;\n          }\n\n        case HostRoot:\n          {\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = true;\n            break findParent;\n          }\n\n        case HostPortal:\n          {\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = true;\n            break findParent;\n          }\n      }\n\n      parent = parent.return;\n    }\n\n    if (hostParent === null) {\n      throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n    }\n\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  var child = parent.child;\n\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n\n  switch (deletedFiber.tag) {\n    case HostComponent:\n      {\n        {\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        } // Intentional fallthrough to next branch\n\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    case HostText:\n      {\n        // We only need to remove the nearest host child. Set the host parent\n        // to `null` on the stack to indicate that nested children don't\n        // need to be removed.\n        {\n          var prevHostParent = hostParent;\n          var prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = null;\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n          hostParent = prevHostParent;\n          hostParentIsContainer = prevHostParentIsContainer;\n\n          if (hostParent !== null) {\n            // Now that all the child effects have unmounted, we can remove the\n            // node from the tree.\n            if (hostParentIsContainer) {\n              removeChildFromContainer(hostParent, deletedFiber.stateNode);\n            } else {\n              removeChild(hostParent, deletedFiber.stateNode);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case DehydratedFragment:\n      {\n        // Delete the dehydrated suspense boundary and all of its content.\n\n\n        {\n          if (hostParent !== null) {\n            if (hostParentIsContainer) {\n              clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\n            } else {\n              clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostPortal:\n      {\n        {\n          // When we go into a portal, it becomes the parent to remove from.\n          var _prevHostParent = hostParent;\n          var _prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = deletedFiber.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n          hostParent = _prevHostParent;\n          hostParentIsContainer = _prevHostParentIsContainer;\n        }\n\n        return;\n      }\n\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        {\n          var updateQueue = deletedFiber.updateQueue;\n\n          if (updateQueue !== null) {\n            var lastEffect = updateQueue.lastEffect;\n\n            if (lastEffect !== null) {\n              var firstEffect = lastEffect.next;\n              var effect = firstEffect;\n\n              do {\n                var _effect = effect,\n                    destroy = _effect.destroy,\n                    tag = _effect.tag;\n\n                if (destroy !== undefined) {\n                  if ((tag & Insertion) !== NoFlags$1) {\n                    safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                  } else if ((tag & Layout) !== NoFlags$1) {\n\n                    if ( deletedFiber.mode & ProfileMode) {\n                      startLayoutEffectTimer();\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      recordLayoutEffectDuration(deletedFiber);\n                    } else {\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                    }\n                  }\n                }\n\n                effect = effect.next;\n              } while (effect !== firstEffect);\n            }\n          }\n        }\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case ClassComponent:\n      {\n        {\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\n          var instance = deletedFiber.stateNode;\n\n          if (typeof instance.componentWillUnmount === 'function') {\n            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n          }\n        }\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case OffscreenComponent:\n      {\n        {\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        }\n\n        break;\n      }\n\n    default:\n      {\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n  }\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function (wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\n  setCurrentFiber(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root);\n  setCurrentFiber(finishedWork);\n}\n\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  var deletions = parentFiber.deletions;\n\n  if (deletions !== null) {\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i];\n\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  var prevDebugFiber = getCurrentFiber();\n\n  if (parentFiber.subtreeFlags & MutationMask) {\n    var child = parentFiber.child;\n\n    while (child !== null) {\n      setCurrentFiber(child);\n      commitMutationEffectsOnFiber(child, root);\n      child = child.sibling;\n    }\n  }\n\n  setCurrentFiber(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          try {\n            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n            commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          } // Layout effects are destroyed during the mutation phase so that all\n          // destroy functions for all fibers are called before any create functions.\n          // This prevents sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n\n\n          if ( finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n\n            recordLayoutEffectDuration(finishedWork);\n          } else {\n            try {\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(current, current.return);\n          }\n        }\n\n        return;\n      }\n\n    case HostComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(current, current.return);\n          }\n        }\n\n        {\n          // TODO: ContentReset gets cleared by the children during the commit\n          // phase. This is a refactor hazard because it means we must read\n          // flags the flags after `commitReconciliationEffects` has already run;\n          // the order matters. We should refactor so that ContentReset does not\n          // rely on mutating the flag during commit. Like by setting a flag\n          // during the render phase instead.\n          if (finishedWork.flags & ContentReset) {\n            var instance = finishedWork.stateNode;\n\n            try {\n              resetTextContent(instance);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n\n          if (flags & Update) {\n            var _instance4 = finishedWork.stateNode;\n\n            if (_instance4 != null) {\n              // Commit the work prepared earlier.\n              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n              // as the newProps. The updatePayload will contain the real change in\n              // this case.\n\n              var oldProps = current !== null ? current.memoizedProps : newProps;\n              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n              var updatePayload = finishedWork.updateQueue;\n              finishedWork.updateQueue = null;\n\n              if (updatePayload !== null) {\n                try {\n                  commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostText:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          {\n            if (finishedWork.stateNode === null) {\n              throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            }\n\n            var textInstance = finishedWork.stateNode;\n            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n\n            var oldText = current !== null ? current.memoizedProps : newText;\n\n            try {\n              commitTextUpdate(textInstance, oldText, newText);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostRoot:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        return;\n      }\n\n    case HostPortal:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        return;\n      }\n\n    case SuspenseComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n        var offscreenFiber = finishedWork.child;\n\n        if (offscreenFiber.flags & Visibility) {\n          var offscreenInstance = offscreenFiber.stateNode;\n          var newState = offscreenFiber.memoizedState;\n          var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\n          // read it during an event\n\n          offscreenInstance.isHidden = isHidden;\n\n          if (isHidden) {\n            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n\n            if (!wasHidden) {\n              // TODO: Move to passive phase\n              markCommitTimeOfFallback();\n            }\n          }\n        }\n\n        if (flags & Update) {\n          try {\n            commitSuspenseCallback(finishedWork);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n\n          attachSuspenseRetryListeners(finishedWork);\n        }\n\n        return;\n      }\n\n    case OffscreenComponent:\n      {\n        var _wasHidden = current !== null && current.memoizedState !== null;\n\n        {\n          recursivelyTraverseMutationEffects(root, finishedWork);\n        }\n\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Visibility) {\n          var _offscreenInstance = finishedWork.stateNode;\n          var _newState = finishedWork.memoizedState;\n\n          var _isHidden = _newState !== null;\n\n          var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can\n          // read it during an event\n\n          _offscreenInstance.isHidden = _isHidden;\n\n          {\n            // TODO: This needs to run whenever there's an insertion or update\n            // inside a hidden Offscreen tree.\n            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n          }\n        }\n\n        return;\n      }\n\n    case SuspenseListComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          attachSuspenseRetryListeners(finishedWork);\n        }\n\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        return;\n      }\n\n    default:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n        return;\n      }\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  var flags = finishedWork.flags;\n\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    } // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n\n\n    finishedWork.flags &= ~Placement;\n  }\n\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n}\n\nfunction commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n\n          try {\n            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n          } finally {\n            recordPassiveEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n          recordPassiveEffectDuration(finishedWork);\n        } else {\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( current.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n          recordPassiveEffectDuration(current);\n        } else {\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        }\n\n        break;\n      }\n  }\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest\n\n    var jestIsDefined = typeof jest !== 'undefined';\n    return  jestIsDefined && isReactActEnvironmentGlobal !== false;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error('The current testing environment is not configured to support ' + 'act(...)');\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n/*             */\n0;\nvar BatchedContext =\n/*               */\n1;\nvar RenderContext =\n/*                */\n2;\nvar CommitContext =\n/*                */\n4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\nvar workInProgressTransitions = null;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar isFlushingPassiveEffects = false;\nvar didScheduleUpdateDuringPassiveEffects = false;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0;\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nvar isRunningInsertionEffect = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if ( ReactCurrentBatchConfig$2.transition !== null) {\n      var transition = ReactCurrentBatchConfig$2.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n  checkForNestedUpdates();\n\n  {\n    if (isRunningInsertionEffect) {\n      error('useInsertionEffect must not schedule updates.');\n    }\n  }\n\n  {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  } // Mark that the root has a pending update.\n\n\n  markRootUpdated(root, lane, eventTime);\n\n  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ( (executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n     (executionContext & RenderContext) !== NoContext\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n  // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n  // on the `act` queue.\n  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in an Immediate task.\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n\n  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n\n  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);\n  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored:\n      {\n        throw new Error('Root did not complete. This is a bug in React.');\n      }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored:\n      {\n        // We should have already attempted to retry this tree. If we reached\n        // this point, it errored again. Commit it.\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootSuspended:\n      {\n        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n        // should immediately commit it or wait a bit.\n\n        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()) {\n          // This render only included retries, no updates. Throttle committing\n          // retries so that we don't show too many loading states too quickly.\n          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n          if (msUntilTimeout > 10) {\n            var nextLanes = getNextLanes(root, NoLanes);\n\n            if (nextLanes !== NoLanes) {\n              // There's additional work on this root.\n              break;\n            }\n\n            var suspendedLanes = root.suspendedLanes;\n\n            if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n              // We should prefer to render the fallback of at the last\n              // suspended level. Ping the last suspended level to try\n              // rendering it again.\n              // FIXME: What if the suspended lanes are Idle? Should not restart.\n              var eventTime = requestEventTime();\n              markRootPinged(root, suspendedLanes);\n              break;\n            } // The render is suspended, it hasn't timed out, and there's no\n            // lower priority work to do. Instead of committing the fallback\n            // immediately, wait for more data to arrive.\n\n\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n            break;\n          }\n        } // The work expired. Commit immediately.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootSuspendedWithDelay:\n      {\n        markRootSuspended$1(root, lanes);\n\n        if (includesOnlyTransitions(lanes)) {\n          // This is a transition, so we should exit without committing a\n          // placeholder and without scheduling a timeout. Delay indefinitely\n          // until we receive more data.\n          break;\n        }\n\n        if (!shouldForceFlushFallbacksInDEV()) {\n          // This is not a transition, but we did trigger an avoided state.\n          // Schedule a placeholder to display after a short delay, using the Just\n          // Noticeable Difference.\n          // TODO: Is the JND optimization worth the added complexity? If this is\n          // the only reason we track the event time, then probably not.\n          // Consider removing.\n          var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n          var eventTimeMs = mostRecentEventTime;\n          var timeElapsedMs = now() - eventTimeMs;\n\n          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n\n          if (_msUntilTimeout > 10) {\n            // Instead of committing the fallback immediately, wait for more data\n            // to arrive.\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n            break;\n          }\n        } // Commit the placeholder.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootCompleted:\n      {\n        // The work completed. Ready to commit.\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unknown root exit status.');\n      }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error('Root did not complete. This is a bug in React.');\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction batchedUpdates(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  finishQueueingConcurrentUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\n          var wakeable = thrownValue;\n          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n        } else {\n          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n        }\n      }\n\n      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n\n  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n\n    workInProgressTransitions = getTransitionsForLanes();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');\n  }\n\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n\n    workInProgressTransitions = getTransitionsForLanes();\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n\n  if (workInProgress !== null) {\n\n    return RootInProgress;\n  } else {\n\n\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ( (completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ( (completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors, transitions) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n\n  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n\n      pendingPassiveTransitions = transitions;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n\n  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    ReactCurrentBatchConfig$2.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n\n    commitMutationEffects(root, finishedWork);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    commitLayoutEffects(finishedWork, root, lanes);\n    // opportunity to paint.\n\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n\n    {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  } // Read this again, since an effect might have updated it\n\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  // additional work on this root is scheduled.\n\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      var componentStack = recoverableError.stack;\n      var digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {\n        componentStack: componentStack,\n        digest: digest\n      });\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n\n  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n\n  flushSyncCallbacks();\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$2.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  } // Cache and clear the transitions flag\n\n\n  var transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n  var root = rootWithPendingPassiveEffects;\n  var lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Cannot flush passive effects while already rendering.');\n  }\n\n  {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks();\n\n  {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  } // TODO: Move to commitPassiveMountEffects\n\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\n  var eventTime = requestEventTime();\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  {\n    reportUncaughtErrorInDEV(error$1);\n    setIsRunningInsertionEffect(false);\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        var root = enqueueUpdate(fiber, update, SyncLane);\n        var eventTime = requestEventTime();\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\\n\\n' + 'Error message:\\n\\n%s', error$1);\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n\n  var eventTime = requestEventTime();\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState;\n  var retryLane = NoLane;\n\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      break;\n\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n\n    default:\n      throw new Error('Pinged unknown suspense boundary type. ' + 'This is probably a bug in React.');\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      error('Maximum update depth exceeded. This can happen when a component ' + \"calls setState inside useEffect, but useEffect either doesn't \" + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n\n    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\nvar beginWork$1;\n\n{\n  beginWork$1 = beginWork;\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n            var dedupeKey = renderingComponentName;\n\n            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);\n            }\n\n            break;\n          }\n\n        case ClassComponent:\n          {\n            if (!didWarnAboutUpdateInRender) {\n              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');\n\n              didWarnAboutUpdateInRender = true;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if ( callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return  ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error('An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\\n\\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\\n\\n' + 'act(() => {\\n' + '  /* finish loading suspended data */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');\n    }\n  }\n}\n\nfunction setIsRunningInsertionEffect(isRunning) {\n  {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function (handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (type !== null && type !== undefined && typeof type.render === 'function') {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;\n\n    switch (fiber.tag) {\n      case ClassComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case FunctionComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            // We don't know the inner type yet.\n            // We're going to assume that the lazy inner type is stable,\n            // and so it is sufficient to avoid reconciling it away.\n            // We're not going to unwrap or actually use the new lazy type.\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case ForwardRef:\n        {\n          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case MemoComponent:\n      case SimpleMemoComponent:\n        {\n          if ($$typeofNextType === REACT_MEMO_TYPE) {\n            // TODO: if it was but can no longer be simple,\n            // we shouldn't set this.\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function (root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n        updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function () {\n      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n    });\n  }\n};\nvar scheduleRoot = function (root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function () {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n  {\n    var alternate = fiber.alternate,\n        child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (_root !== null) {\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function (root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(families.map(function (family) {\n      return family.current;\n    }));\n    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n  {\n    var child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\n\nvar createFiber = function (tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct$1(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === 'function') {\n    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies = currentDependencies === null ? null : {\n    lanes: currentDependencies.lanes,\n    firstContext: currentDependencies.firstContext\n  }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if ( isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(type, // React$ElementType\nkey, pendingProps, owner, mode, lanes) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === 'function') {\n    if (shouldConstruct$1(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default:\n        {\n          if (typeof type === 'object' && type !== null) {\n            switch (type.$$typeof) {\n              case REACT_PROVIDER_TYPE:\n                fiberTag = ContextProvider;\n                break getTag;\n\n              case REACT_CONTEXT_TYPE:\n                // This is a consumer\n                fiberTag = ContextConsumer;\n                break getTag;\n\n              case REACT_FORWARD_REF_TYPE:\n                fiberTag = ForwardRef;\n\n                {\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                }\n\n                break getTag;\n\n              case REACT_MEMO_TYPE:\n                fiberTag = MemoComponent;\n                break getTag;\n\n              case REACT_LAZY_TYPE:\n                fiberTag = LazyComponent;\n                resolvedType = null;\n                break getTag;\n            }\n          }\n\n          var info = '';\n\n          {\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n            }\n\n            var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n            if (ownerName) {\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n            }\n          }\n\n          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n        }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== 'string') {\n      error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {\n    isHidden: false\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n// host config, but because they are passed in at runtime, we have to thread\n// them through the root constructor. Perhaps we should put them all into a\n// single type, like a DynamicHostConfig that is defined by the renderer.\nidentifierPrefix, onRecoverableError, transitionCallbacks) {\n  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n  // stateNode is any.\n\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = '18.2.0';\n\nvar didWarnAboutNestedUpdates;\n\n{\n  didWarnAboutNestedUpdates = false;\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== 'function') {\n        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  var root = enqueueUpdate(current$1, update, lane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nvar shouldErrorImpl = function (fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function (fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function (obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function (obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here\n      obj[oldKey], oldPath, newPath, index + 1);\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function (obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn('copyWithRename() expects paths of the same length');\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn('copyWithRename() expects paths to be the same except for the deepest key');\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function (obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function (obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function (fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n\n  overrideHookState = function (fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateDeletePath = function (fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n\n  overrideProps = function (fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsDeletePath = function (fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsRenamePath = function (fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = function (fiber) {\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = function (newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function (newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh:  findHostInstancesForRefresh ,\n    scheduleRefresh:  scheduleRefresh ,\n    scheduleRoot:  scheduleRoot ,\n    setRefreshHandler:  setRefreshHandler ,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber:  getCurrentFiberForDevTools ,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\nvar act = React.unstable_act; // TODO: Remove from public bundle\n\nvar defaultTestOptions = {\n  createNodeMock: function () {\n    return null;\n  }\n};\n\nfunction toJSON(inst) {\n  if (inst.isHidden) {\n    // Omit timed out children from output entirely. This seems like the least\n    // surprising behavior. We could perhaps add a separate API that includes\n    // them, if it turns out people need it.\n    return null;\n  }\n\n  switch (inst.tag) {\n    case 'TEXT':\n      return inst.text;\n\n    case 'INSTANCE':\n      {\n        /* eslint-disable no-unused-vars */\n        // We don't include the `children` prop in JSON.\n        // Instead, we will include the actual rendered children.\n        var _inst$props = inst.props,\n            children = _inst$props.children,\n            props = _objectWithoutPropertiesLoose(_inst$props, [\"children\"]);\n        /* eslint-enable */\n\n\n        var renderedChildren = null;\n\n        if (inst.children && inst.children.length) {\n          for (var i = 0; i < inst.children.length; i++) {\n            var renderedChild = toJSON(inst.children[i]);\n\n            if (renderedChild !== null) {\n              if (renderedChildren === null) {\n                renderedChildren = [renderedChild];\n              } else {\n                renderedChildren.push(renderedChild);\n              }\n            }\n          }\n        }\n\n        var json = {\n          type: inst.type,\n          props: props,\n          children: renderedChildren\n        };\n        Object.defineProperty(json, '$$typeof', {\n          value: Symbol.for('react.test.json')\n        });\n        return json;\n      }\n\n    default:\n      throw new Error(\"Unexpected node type in toJSON: \" + inst.tag);\n  }\n}\n\nfunction childrenToTree(node) {\n  if (!node) {\n    return null;\n  }\n\n  var children = nodeAndSiblingsArray(node);\n\n  if (children.length === 0) {\n    return null;\n  } else if (children.length === 1) {\n    return toTree(children[0]);\n  }\n\n  return flatten(children.map(toTree));\n}\n\nfunction nodeAndSiblingsArray(nodeWithSibling) {\n  var array = [];\n  var node = nodeWithSibling;\n\n  while (node != null) {\n    array.push(node);\n    node = node.sibling;\n  }\n\n  return array;\n}\n\nfunction flatten(arr) {\n  var result = [];\n  var stack = [{\n    i: 0,\n    array: arr\n  }];\n\n  while (stack.length) {\n    var n = stack.pop();\n\n    while (n.i < n.array.length) {\n      var el = n.array[n.i];\n      n.i += 1;\n\n      if (isArray(el)) {\n        stack.push(n);\n        stack.push({\n          i: 0,\n          array: el\n        });\n        break;\n      }\n\n      result.push(el);\n    }\n  }\n\n  return result;\n}\n\nfunction toTree(node) {\n  if (node == null) {\n    return null;\n  }\n\n  switch (node.tag) {\n    case HostRoot:\n      return childrenToTree(node.child);\n\n    case HostPortal:\n      return childrenToTree(node.child);\n\n    case ClassComponent:\n      return {\n        nodeType: 'component',\n        type: node.type,\n        props: assign({}, node.memoizedProps),\n        instance: node.stateNode,\n        rendered: childrenToTree(node.child)\n      };\n\n    case FunctionComponent:\n    case SimpleMemoComponent:\n      return {\n        nodeType: 'component',\n        type: node.type,\n        props: assign({}, node.memoizedProps),\n        instance: null,\n        rendered: childrenToTree(node.child)\n      };\n\n    case HostComponent:\n      {\n        return {\n          nodeType: 'host',\n          type: node.type,\n          props: assign({}, node.memoizedProps),\n          instance: null,\n          // TODO: use createNodeMock here somehow?\n          rendered: flatten(nodeAndSiblingsArray(node.child).map(toTree))\n        };\n      }\n\n    case HostText:\n      return node.stateNode.text;\n\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n    case Mode:\n    case Profiler:\n    case ForwardRef:\n    case MemoComponent:\n    case IncompleteClassComponent:\n    case ScopeComponent:\n      return childrenToTree(node.child);\n\n    default:\n      throw new Error(\"toTree() does not yet know how to handle nodes with tag=\" + node.tag);\n  }\n}\n\nvar validWrapperTypes = new Set([FunctionComponent, ClassComponent, HostComponent, ForwardRef, MemoComponent, SimpleMemoComponent, // Normally skipped, but used when there's more than one root child.\nHostRoot]);\n\nfunction getChildren(parent) {\n  var children = [];\n  var startingNode = parent;\n  var node = startingNode;\n\n  if (node.child === null) {\n    return children;\n  }\n\n  node.child.return = node;\n  node = node.child;\n\n  outer: while (true) {\n    var descend = false;\n\n    if (validWrapperTypes.has(node.tag)) {\n      children.push(wrapFiber(node));\n    } else if (node.tag === HostText) {\n      {\n        checkPropStringCoercion(node.memoizedProps, 'memoizedProps');\n      }\n\n      children.push('' + node.memoizedProps);\n    } else {\n      descend = true;\n    }\n\n    if (descend && node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === startingNode) {\n        break outer;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return children;\n}\n\nvar ReactTestInstance = /*#__PURE__*/function () {\n  var _proto = ReactTestInstance.prototype;\n\n  _proto._currentFiber = function _currentFiber() {\n    // Throws if this component has been unmounted.\n    var fiber = findCurrentFiberUsingSlowPath(this._fiber);\n\n    if (fiber === null) {\n      throw new Error(\"Can't read from currently-mounting component. This error is likely \" + 'caused by a bug in React. Please file an issue.');\n    }\n\n    return fiber;\n  };\n\n  function ReactTestInstance(fiber) {\n    if (!validWrapperTypes.has(fiber.tag)) {\n      throw new Error(\"Unexpected object passed to ReactTestInstance constructor (tag: \" + fiber.tag + \"). \" + 'This is probably a bug in React.');\n    }\n\n    this._fiber = fiber;\n  }\n\n  // Custom search functions\n  _proto.find = function find(predicate) {\n    return expectOne(this.findAll(predicate, {\n      deep: false\n    }), \"matching custom predicate: \" + predicate.toString());\n  };\n\n  _proto.findByType = function findByType(type) {\n    return expectOne(this.findAllByType(type, {\n      deep: false\n    }), \"with node type: \\\"\" + (getComponentNameFromType(type) || 'Unknown') + \"\\\"\");\n  };\n\n  _proto.findByProps = function findByProps(props) {\n    return expectOne(this.findAllByProps(props, {\n      deep: false\n    }), \"with props: \" + JSON.stringify(props));\n  };\n\n  _proto.findAll = function findAll(predicate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, predicate, options);\n  };\n\n  _proto.findAllByType = function findAllByType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, function (node) {\n      return node.type === type;\n    }, options);\n  };\n\n  _proto.findAllByProps = function findAllByProps(props) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, function (node) {\n      return node.props && propsMatch(node.props, props);\n    }, options);\n  };\n\n  _createClass(ReactTestInstance, [{\n    key: \"instance\",\n    get: function () {\n      if (this._fiber.tag === HostComponent) {\n        return getPublicInstance(this._fiber.stateNode);\n      } else {\n        return this._fiber.stateNode;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function () {\n      return this._fiber.type;\n    }\n  }, {\n    key: \"props\",\n    get: function () {\n      return this._currentFiber().memoizedProps;\n    }\n  }, {\n    key: \"parent\",\n    get: function () {\n      var parent = this._fiber.return;\n\n      while (parent !== null) {\n        if (validWrapperTypes.has(parent.tag)) {\n          if (parent.tag === HostRoot) {\n            // Special case: we only \"materialize\" instances for roots\n            // if they have more than a single child. So we'll check that now.\n            if (getChildren(parent).length < 2) {\n              return null;\n            }\n          }\n\n          return wrapFiber(parent);\n        }\n\n        parent = parent.return;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"children\",\n    get: function () {\n      return getChildren(this._currentFiber());\n    }\n  }]);\n\n  return ReactTestInstance;\n}();\n\nfunction _findAll(root, predicate, options) {\n  var deep = options ? options.deep : true;\n  var results = [];\n\n  if (predicate(root)) {\n    results.push(root);\n\n    if (!deep) {\n      return results;\n    }\n  }\n\n  root.children.forEach(function (child) {\n    if (typeof child === 'string') {\n      return;\n    }\n\n    results.push.apply(results, _findAll(child, predicate, options));\n  });\n  return results;\n}\n\nfunction expectOne(all, message) {\n  if (all.length === 1) {\n    return all[0];\n  }\n\n  var prefix = all.length === 0 ? 'No instances found ' : \"Expected 1 but found \" + all.length + \" instances \";\n  throw new Error(prefix + message);\n}\n\nfunction propsMatch(props, filter) {\n  for (var key in filter) {\n    if (props[key] !== filter[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction onRecoverableError(error$1) {\n  // TODO: Expose onRecoverableError option to userspace\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n  error(error$1);\n}\n\nfunction create(element, options) {\n  var createNodeMock = defaultTestOptions.createNodeMock;\n  var isConcurrent = false;\n  var isStrictMode = false;\n  var concurrentUpdatesByDefault = null;\n\n  if (typeof options === 'object' && options !== null) {\n    if (typeof options.createNodeMock === 'function') {\n      createNodeMock = options.createNodeMock;\n    }\n\n    if (options.unstable_isConcurrent === true) {\n      isConcurrent = true;\n    }\n\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n  }\n\n  var container = {\n    children: [],\n    createNodeMock: createNodeMock,\n    tag: 'CONTAINER'\n  };\n  var root = createContainer(container, isConcurrent ? ConcurrentRoot : LegacyRoot, null, isStrictMode, concurrentUpdatesByDefault, '', onRecoverableError);\n\n  if (root == null) {\n    throw new Error('something went wrong');\n  }\n\n  updateContainer(element, root, null, null);\n  var entry = {\n    _Scheduler: Scheduler,\n    root: undefined,\n    // makes flow happy\n    // we define a 'getter' for 'root' below using 'Object.defineProperty'\n    toJSON: function () {\n      if (root == null || root.current == null || container == null) {\n        return null;\n      }\n\n      if (container.children.length === 0) {\n        return null;\n      }\n\n      if (container.children.length === 1) {\n        return toJSON(container.children[0]);\n      }\n\n      if (container.children.length === 2 && container.children[0].isHidden === true && container.children[1].isHidden === false) {\n        // Omit timed out children from output entirely, including the fact that we\n        // temporarily wrap fallback and timed out children in an array.\n        return toJSON(container.children[1]);\n      }\n\n      var renderedChildren = null;\n\n      if (container.children && container.children.length) {\n        for (var i = 0; i < container.children.length; i++) {\n          var renderedChild = toJSON(container.children[i]);\n\n          if (renderedChild !== null) {\n            if (renderedChildren === null) {\n              renderedChildren = [renderedChild];\n            } else {\n              renderedChildren.push(renderedChild);\n            }\n          }\n        }\n      }\n\n      return renderedChildren;\n    },\n    toTree: function () {\n      if (root == null || root.current == null) {\n        return null;\n      }\n\n      return toTree(root.current);\n    },\n    update: function (newElement) {\n      if (root == null || root.current == null) {\n        return;\n      }\n\n      updateContainer(newElement, root, null, null);\n    },\n    unmount: function () {\n      if (root == null || root.current == null) {\n        return;\n      }\n\n      updateContainer(null, root, null, null);\n      container = null;\n      root = null;\n    },\n    getInstance: function () {\n      if (root == null || root.current == null) {\n        return null;\n      }\n\n      return getPublicRootInstance(root);\n    },\n    unstable_flushSync: flushSync\n  };\n  Object.defineProperty(entry, 'root', {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      if (root === null) {\n        throw new Error(\"Can't access .root on unmounted test renderer\");\n      }\n\n      var children = getChildren(root.current);\n\n      if (children.length === 0) {\n        throw new Error(\"Can't access .root on unmounted test renderer\");\n      } else if (children.length === 1) {\n        // Normally, we skip the root and just give you the child.\n        return children[0];\n      } else {\n        // However, we give you the root if there's more than one root child.\n        // We could make this the behavior for all cases but it would be a breaking change.\n        return wrapFiber(root.current);\n      }\n    }\n  });\n  return entry;\n}\n\nvar fiberToWrapper = new WeakMap();\n\nfunction wrapFiber(fiber) {\n  var wrapper = fiberToWrapper.get(fiber);\n\n  if (wrapper === undefined && fiber.alternate !== null) {\n    wrapper = fiberToWrapper.get(fiber.alternate);\n  }\n\n  if (wrapper === undefined) {\n    wrapper = new ReactTestInstance(fiber);\n    fiberToWrapper.set(fiber, wrapper);\n  }\n\n  return wrapper;\n} // Enable ReactTestRenderer to be used to test DevTools integration.\n\n\ninjectIntoDevTools({\n  findFiberByHostInstance: function () {\n    throw new Error('TestRenderer does not support findFiberByHostInstance()');\n  },\n  bundleType:  1 ,\n  version: ReactVersion,\n  rendererPackageName: 'react-test-renderer'\n});\n\nexports._Scheduler = Scheduler;\nexports.act = act;\nexports.create = create;\nexports.unstable_batchedUpdates = batchedUpdates;\n  })();\n}\n"],"mappings":"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","ignoreList":[]}