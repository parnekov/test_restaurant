95b5a5566c81600ebc6411b22fa9e09c
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault2(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault2(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault2(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault2(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault2(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NativeSearchBarCommands = exports.NativeSearchBar = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNativeScreens = require("react-native-screens");
var _reactNative = require("react-native");
var _SearchBarNativeComponent = _interopRequireWildcard(require("../fabric/SearchBarNativeComponent"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != typeof e && "function" != typeof e) return {
    default: e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n.default = e, t && t.set(e, n), n;
}
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var NativeSearchBar = exports.NativeSearchBar = _SearchBarNativeComponent.default;
var NativeSearchBarCommands = exports.NativeSearchBarCommands = _SearchBarNativeComponent.Commands;
var SearchBar = function (_react$default$Compon) {
  function SearchBar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, SearchBar);
    _this = _callSuper(this, SearchBar, [props]);
    _this.nativeSearchBarRef = _react.default.createRef();
    return _this;
  }
  (0, _inherits2.default)(SearchBar, _react$default$Compon);
  return (0, _createClass2.default)(SearchBar, [{
    key: "_callMethodWithRef",
    value: function _callMethodWithRef(method) {
      var ref = this.nativeSearchBarRef.current;
      if (ref) {
        method(ref);
      } else {
        console.warn('Reference to native search bar component has not been updated yet');
      }
    }
  }, {
    key: "blur",
    value: function blur() {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.blur(ref);
      });
    }
  }, {
    key: "focus",
    value: function focus() {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.focus(ref);
      });
    }
  }, {
    key: "toggleCancelButton",
    value: function toggleCancelButton(flag) {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.toggleCancelButton(ref, flag);
      });
    }
  }, {
    key: "clearText",
    value: function clearText() {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.clearText(ref);
      });
    }
  }, {
    key: "setText",
    value: function setText(text) {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.setText(ref, text);
      });
    }
  }, {
    key: "cancelSearch",
    value: function cancelSearch() {
      this._callMethodWithRef(function (ref) {
        return NativeSearchBarCommands.cancelSearch(ref);
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (!_reactNativeScreens.isSearchBarAvailableForCurrentPlatform) {
        console.warn('Importing SearchBar is only valid on iOS and Android devices.');
        return _reactNative.View;
      }
      return _react.default.createElement(NativeSearchBar, _extends({}, this.props, {
        ref: this.nativeSearchBarRef
      }));
    }
  }]);
}(_react.default.Component);
var _default = exports.default = SearchBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZVNjcmVlbnMiLCJfcmVhY3ROYXRpdmUiLCJfU2VhcmNoQmFyTmF0aXZlQ29tcG9uZW50IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJvYmoiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJhcHBseSIsIk5hdGl2ZVNlYXJjaEJhciIsImV4cG9ydHMiLCJOYXRpdmVTZWFyY2hCYXJDb21tYW5kcyIsIkNvbW1hbmRzIiwiU2VhcmNoQmFyIiwiX3JlYWN0JGRlZmF1bHQkQ29tcG9uIiwicHJvcHMiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY2FsbFN1cGVyIiwibmF0aXZlU2VhcmNoQmFyUmVmIiwiY3JlYXRlUmVmIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJ2YWx1ZSIsIl9jYWxsTWV0aG9kV2l0aFJlZiIsIm1ldGhvZCIsInJlZiIsImN1cnJlbnQiLCJjb25zb2xlIiwid2FybiIsImJsdXIiLCJmb2N1cyIsInRvZ2dsZUNhbmNlbEJ1dHRvbiIsImZsYWciLCJjbGVhclRleHQiLCJzZXRUZXh0IiwidGV4dCIsImNhbmNlbFNlYXJjaCIsInJlbmRlciIsImlzU2VhcmNoQmFyQXZhaWxhYmxlRm9yQ3VycmVudFBsYXRmb3JtIiwiVmlldyIsImNyZWF0ZUVsZW1lbnQiLCJDb21wb25lbnQiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NlYXJjaEJhci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsbUJBQUEsR0FBQUQsT0FBQTtBQUtBLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUdBLElBQUFHLHlCQUFBLEdBQUFDLHVCQUFBLENBQUFKLE9BQUE7QUFFNEMsU0FBQUsseUJBQUFDLENBQUE7RUFBQSx5QkFBQUMsT0FBQTtFQUFBLElBQUFDLENBQUEsT0FBQUQsT0FBQTtJQUFBRSxDQUFBLE9BQUFGLE9BQUE7RUFBQSxRQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQTtJQUFBLE9BQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBO0VBQUEsR0FBQUYsQ0FBQTtBQUFBO0FBQUEsU0FBQUYsd0JBQUFFLENBQUEsRUFBQUUsQ0FBQTtFQUFBLEtBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQTtFQUFBLGFBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUE7SUFBQUssT0FBQSxFQUFBTDtFQUFBO0VBQUEsSUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBO0VBQUEsSUFBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQTtFQUFBLElBQUFRLENBQUE7TUFBQUMsU0FBQTtJQUFBO0lBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUE7RUFBQSxTQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsSUFBQUgsTUFBQSxDQUFBSSxTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBakIsQ0FBQSxFQUFB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QUEsT0FBSWYsdUJBQXVCLENBQUNvQixLQUFLLENBQUNMLEdBQUcsQ0FBQztNQUFBLEVBQUM7SUFDcEU7RUFBQTtJQUFBbkIsR0FBQTtJQUFBZ0IsS0FBQSxFQUVBLFNBQUFTLG1CQUFtQkMsSUFBYSxFQUFFO01BQ2hDLElBQUksQ0FBQ1Qsa0JBQWtCLENBQUMsVUFBQUUsR0FBRztRQUFBLE9BQ3pCZix1QkFBdUIsQ0FBQ3FCLGtCQUFrQixDQUFDTixHQUFHLEVBQUVPLElBQUksQ0FDdEQ7TUFBQSxFQUFDO0lBQ0g7RUFBQTtJQUFBMUIsR0FBQTtJQUFBZ0IsS0FBQSxFQUVBLFNBQUFXLFVBQUEsRUFBWTtNQUNWLElBQUksQ0FBQ1Ysa0JBQWtCLENBQUMsVUFBQUUsR0FBRztRQUFBLE9BQUlmLHVCQUF1QixDQUFDdUIsU0FBUyxDQUFDUixHQUFHLENBQUM7TUFBQSxFQUFDO0lBQ3hFO0VBQUE7SUFBQW5CLEdBQUE7SUFBQWdCLEtBQUEsRUFFQSxTQUFBWSxRQUFRQyxJQUFZLEVBQUU7TUFDcEIsSUFBSSxDQUFDWixrQkFBa0IsQ0FBQyxVQUFBRSxHQUFHO1FBQUEsT0FBSWYsdUJBQXVCLENBQUN3QixPQUFPLENBQUNULEdBQUcsRUFBRVUsSUFBSSxDQUFDO01BQUEsRUFBQztJQUM1RTtFQUFBO0lBQUE3QixHQUFBO0lBQUFnQixLQUFBLEVBRUEsU0FBQWMsYUFBQSxFQUFlO01BQ2IsSUFBSSxDQUFDYixrQkFBa0IsQ0FBQyxVQUFBRSxHQUFHO1FBQUEsT0FBSWYsdUJBQXVCLENBQUMwQixZQUFZLENBQUNYLEdBQUcsQ0FBQztNQUFBLEVBQUM7SUFDM0U7RUFBQTtJQUFBbkIsR0FBQTtJQUFBZ0IsS0FBQSxFQUVBLFNBQUFlLE9BQUEsRUFBUztNQUNQLElBQUksQ0FBQ2hFLG1CQUFBLENBQUFpRSxzQ0FBc0MsRUFBRTtRQUMzQ1gsT0FBTyxDQUFDQyxJQUFJLENBQ1YsK0RBQ0YsQ0FBQztRQUNELE9BQU90RCxZQUFBLENBQUFpRSxJQUFJO01BQ2I7TUFFQSxPQUFPckUsTUFBQSxDQUFBYSxPQUFBLENBQUF5RCxhQUFBLENBQUNoQyxlQUFlLEVBQUFULFFBQUEsS0FBSyxJQUFJLENBQUNlLEtBQUs7UUFBRVcsR0FBRyxFQUFFLElBQUksQ0FBQ1A7TUFBbUIsRUFBRSxDQUFDO0lBQzFFO0VBQUE7QUFBQSxFQXREc0JoRCxNQUFBLENBQUFhLE9BQUssQ0FBQzBELFNBQVM7QUF1RHRDLElBQUFDLFFBQUEsR0FBQWpDLE9BQUEsQ0FBQTFCLE9BQUEsR0FFYzZCLFNBQVMiLCJpZ25vcmVMaXN0IjpbXX0=