d5a3f8fd60a4db0f67c366ed76229160
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var CloseIcon = function CloseIcon(props) {
  return (0, _jsxRuntime.jsx)(_reactNativeSvg.default, Object.assign({
    width: props.size || 21,
    height: props.size || 21,
    viewBox: "0 -0.5 21 21"
  }, props, {
    children: (0, _jsxRuntime.jsx)(_reactNativeSvg.Path, {
      fill: "#000",
      fillRule: "evenodd",
      d: "M12.018 10 21 18.554 19.48 20l-8.98-8.554L1.518 20 0 18.554 8.98 10 0 1.446 1.518 0 10.5 8.554 19.48 0 21 1.446z"
    })
  }));
};
var _default = exports.default = CloseIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZVN2ZyIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiQ2xvc2VJY29uIiwicHJvcHMiLCJqc3giLCJhc3NpZ24iLCJ3aWR0aCIsInNpemUiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiY2hpbGRyZW4iLCJQYXRoIiwiZmlsbCIsImZpbGxSdWxlIiwiZCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkNsb3NlSWNvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogUkVBQ1QgKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qIE1PRFVMRVMgKi9cbmltcG9ydCBTdmcsIHtQYXRoLCBTdmdQcm9wc30gZnJvbSAncmVhY3QtbmF0aXZlLXN2Zyc7XG5cbmNvbnN0IENsb3NlSWNvbiA9IChwcm9wczogU3ZnUHJvcHMgJiB7Y29sb3I/OiBzdHJpbmc7IHNpemU/OiBudW1iZXJ9KSA9PiAoXG4gIDxTdmdcbiAgICB3aWR0aD17cHJvcHMuc2l6ZSB8fCAyMX1cbiAgICBoZWlnaHQ9e3Byb3BzLnNpemUgfHwgMjF9XG4gICAgdmlld0JveD1cIjAgLTAuNSAyMSAyMVwiXG4gICAgey4uLnByb3BzfT5cbiAgICA8UGF0aFxuICAgICAgZmlsbD1cIiMwMDBcIlxuICAgICAgZmlsbFJ1bGU9XCJldmVub2RkXCJcbiAgICAgIGQ9XCJNMTIuMDE4IDEwIDIxIDE4LjU1NCAxOS40OCAyMGwtOC45OC04LjU1NEwxLjUxOCAyMCAwIDE4LjU1NCA4Ljk4IDEwIDAgMS40NDYgMS41MTggMCAxMC41IDguNTU0IDE5LjQ4IDAgMjEgMS40NDZ6XCJcbiAgICAvPlxuICA8L1N2Zz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IENsb3NlSWNvbjtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLGVBQUEsR0FBQUYsdUJBQUEsQ0FBQUMsT0FBQTtBQUFxRCxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQUwsd0JBQUFLLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxXQUFBSyxPQUFBLEVBQUFMLENBQUEsUUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBLE9BQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENBQUEsVUFBQUcsQ0FBQSxDQUFBSSxHQUFBLENBQUFQLENBQUEsT0FBQVEsQ0FBQSxLQUFBQyxTQUFBLFVBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsQ0FBQSxJQUFBZCxDQUFBLG9CQUFBYyxDQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxDQUFBLFNBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQSxVQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUEsWUFBQU4sQ0FBQSxDQUFBSCxPQUFBLEdBQUFMLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBRXJELElBQU1XLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFJQyxLQUFpRDtFQUFBLE9BQ2xFLElBQUF0QixXQUFBLENBQUF1QixHQUFBLEVBQUN4QixlQUFBLENBQUFRLE9BQUcsRUFBQU0sTUFBQSxDQUFBVyxNQUFBO0lBQ0ZDLEtBQUssRUFBRUgsS0FBSyxDQUFDSSxJQUFJLElBQUksRUFBRztJQUN4QkMsTUFBTSxFQUFFTCxLQUFLLENBQUNJLElBQUksSUFBSSxFQUFHO0lBQ3pCRSxPQUFPLEVBQUM7RUFBYyxHQUNsQk4sS0FBSztJQUFBTyxRQUFBLEVBQ1QsSUFBQTdCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQ3hCLGVBQUEsQ0FBQStCLElBQUk7TUFDSEMsSUFBSSxFQUFDLE1BQU07TUFDWEMsUUFBUSxFQUFDLFNBQVM7TUFDbEJDLENBQUMsRUFBQztJQUFrSCxDQUNySDtFQUFDLEVBQ0MsQ0FBQztBQUFBLENBQ1A7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQTVCLE9BQUEsR0FFYWMsU0FBUyIsImlnbm9yZUxpc3QiOltdfQ==