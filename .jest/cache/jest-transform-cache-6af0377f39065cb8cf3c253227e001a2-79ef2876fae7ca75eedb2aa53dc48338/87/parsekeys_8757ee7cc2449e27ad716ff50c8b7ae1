86dc0fec52c1ee359dd57df5366ceb98
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseKeys = parseKeys;
var knownKeys = new Set(['Enter', 'Backspace']);
function parseKeys(text) {
  var result = [];
  var remainingText = text;
  while (remainingText) {
    var _getNextToken = getNextToken(remainingText),
      _getNextToken2 = (0, _slicedToArray2.default)(_getNextToken, 2),
      token = _getNextToken2[0],
      rest = _getNextToken2[1];
    if (token.length > 1 && !knownKeys.has(token)) {
      throw new Error(`Unknown key "${token}" in "${text}"`);
    }
    result.push(token);
    remainingText = rest;
  }
  return result;
}
function getNextToken(text) {
  if (text[0] === '{' && text[1] === '{') {
    return ['{', text.slice(2)];
  }
  if (text[0] === '{') {
    var endIndex = text.indexOf('}');
    if (endIndex === -1) {
      throw new Error(`Invalid key sequence "${text}"`);
    }
    return [text.slice(1, endIndex), text.slice(endIndex + 1)];
  }
  if (text[0] === '\n') {
    return ['Enter', text.slice(1)];
  }
  return [text[0], text.slice(1)];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJrbm93bktleXMiLCJTZXQiLCJwYXJzZUtleXMiLCJ0ZXh0IiwicmVzdWx0IiwicmVtYWluaW5nVGV4dCIsIl9nZXROZXh0VG9rZW4iLCJnZXROZXh0VG9rZW4iLCJfZ2V0TmV4dFRva2VuMiIsIl9zbGljZWRUb0FycmF5MiIsImRlZmF1bHQiLCJ0b2tlbiIsInJlc3QiLCJsZW5ndGgiLCJoYXMiLCJFcnJvciIsInB1c2giLCJzbGljZSIsImVuZEluZGV4IiwiaW5kZXhPZiJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91c2VyLWV2ZW50L3R5cGUvcGFyc2Uta2V5cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBrbm93bktleXMgPSBuZXcgU2V0KFsnRW50ZXInLCAnQmFja3NwYWNlJ10pO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VLZXlzKHRleHQ6IHN0cmluZykge1xuICBjb25zdCByZXN1bHQgPSBbXTtcblxuICBsZXQgcmVtYWluaW5nVGV4dCA9IHRleHQ7XG4gIHdoaWxlIChyZW1haW5pbmdUZXh0KSB7XG4gICAgY29uc3QgW3Rva2VuLCByZXN0XSA9IGdldE5leHRUb2tlbihyZW1haW5pbmdUZXh0KTtcbiAgICBpZiAodG9rZW4ubGVuZ3RoID4gMSAmJiAha25vd25LZXlzLmhhcyh0b2tlbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBrZXkgXCIke3Rva2VufVwiIGluIFwiJHt0ZXh0fVwiYCk7XG4gICAgfVxuXG4gICAgcmVzdWx0LnB1c2godG9rZW4pO1xuICAgIHJlbWFpbmluZ1RleHQgPSByZXN0O1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gZ2V0TmV4dFRva2VuKHRleHQ6IHN0cmluZyk6IFtzdHJpbmcsIHN0cmluZ10ge1xuICAvLyBEZXRlY3QgYHt7YCA9PiBlc2NhcGVkIGB7YFxuICBpZiAodGV4dFswXSA9PT0gJ3snICYmIHRleHRbMV0gPT09ICd7Jykge1xuICAgIHJldHVybiBbJ3snLCB0ZXh0LnNsaWNlKDIpXTtcbiAgfVxuXG4gIC8vIERldGVjdCBge2tleX1gID0+IHNwZWNpYWwga2V5XG4gIGlmICh0ZXh0WzBdID09PSAneycpIHtcbiAgICBjb25zdCBlbmRJbmRleCA9IHRleHQuaW5kZXhPZignfScpO1xuICAgIGlmIChlbmRJbmRleCA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBrZXkgc2VxdWVuY2UgXCIke3RleHR9XCJgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gW3RleHQuc2xpY2UoMSwgZW5kSW5kZXgpLCB0ZXh0LnNsaWNlKGVuZEluZGV4ICsgMSldO1xuICB9XG5cbiAgaWYgKHRleHRbMF0gPT09ICdcXG4nKSB7XG4gICAgcmV0dXJuIFsnRW50ZXInLCB0ZXh0LnNsaWNlKDEpXTtcbiAgfVxuXG4gIHJldHVybiBbdGV4dFswXSwgdGV4dC5zbGljZSgxKV07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBTUEsU0FBUyxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztBQUUxQyxTQUFTQyxTQUFTQSxDQUFDQyxJQUFZLEVBQUU7RUFDdEMsSUFBTUMsTUFBTSxHQUFHLEVBQUU7RUFFakIsSUFBSUMsYUFBYSxHQUFHRixJQUFJO0VBQ3hCLE9BQU9FLGFBQWEsRUFBRTtJQUNwQixJQUFBQyxhQUFBLEdBQXNCQyxZQUFZLENBQUNGLGFBQWEsQ0FBQztNQUFBRyxjQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFBSixhQUFBO01BQTFDSyxLQUFLLEdBQUFILGNBQUE7TUFBRUksSUFBSSxHQUFBSixjQUFBO0lBQ2xCLElBQUlHLEtBQUssQ0FBQ0UsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDYixTQUFTLENBQUNjLEdBQUcsQ0FBQ0gsS0FBSyxDQUFDLEVBQUU7TUFDN0MsTUFBTSxJQUFJSSxLQUFLLENBQUUsZ0JBQWVKLEtBQU0sU0FBUVIsSUFBSyxHQUFFLENBQUM7SUFDeEQ7SUFFQUMsTUFBTSxDQUFDWSxJQUFJLENBQUNMLEtBQUssQ0FBQztJQUNsQk4sYUFBYSxHQUFHTyxJQUFJO0VBQ3RCO0VBRUEsT0FBT1IsTUFBTTtBQUNmO0FBRUEsU0FBU0csWUFBWUEsQ0FBQ0osSUFBWSxFQUFvQjtFQUVwRCxJQUFJQSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJQSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO0lBQ3RDLE9BQU8sQ0FBQyxHQUFHLEVBQUVBLElBQUksQ0FBQ2MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQzdCO0VBR0EsSUFBSWQsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRTtJQUNuQixJQUFNZSxRQUFRLEdBQUdmLElBQUksQ0FBQ2dCLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDbEMsSUFBSUQsUUFBUSxLQUFLLENBQUMsQ0FBQyxFQUFFO01BQ25CLE1BQU0sSUFBSUgsS0FBSyxDQUFFLHlCQUF3QlosSUFBSyxHQUFFLENBQUM7SUFDbkQ7SUFFQSxPQUFPLENBQUNBLElBQUksQ0FBQ2MsS0FBSyxDQUFDLENBQUMsRUFBRUMsUUFBUSxDQUFDLEVBQUVmLElBQUksQ0FBQ2MsS0FBSyxDQUFDQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDNUQ7RUFFQSxJQUFJZixJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFO0lBQ3BCLE9BQU8sQ0FBQyxPQUFPLEVBQUVBLElBQUksQ0FBQ2MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ2pDO0VBRUEsT0FBTyxDQUFDZCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVBLElBQUksQ0FBQ2MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDIiwiaWdub3JlTGlzdCI6W119