5678f048a7b9b4399808fb7b2ef15e3b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.apiRequest = void 0;
var _reactNativeConfig = _interopRequireDefault(require("react-native-config"));
var apiRequest = exports.apiRequest = function apiRequest(path) {
  var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
  var body = arguments.length > 2 ? arguments[2] : undefined;
  return new Promise(function (resolve, reject) {
    var HEADERS = {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var ENDPOINT = `${_reactNativeConfig.default.BASE_URL}${path}`;
    var INIT = {
      headers: HEADERS,
      method: method,
      body: JSON.stringify(body)
    };
    console.log(`ENDPOINT ======>${ENDPOINT}`);
    console.log(`BODY ======>${INIT.body}`);
    fetch(ENDPOINT, INIT).then(function (response) {
      console.log('RESPONSE STATUS', response.status);
      if (!response.ok) {
        reject({
          status: response.status
        });
      }
      return response.json();
    }).then(function (json) {
      resolve(json);
    }).catch(function (error) {
      console.log('ERROR', error);
      reject(error);
    });
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmVDb25maWciLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImFwaVJlcXVlc3QiLCJleHBvcnRzIiwicGF0aCIsIm1ldGhvZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImJvZHkiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIkhFQURFUlMiLCJBY2NlcHQiLCJFTkRQT0lOVCIsIkNvbmZpZyIsIkJBU0VfVVJMIiwiSU5JVCIsImhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImxvZyIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwic3RhdHVzIiwib2siLCJqc29uIiwiY2F0Y2giLCJlcnJvciJdLCJzb3VyY2VzIjpbImFwaVNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogRU5WICovXG5pbXBvcnQgQ29uZmlnIGZyb20gJ3JlYWN0LW5hdGl2ZS1jb25maWcnO1xuXG5leHBvcnQgY29uc3QgYXBpUmVxdWVzdCA9IChcbiAgcGF0aDogc3RyaW5nLFxuICBtZXRob2Q6ICdHRVQnIHwgJ1BPU1QnID0gJ0dFVCcsXG4gIGJvZHk/OiBvYmplY3QsXG4pID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBIRUFERVJTID0ge1xuICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIH07XG5cbiAgICBjb25zdCBFTkRQT0lOVDogUmVxdWVzdEluZm8gPSBgJHtDb25maWcuQkFTRV9VUkx9JHtwYXRofWA7XG4gICAgY29uc3QgSU5JVDogUmVxdWVzdEluaXQgPSB7XG4gICAgICBoZWFkZXJzOiBIRUFERVJTLFxuICAgICAgbWV0aG9kLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKGBFTkRQT0lOVCA9PT09PT0+JHtFTkRQT0lOVH1gKTtcbiAgICBjb25zb2xlLmxvZyhgQk9EWSA9PT09PT0+JHtJTklULmJvZHl9YCk7XG5cbiAgICBmZXRjaChFTkRQT0lOVCwgSU5JVClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1JFU1BPTlNFIFNUQVRVUycsIHJlc3BvbnNlLnN0YXR1cyk7XG5cbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgIHJlamVjdCh7c3RhdHVzOiByZXNwb25zZS5zdGF0dXN9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oanNvbiA9PiB7XG4gICAgICAgIHJlc29sdmUoanNvbik7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0VSUk9SJywgZXJyb3IpO1xuXG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICB9KTtcbiAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLGtCQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFTyxJQUFNQyxVQUFVLEdBQUFDLE9BQUEsQ0FBQUQsVUFBQSxHQUFHLFNBQWJBLFVBQVVBLENBQ3JCRSxJQUFZLEVBR1Q7RUFBQSxJQUZIQyxNQUFzQixHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxLQUFLO0VBQUEsSUFDOUJHLElBQWEsR0FBQUgsU0FBQSxDQUFBQyxNQUFBLE9BQUFELFNBQUEsTUFBQUUsU0FBQTtFQUViLE9BQU8sSUFBSUUsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO0lBQ3RDLElBQU1DLE9BQU8sR0FBRztNQUNkQyxNQUFNLEVBQUUsa0JBQWtCO01BQzFCLGNBQWMsRUFBRTtJQUNsQixDQUFDO0lBRUQsSUFBTUMsUUFBcUIsR0FBSSxHQUFFQywwQkFBTSxDQUFDQyxRQUFTLEdBQUViLElBQUssRUFBQztJQUN6RCxJQUFNYyxJQUFpQixHQUFHO01BQ3hCQyxPQUFPLEVBQUVOLE9BQU87TUFDaEJSLE1BQU0sRUFBTkEsTUFBTTtNQUNOSSxJQUFJLEVBQUVXLElBQUksQ0FBQ0MsU0FBUyxDQUFDWixJQUFJO0lBQzNCLENBQUM7SUFFRGEsT0FBTyxDQUFDQyxHQUFHLENBQUUsbUJBQWtCUixRQUFTLEVBQUMsQ0FBQztJQUMxQ08sT0FBTyxDQUFDQyxHQUFHLENBQUUsZUFBY0wsSUFBSSxDQUFDVCxJQUFLLEVBQUMsQ0FBQztJQUV2Q2UsS0FBSyxDQUFDVCxRQUFRLEVBQUVHLElBQUksQ0FBQyxDQUNsQk8sSUFBSSxDQUFDLFVBQUFDLFFBQVEsRUFBSTtNQUNoQkosT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCLEVBQUVHLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDO01BRS9DLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxFQUFFLEVBQUU7UUFDaEJoQixNQUFNLENBQUM7VUFBQ2UsTUFBTSxFQUFFRCxRQUFRLENBQUNDO1FBQU0sQ0FBQyxDQUFDO01BQ25DO01BRUEsT0FBT0QsUUFBUSxDQUFDRyxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDLENBQUMsQ0FDREosSUFBSSxDQUFDLFVBQUFJLElBQUksRUFBSTtNQUNabEIsT0FBTyxDQUFDa0IsSUFBSSxDQUFDO0lBQ2YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFBQyxLQUFLLEVBQUk7TUFDZFQsT0FBTyxDQUFDQyxHQUFHLENBQUMsT0FBTyxFQUFFUSxLQUFLLENBQUM7TUFFM0JuQixNQUFNLENBQUNtQixLQUFLLENBQUM7SUFDZixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7QUFDSixDQUFDIiwiaWdub3JlTGlzdCI6W119