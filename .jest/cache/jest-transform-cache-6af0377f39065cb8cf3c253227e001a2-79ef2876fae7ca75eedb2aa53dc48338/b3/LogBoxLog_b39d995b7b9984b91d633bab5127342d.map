{"version":3,"names":["LogBoxSymbolication","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","LogBoxLog","data","_classCallCheck2","symbolicated","error","stack","status","level","type","message","category","componentStack","codeFrame","isComponentError","extraData","count","_createClass2","key","value","incrementCount","getAvailableStack","retrySymbolicate","callback","deleteStack","handleSymbolicate","symbolicate","_this","updateStatus","then","lastStatus","_default","exports"],"sources":["LogBoxLog.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {Stack} from './LogBoxSymbolication';\nimport type {\n  Category,\n  CodeFrame,\n  ComponentStack,\n  Message,\n} from './parseLogBoxLog';\n\nimport * as LogBoxSymbolication from './LogBoxSymbolication';\n\ntype SymbolicationStatus = 'NONE' | 'PENDING' | 'COMPLETE' | 'FAILED';\n\nexport type LogLevel = 'warn' | 'error' | 'fatal' | 'syntax';\n\nexport type LogBoxLogData = $ReadOnly<{|\n  level: LogLevel,\n  type?: ?string,\n  message: Message,\n  stack: Stack,\n  category: string,\n  componentStack: ComponentStack,\n  codeFrame?: ?CodeFrame,\n  isComponentError: boolean,\n  extraData?: mixed,\n|}>;\n\nclass LogBoxLog {\n  message: Message;\n  type: ?string;\n  category: Category;\n  componentStack: ComponentStack;\n  stack: Stack;\n  count: number;\n  level: LogLevel;\n  codeFrame: ?CodeFrame;\n  isComponentError: boolean;\n  extraData: mixed | void;\n  symbolicated:\n    | $ReadOnly<{|error: null, stack: null, status: 'NONE'|}>\n    | $ReadOnly<{|error: null, stack: null, status: 'PENDING'|}>\n    | $ReadOnly<{|error: null, stack: Stack, status: 'COMPLETE'|}>\n    | $ReadOnly<{|error: Error, stack: null, status: 'FAILED'|}> = {\n    error: null,\n    stack: null,\n    status: 'NONE',\n  };\n\n  constructor(data: LogBoxLogData) {\n    this.level = data.level;\n    this.type = data.type;\n    this.message = data.message;\n    this.stack = data.stack;\n    this.category = data.category;\n    this.componentStack = data.componentStack;\n    this.codeFrame = data.codeFrame;\n    this.isComponentError = data.isComponentError;\n    this.extraData = data.extraData;\n    this.count = 1;\n  }\n\n  incrementCount(): void {\n    this.count += 1;\n  }\n\n  getAvailableStack(): Stack {\n    return this.symbolicated.status === 'COMPLETE'\n      ? this.symbolicated.stack\n      : this.stack;\n  }\n\n  retrySymbolicate(callback?: (status: SymbolicationStatus) => void): void {\n    if (this.symbolicated.status !== 'COMPLETE') {\n      LogBoxSymbolication.deleteStack(this.stack);\n      this.handleSymbolicate(callback);\n    }\n  }\n\n  symbolicate(callback?: (status: SymbolicationStatus) => void): void {\n    if (this.symbolicated.status === 'NONE') {\n      this.handleSymbolicate(callback);\n    }\n  }\n\n  handleSymbolicate(callback?: (status: SymbolicationStatus) => void): void {\n    if (this.symbolicated.status !== 'PENDING') {\n      this.updateStatus(null, null, null, callback);\n      LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(\n        data => {\n          this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n        },\n        error => {\n          this.updateStatus(error, null, null, callback);\n        },\n      );\n    }\n  }\n\n  updateStatus(\n    error: ?Error,\n    stack: ?Stack,\n    codeFrame: ?CodeFrame,\n    callback?: (status: SymbolicationStatus) => void,\n  ): void {\n    const lastStatus = this.symbolicated.status;\n    if (error != null) {\n      this.symbolicated = {\n        error,\n        stack: null,\n        status: 'FAILED',\n      };\n    } else if (stack != null) {\n      if (codeFrame) {\n        this.codeFrame = codeFrame;\n      }\n\n      this.symbolicated = {\n        error: null,\n        stack,\n        status: 'COMPLETE',\n      };\n    } else {\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'PENDING',\n      };\n    }\n\n    if (callback && lastStatus !== this.symbolicated.status) {\n      callback(this.symbolicated.status);\n    }\n  }\n}\n\nexport default LogBoxLog;\n"],"mappings":";;;;;;;AAkBA,IAAAA,mBAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA6D,SAAAC,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA,IAkBvDW,SAAS;EAqBb,SAAAA,UAAYC,IAAmB,EAAE;IAAA,IAAAC,gBAAA,CAAAhB,OAAA,QAAAc,SAAA;IAAA,KAVjCG,YAAY,GAIqD;MAC/DC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE;IACV,CAAC;IAGC,IAAI,CAACC,KAAK,GAAGN,IAAI,CAACM,KAAK;IACvB,IAAI,CAACC,IAAI,GAAGP,IAAI,CAACO,IAAI;IACrB,IAAI,CAACC,OAAO,GAAGR,IAAI,CAACQ,OAAO;IAC3B,IAAI,CAACJ,KAAK,GAAGJ,IAAI,CAACI,KAAK;IACvB,IAAI,CAACK,QAAQ,GAAGT,IAAI,CAACS,QAAQ;IAC7B,IAAI,CAACC,cAAc,GAAGV,IAAI,CAACU,cAAc;IACzC,IAAI,CAACC,SAAS,GAAGX,IAAI,CAACW,SAAS;IAC/B,IAAI,CAACC,gBAAgB,GAAGZ,IAAI,CAACY,gBAAgB;IAC7C,IAAI,CAACC,SAAS,GAAGb,IAAI,CAACa,SAAS;IAC/B,IAAI,CAACC,KAAK,GAAG,CAAC;EAChB;EAAC,WAAAC,aAAA,CAAA9B,OAAA,EAAAc,SAAA;IAAAiB,GAAA;IAAAC,KAAA,EAED,SAAAC,eAAA,EAAuB;MACrB,IAAI,CAACJ,KAAK,IAAI,CAAC;IACjB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAE,kBAAA,EAA2B;MACzB,OAAO,IAAI,CAACjB,YAAY,CAACG,MAAM,KAAK,UAAU,GAC1C,IAAI,CAACH,YAAY,CAACE,KAAK,GACvB,IAAI,CAACA,KAAK;IAChB;EAAC;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAG,iBAAiBC,QAAgD,EAAQ;MACvE,IAAI,IAAI,CAACnB,YAAY,CAACG,MAAM,KAAK,UAAU,EAAE;QAC3C7B,mBAAmB,CAAC8C,WAAW,CAAC,IAAI,CAAClB,KAAK,CAAC;QAC3C,IAAI,CAACmB,iBAAiB,CAACF,QAAQ,CAAC;MAClC;IACF;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAO,YAAYH,QAAgD,EAAQ;MAClE,IAAI,IAAI,CAACnB,YAAY,CAACG,MAAM,KAAK,MAAM,EAAE;QACvC,IAAI,CAACkB,iBAAiB,CAACF,QAAQ,CAAC;MAClC;IACF;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAM,kBAAkBF,QAAgD,EAAQ;MAAA,IAAAI,KAAA;MACxE,IAAI,IAAI,CAACvB,YAAY,CAACG,MAAM,KAAK,SAAS,EAAE;QAC1C,IAAI,CAACqB,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEL,QAAQ,CAAC;QAC7C7C,mBAAmB,CAACgD,WAAW,CAAC,IAAI,CAACpB,KAAK,EAAE,IAAI,CAACS,SAAS,CAAC,CAACc,IAAI,CAC9D,UAAA3B,IAAI,EAAI;UACNyB,KAAI,CAACC,YAAY,CAAC,IAAI,EAAE1B,IAAI,oBAAJA,IAAI,CAAEI,KAAK,EAAEJ,IAAI,oBAAJA,IAAI,CAAEW,SAAS,EAAEU,QAAQ,CAAC;QACjE,CAAC,EACD,UAAAlB,KAAK,EAAI;UACPsB,KAAI,CAACC,YAAY,CAACvB,KAAK,EAAE,IAAI,EAAE,IAAI,EAAEkB,QAAQ,CAAC;QAChD,CACF,CAAC;MACH;IACF;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAS,aACEvB,KAAa,EACbC,KAAa,EACbO,SAAqB,EACrBU,QAAgD,EAC1C;MACN,IAAMO,UAAU,GAAG,IAAI,CAAC1B,YAAY,CAACG,MAAM;MAC3C,IAAIF,KAAK,IAAI,IAAI,EAAE;QACjB,IAAI,CAACD,YAAY,GAAG;UAClBC,KAAK,EAALA,KAAK;UACLC,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE;QACV,CAAC;MACH,CAAC,MAAM,IAAID,KAAK,IAAI,IAAI,EAAE;QACxB,IAAIO,SAAS,EAAE;UACb,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC5B;QAEA,IAAI,CAACT,YAAY,GAAG;UAClBC,KAAK,EAAE,IAAI;UACXC,KAAK,EAALA,KAAK;UACLC,MAAM,EAAE;QACV,CAAC;MACH,CAAC,MAAM;QACL,IAAI,CAACH,YAAY,GAAG;UAClBC,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE;QACV,CAAC;MACH;MAEA,IAAIgB,QAAQ,IAAIO,UAAU,KAAK,IAAI,CAAC1B,YAAY,CAACG,MAAM,EAAE;QACvDgB,QAAQ,CAAC,IAAI,CAACnB,YAAY,CAACG,MAAM,CAAC;MACpC;IACF;EAAC;AAAA;AAAA,IAAAwB,QAAA,GAAAC,OAAA,CAAA7C,OAAA,GAGYc,SAAS","ignoreList":[]}